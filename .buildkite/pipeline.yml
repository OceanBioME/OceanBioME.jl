env:
  JULIA_VERSION: "1.10.10"
  JULIA_PATH: /var/lib/buildkite-agent/julia
  DATADEPS_ALWAYS_ACCEPT: true
  BUILDKITE_HOME: "/var/lib/buildkite-agent"
  JULIA_DEPOT_PATH: "$BUILDKITE_HOME/.julia-oceananigans"
  JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
  OCEANBIOME_DIR: "$HOME/Oceananigans.jl-$BUILDKITE_BUILD_NUMBER"
  JULIAUP: /var/lib/buildkite-agent/.juliaup/bin/juliaup
  JULIA: /var/lib/buildkite-agent/.juliaup/bin/julia

steps:
  - label: "Upload"
    command: |
      cat << 'EOF' | buildkite-agent pipeline upload
      steps:
        - label: ":building_construction: initialize environment"
          key: "init"
          command: |
            $JULIAUP add $JULIA_VERSION
      
            mkdir -p "$OCEANBIOME_DIR"
            rsync -a . "$OCEANBIOME_DIR/"
            cd "$OCEANBIOME_DIR"
      
            $JULIA +$JULIA_VERSION -O0 --color=yes --project -e 'using Pkg; Pkg.instantiate()'
            $JULIA +$JULIA_VERSION --color=yes --project=docs/ -e \
              'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
          notify:
            - github_commit_status:
                context: "Initialise environment"
          agents:
            hostname: "$BUILDKITE_AGENT_META_DATA_HOSTNAME"
      
        - label: ":speedboat: GPU unit tests"
          commands: |
            cd "$OCEANBIOME_DIR"
            $JULIA +$JULIA_VERSION -O0 --color=yes --project -e 'using Pkg; Pkg.test()'
          depends_on: "init"
          notify:
            - github_commit_status:
                context: "GPU tests"
          agents:
            hostname: "$BUILDKITE_AGENT_META_DATA_HOSTNAME"
          
        - label: ":rowboat: CPU unit tests"
          env:
           CUDA_VISIBLE_DEVICES: "-1"
          commands: |
            cd "$OCEANBIOME_DIR"
            $JULIA +$JULIA_VERSION -O0 --color=yes --project -e 'using Pkg; Pkg.test()'
          depends_on: "init"
          notify:
            - github_commit_status:
                context: "CPU tests"
          agents:
            hostname: "$BUILDKITE_AGENT_META_DATA_HOSTNAME"
      
        - label: ":books: Building examples"
          key: "examples"
          env:
            JULIA_DEBUG: "Literate"
          command: |
            cd "$OCEANBIOME_DIR"
            $JULIA +$JULIA_VERSION --color=yes --project=docs/ docs/make_examples.jl  {{matrix.example_path}}
          matrix:
            setup:
              example_path:
                - "box"
                - "column"
                - "eady"
                - "kelp"
                - "data_assimilation"
          depends_on: "init"
          agents:
            hostname: "$BUILDKITE_AGENT_META_DATA_HOSTNAME"
          
        - label: ":docusaurus: Documentation"
          env:
            JULIA_DEBUG: "Documenter"
          command: |
            cd "$OCEANBIOME_DIR"
            $JULIA +$JULIA_VERSION --color=yes --project=docs/ docs/make.jl
          depends_on: 
            - "init"
            - "examples"
          notify:
            - github_commit_status:
                context: "Documentation"
          agents:
            hostname: "$BUILDKITE_AGENT_META_DATA_HOSTNAME"
      
        - wait: ~
          continue_on_failure: true
          
        - label: ":skeleton-dance: clean up environment"
          command: 
            - "test -d $OCEANBIOME_DIR && du -hs $OCEANBIOME_DIR || true"
            - "test -d $OCEANBIOME_DIR && rm -rf $OCEANBIOME_DIR || true"
          notify:
            - github_commit_status:
                context: "Clean up"
          agents:
            hostname: "$BUILDKITE_AGENT_META_DATA_HOSTNAME"
      EOF
