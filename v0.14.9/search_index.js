var documenterSearchIndex = {"docs":
[{"location":"appendix/library/#library_api","page":"Library","title":"Library","text":"","category":"section"},{"location":"appendix/library/","page":"Library","title":"Library","text":"Documenting the user interface.","category":"page"},{"location":"appendix/library/#OceanBioME.jl","page":"Library","title":"OceanBioME.jl","text":"","category":"section"},{"location":"appendix/library/#OceanBioME.OceanBioME","page":"Library","title":"OceanBioME.OceanBioME","text":"A fast and flexible modelling environment for modelling the coupled interactions between ocean biogeochemistry, carbonate chemistry, and physics.\n\n\n\n\n\n","category":"module"},{"location":"appendix/library/#OceanBioME.CBMDayLength","page":"Library","title":"OceanBioME.CBMDayLength","text":"(day_length::CBMDayLength)(t, φ)\n\nReturns the length of day in seconds at the latitude φ, t seconds after the start of the year.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.ScaleNegativeTracers-Tuple{Any}","page":"Library","title":"OceanBioME.ScaleNegativeTracers","text":"ScaleNegativeTracers(; tracers, scalefactors = ones(length(tracers)), warn = false, invalid_fill_value = NaN)\n\nConstructs a modifier to scale tracers so that none are negative. Use like:\n\nmodifier = ScaleNegativeTracers((:P, :Z, :N))\nbiogeochemistry = Biogeochemistry(...; modifier)\n\nThis method is better, though still imperfect, method to prevent numerical errors that lead to negative tracer values compared to ZeroNegativeTracers. Please see discussion in github.\n\nFuture plans include implement a positivity-preserving timestepping scheme as the ideal alternative.\n\n~~If warn is true then scaling will raise a warning.~~\n\ninvalid_fill_value specifies the value to set the total cell content to if the total is less than 0 (meaning that total tracer conservation can not be enforced). If the value is set to anything other than NaN this scheme no longer conserves mass. While this may be useful to prevent spurious numerics leading to crashing care should be taken that the mass doesn't deviate too much.\n\nThis scheme is similar to that used by NEMO-PISCES, although they scale the tendency rather than the value, while other Earth system models simply set negative tracers to zero, for example NCAR's MARBL and NEMO-TOPAZ2, which does not conserve mass. More complicated schemes exist, for example ROMS-BECS uses an implicite-itterative approach where each component is updated in sequence to garantee mass conservation, possibly at the expense of numerical precision.\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.ScaleNegativeTracers-Tuple{Oceananigans.Biogeochemistry.AbstractBiogeochemistry, Any}","page":"Library","title":"OceanBioME.ScaleNegativeTracers","text":"ScaleNegativeTracers(bgc::AbstractBiogeochemistry; warn = false)\n\nConstruct a modifier to scale the conserved tracers in bgc biogeochemistry.\n\nIf warn is true then scaling will raise a warning.\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.ZeroNegativeTracers","page":"Library","title":"OceanBioME.ZeroNegativeTracers","text":"ZeroNegativeTracers(; exclude = ())\n\nConstruct a modifier that zeroes any negative tracers excluding those listed in exclude.\n\ndanger: Tracer conservation\nThis method is not recommended as a way to preserve positivity of tracers since it does not conserve the total tracer.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Biogeochemistry-Tuple{Any}","page":"Library","title":"OceanBioME.Biogeochemistry","text":"Biogeochemistry(underlying_biogeochemistry;\n                light_attenuation = nothing,\n                sediment = nothing,\n                particles = nothing,\n                modifiers = nothing)\n\nConstruct a biogeochemical model based on underlying_biogeochemistry which may have a light_attenuation model, sediment, particles, and modifiers.\n\nKeyword Arguments\n\nlight_attenuation_model: light attenuation model which integrated the attenuation of available light\nsediment_model: slot for AbstractSediment\nparticles: slot for BiogeochemicalParticles\nmodifiers: slot for components which modify the biogeochemistry when the tendencies have been calculated or when the state is updated\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.conserved_tracers-Tuple{Union{OceanBioME.ContinuousBiogeochemistry, OceanBioME.DiscreteBiogeochemistry}, Vararg{Any}}","page":"Library","title":"OceanBioME.conserved_tracers","text":"conserved_tracers(model::UnderlyingBiogeochemicalModel, args...; kwargs...)\n\nReturns the names of tracers which together are conserved in model\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.redfield-NTuple{6, Any}","page":"Library","title":"OceanBioME.redfield","text":"redfield(i, j, k, val_tracer_name, bgc, tracers)\n\nReturns the redfield ratio of tracer_name from bgc at i, j, k.\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.redfield-Tuple{Any, Any}","page":"Library","title":"OceanBioME.redfield","text":"redfield(val_tracer_name, bgc)\nredfield(val_tracer_name, bgc, tracers)\n\nReturns the redfield ratio of tracer_name from bgc when it is constant across the domain.\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#Biogeochemical-Models","page":"Library","title":"Biogeochemical Models","text":"","category":"section"},{"location":"appendix/library/#Nutrient-Phytoplankton-Zooplankton-Detritus-(NPZD)","page":"Library","title":"Nutrient Phytoplankton Zooplankton Detritus (NPZD)","text":"","category":"section"},{"location":"appendix/library/#OceanBioME.Models.NPZDModel","page":"Library","title":"OceanBioME.Models.NPZDModel","text":"Nutrient-Phytoplankton-Zooplankton-Detritus model of Kuhn et al. (2015).\n\nTracers\n\nNutrients: N (mmol N/m³)\nPhytoplankton: P (mmol N/m³)\nZooplankton: Z (mmol N/m³)\nDetritus: D (mmol N/m³)\n\nRequired submodels\n\nPhotosynthetically available radiation: PAR (W/m²)\n\n\n\n\n\n","category":"module"},{"location":"appendix/library/#OceanBioME.Models.NPZDModel.NutrientPhytoplanktonZooplanktonDetritus-Union{Tuple{}, Tuple{M}, Tuple{P}, Tuple{S}, Tuple{LA}, Tuple{FT}} where {FT, LA, S, P, M}","page":"Library","title":"OceanBioME.Models.NPZDModel.NutrientPhytoplanktonZooplanktonDetritus","text":"NutrientPhytoplanktonZooplanktonDetritus(; grid::AbstractGrid{FT},\n                                           initial_photosynthetic_slope::FT = 0.1953 / day, # 1/(W/m²)/s\n                                           base_maximum_growth::FT = 0.6989 / day, # 1/s\n                                           nutrient_half_saturation::FT = 2.3868, # mmol N/m³\n                                           base_respiration_rate::FT = 0.066 / day, # 1/s/(mmol N / m³)\n                                           phyto_base_mortality_rate::FT = 0.0101 / day, # 1/s/(mmol N / m³)\n                                           maximum_grazing_rate::FT = 2.1522 / day, # 1/s\n                                           grazing_half_saturation::FT = 0.5573, # mmol N/m³\n                                           assimulation_efficiency::FT = 0.9116, \n                                           base_excretion_rate::FT = 0.0102 / day, # 1/s/(mmol N / m³)\n                                           zoo_base_mortality_rate::FT = 0.3395 / day, # 1/s/(mmol N / m³)²\n                                           remineralization_rate::FT = 0.1213 / day, # 1/s\n\n                                           surface_photosynthetically_active_radiation = default_surface_PAR,\n                                           light_attenuation_model::LA =\n                                               TwoBandPhotosyntheticallyActiveRadiation(; grid,\n                                                                                          surface_PAR = surface_photosynthetically_active_radiation),\n                                           sediment_model::S = nothing,\n            \n                                           sinking_speeds = (P = 0.2551/day, D = 2.7489/day),\n                                           open_bottom::Bool = true,\n\n                                           scale_negatives = false,\n                                                                                  \n                                           particles::P = nothing,\n                                           modifiers::M = nothing)\n\nConstruct a Nutrient-Phytoplankton-Zooplankton-Detritus (NPZD) biogeochemical model.\n\nKeyword Arguments\n\ngrid: (required) the geometry to build the model on, required to calculate sinking\ninitial_photosynthetic_slope, ..., remineralization_rate: NPZD parameter values\nsurface_photosynthetically_active_radiation: function (or array in the future) for the photosynthetically available radiation at the surface, should be shape f(x, y, t)\nlight_attenuation_model: light attenuation model which integrated the attenuation of available light\nsediment_model: slot for BiogeochemicalSediment\nsinking_speed: named tuple of constant sinking, of fields (i.e. ZFaceField(...)) for any tracers which sink (convention is that a sinking speed is positive, but a field will need to follow the usual down being negative)\nopen_bottom: should the sinking velocity be smoothly brought to zero at the bottom to prevent the tracers leaving the domain\nscale_negatives: scale negative tracers?\nparticles: slot for BiogeochemicalParticles\nmodifiers: slot for components which modify the biogeochemistry when the tendencies have been calculated or when the state is updated\n\nExample\n\njulia> using OceanBioME\n\njulia> using Oceananigans\n\njulia> grid = RectilinearGrid(size=(20, 30), extent=(200, 200), topology=(Bounded, Flat, Bounded));\n\njulia> model = NutrientPhytoplanktonZooplanktonDetritus(; grid)\nNutrientPhytoplanktonZooplanktonDetritus{Float64} model, with (:P, :D) sinking \n Light attenuation: Two-band light attenuation model (Float64)\n Sediment: Nothing\n Particles: Nothing\n Modifiers: Nothing\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#The-Lodyc-DAMTP-Ocean-Biogeochemical-Simulation-Tools-for-Ecosystem-and-Resources-(LOBSTER)","page":"Library","title":"The Lodyc-DAMTP Ocean Biogeochemical Simulation Tools for Ecosystem and Resources (LOBSTER)","text":"","category":"section"},{"location":"appendix/library/#OceanBioME.Models.LOBSTERModel","page":"Library","title":"OceanBioME.Models.LOBSTERModel","text":"The Lodyc-DAMTP Ocean Biogeochemical Simulation Tools for Ecosystem and Resources (LOBSTER) model.\n\nTracers\n\nNitrates: NO₃ (mmol N/m³)\nAmmonia: NH₄ (mmol N/m³)\nPhytoplankton: P (mmol N/m³)\nZooplankton: Z (mmol N/m³)\nSmall (slow sinking) particulate organic matter: sPOM (mmol N/m³)\nLarge (fast sinking) particulate organic matter: bPOM (mmol N/m³)\nDissolved organic matter: DOM (mmol N/m³)\n\nOptional tracers\n\nCarbonate chemistry\n\nDissolved inorganic carbon: DIC (mmol C/m³)\nAlkalinity: Alk (meq/m³)\n\nOxygen chemistry\n\nOxygen: O₂ (mmol O₂/m³)\n\nVariable redfield\n\nSmall (slow sinking) particulate organic matter carbon content: sPOC (mmol C/m³)\nLarge (fast sinking) particulate organic matter carbon content: bPOC (mmol C/m³)\nDissolved organic matter carbon content: DOC (mmol C/m³)\nWhen this option is enabled then the usual sPOM and bPOM change to sPON and bPON as they explicitly represent the nitrogen contained in the particulate matter\n\nRequired submodels\n\nPhotosynthetically available radiation: PAR (W/m²)\n\nFor optional tracers:\n\nTemperature: T (ᵒC)\nSalinity: S (‰)\n\n\n\n\n\n","category":"module"},{"location":"appendix/library/#OceanBioME.Models.LOBSTERModel.LOBSTER-Union{Tuple{}, Tuple{M}, Tuple{P}, Tuple{S}, Tuple{LA}, Tuple{FT}} where {FT, LA, S, P, M}","page":"Library","title":"OceanBioME.Models.LOBSTERModel.LOBSTER","text":"LOBSTER(; grid::AbstractGrid{FT},\n          phytoplankton_preference::FT = 0.5,\n          maximum_grazing_rate::FT = 9.26e-6, # 1/s\n          grazing_half_saturation::FT = 1.0, # mmol N/m³\n          light_half_saturation::FT = 33.0, # W/m² (?)\n          nitrate_ammonia_inhibition::FT = 3.0,\n          nitrate_half_saturation::FT = 0.7, # mmol N/m³\n          ammonia_half_saturation::FT = 0.001, # mmol N/m³\n          maximum_phytoplankton_growthrate::FT = 1.21e-5, # 1/s\n          zooplankton_assimilation_fraction::FT = 0.7,\n          zooplankton_mortality::FT = 2.31e-6, # 1/s/mmol N/m³\n          zooplankton_excretion_rate::FT = 5.8e-7, # 1/s\n          phytoplankton_mortality::FT = 5.8e-7, # 1/s\n          small_detritus_remineralisation_rate::FT = 5.88e-7, # 1/s\n          large_detritus_remineralisation_rate::FT = 5.88e-7, # 1/s\n          phytoplankton_exudation_fraction::FT = 0.05,\n          nitrification_rate::FT = 5.8e-7, # 1/s\n          ammonia_fraction_of_exudate::FT = 0.75, \n          ammonia_fraction_of_excriment::FT = 0.5,\n          ammonia_fraction_of_detritus::FT = 0.0,\n          phytoplankton_redfield::FT = 6.56, # mol C/mol N\n          organic_redfield::FT = 6.56, # mol C/mol N\n          phytoplankton_chlorophyll_ratio::FT = 1.31, # g Chl/mol N\n          organic_carbon_calcate_ratio::FT = 0.1, # mol CaCO₃/mol C\n          respiration_oxygen_nitrogen_ratio::FT = 10.75, # mol O/molN\n          nitrification_oxygen_nitrogen_ratio::FT = 2.0, # mol O/molN\n          slow_sinking_mortality_fraction::FT = 0.5, \n          fast_sinking_mortality_fraction::FT = 0.5,\n          dissolved_organic_breakdown_rate::FT = 3.86e-7, # 1/s\n          zooplankton_calcite_dissolution::FT = 0.3,\n\n          surface_photosynthetically_active_radiation = default_surface_PAR,\n\n          light_attenuation_model::LA =\n              TwoBandPhotosyntheticallyActiveRadiation(; grid, \n                                                         surface_PAR = surface_photosynthetically_active_radiation),\n          sediment_model::S = nothing,\n\n          carbonates::Bool = false,\n          oxygen::Bool = false,\n          variable_redfield::Bool = false,\n\n          sinking_speeds = (sPOM = 3.47e-5, bPOM = 200/day),\n          open_bottom::Bool = true,\n\n          scale_negatives = false,\n\n          particles::P = nothing,\n          modifiers::M = nothing)\n\nConstruct an instance of the LOBSTER biogeochemical model.\n\nKeyword Arguments\n\ngrid: (required) the geometry to build the model on, required to calculate sinking\nphytoplankton_preference, ..., dissolved_organic_breakdown_rate: LOBSTER parameter values\nsurface_photosynthetically_active_radiation: funciton (or array in the future) for the photosynthetically available radiation at the surface, should be shape f(x, y, t)\nlight_attenuation_model: light attenuation model which integrated the attenuation of available light\nsediment_model: slot for BiogeochemicalSediment\ncarbonates, oxygen, and variable_redfield: include models for carbonate chemistry and/or oxygen chemistry and/or variable redfield ratio dissolved and particulate organic matter\nsinking_speed: named tuple of constant sinking, of fields (i.e. ZFaceField(...)) for any tracers which sink (convention is that a sinking speed is positive, but a field will need to follow the usual down being negative)\nopen_bottom: should the sinking velocity be smoothly brought to zero at the bottom to prevent the tracers leaving the domain\nscale_negatives: scale negative tracers?\nparticles: slot for BiogeochemicalParticles\nmodifiers: slot for components which modify the biogeochemistry when the tendencies have been calculated or when the state is updated\n\nExample\n\njulia> using OceanBioME\n\njulia> using Oceananigans\n\njulia> grid = RectilinearGrid(size=(3, 3, 30), extent=(10, 10, 200));\n\njulia> model = LOBSTER(; grid)\nLOBSTER{Float64} with carbonates ❌, oxygen ❌, variable Redfield ratio ❌ and (:sPOM, :bPOM) sinking \n Light attenuation: Two-band light attenuation model (Float64)\n Sediment: Nothing\n Particles: Nothing\n Modifiers: Nothing\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#Pelagic-Interactions-Scheme-for-Carbon-and-Ecosystem-Studies-(PISCES)","page":"Library","title":"Pelagic Interactions Scheme for Carbon and Ecosystem Studies (PISCES)","text":"","category":"section"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel","page":"Library","title":"OceanBioME.Models.PISCESModel","text":"Pelagic Interactions Scheme for Carbon and Ecosystem Studies (PISCES) model.\n\nThis is not currently an official version supported by the PISCES community and is not yet verified to be capable of producing results mathcing that of the  operational PISCES configuration. This is a work in progress, please open an  issue or discusison if you'd like to know more.\n\nNotes to developers\n\nPart of the vision for this implementation of PISCES is to harness the features of Julia that would allow it to be fully modular. An obvious step to improve the ease of this would be to do some minor refactoring to group the phytoplankton  classes, and zooplankton classes together, and for the other groups to generically  call the whole lot. This may cause some issues with argument passing, and although it may not be the best way todo it my first thought is to pass them round as named tuples built from something like,\n\nphytoplankton_tracers = phytoplankton_arguments(bgc.phytoplankton, args...)\n\n\n\n\n\n","category":"module"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.DepthDependantSinkingSpeed","page":"Library","title":"OceanBioME.Models.PISCESModel.DepthDependantSinkingSpeed","text":"DepthDependantSinkingSpeed(; minimum_speed = 30/day,\n                             maximum_speed = 200/day,\n                             maximum_depth = 500)\n\nReturns sinking speed for particles which sink at minimum_speed in the surface ocean (the deepest of the mixed and euphotic layers), and accelerate to maximum_speed below that depth and maximum_depth.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.ModelLatitude","page":"Library","title":"OceanBioME.Models.PISCESModel.ModelLatitude","text":"ModelLatitude\n\nReturns the latitude specified by the model grid (y).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.PISCES-Tuple{}","page":"Library","title":"OceanBioME.Models.PISCESModel.PISCES","text":"PISCES(; grid::AbstractGrid{FT},\n         phytoplankton = MixedMondoNanoAndDiatoms(),\n         zooplankton = MicroAndMesoZooplankton(),\n         dissolved_organic_matter = DissolvedOrganicCarbon(),\n         particulate_organic_matter = TwoCompartementCarbonIronParticles(),\n         \n         nitrogen = NitrateAmmonia(),\n         iron = SimpleIron(),\n         silicate = Silicate(),\n         oxygen = Oxygen(),\n         phosphate = Phosphate(),\n         \n         inorganic_carbon = InorganicCarbon(),\n\n         # from Aumount 2005 rather than 2015 since it doesn't work the other way around\n         first_anoxia_thresehold = 6.0,\n         second_anoxia_thresehold = 1.0,\n\n         nitrogen_redfield_ratio = 16/122,\n         phosphate_redfield_ratio = 1/122,\n         \n         mixed_layer_shear = 1.0,\n         background_shear = 0.01, \n         \n         latitude = PrescribedLatitude(45),\n         day_length = day_length_function,\n         \n         mixed_layer_depth = Field{Center, Center, Nothing}(grid),\n         euphotic_depth = Field{Center, Center, Nothing}(grid),\n\n         silicate_climatology = ConstantField(7.5),\n\n         mean_mixed_layer_vertical_diffusivity = Field{Center, Center, Nothing}(grid),\n         mean_mixed_layer_light = Field{Center, Center, Nothing}(grid),\n\n         carbon_chemistry = CarbonChemistry(),\n         calcite_saturation = CenterField(grid),\n\n         surface_photosynthetically_active_radiation = default_surface_PAR,\n\n         light_attenuation =\n           MultiBandPhotosyntheticallyActiveRadiation(; grid, \n                                                        surface_PAR = surface_photosynthetically_active_radiation),\n\n         sinking_speeds = (POC = 2/day, \n                           # might be more efficient to just precompute this\n                           GOC = Field(KernelFunctionOperation{Center, Center, Face}(DepthDependantSinkingSpeed(), \n                                                                                     grid, \n                                                                                     mixed_layer_depth, \n                                                                                     euphotic_depth))),\n         open_bottom = true,\n\n         scale_negatives = false,\n         invalid_fill_value = NaN,\n         \n         sediment = nothing,\n         particles = nothing,\n         modifiers = nothing)\n\nConstructs an instance of the PISCES biogeochemical model.\n\nKeyword Arguments\n\ngrid: (required) the geometry to build the model on\nphytoplankton: phytoplankton evolution parameterisation, defaults to nanophyto and diatom size classes with MixedMondo growth\nzooplankton: zooplankton evolution parameterisation, defaults to two class Z and M\ndissolved_organic_matter: parameterisaion for the evolution of dissolved organic matter (DOC)\nparticulate_organic_matter: parameterisation for the evolution of particulate organic matter (POC, GOC, SFe, BFe, PSi, CaCO₃)\nnitrogen: parameterisation for the nitrogen compartements (NH₄ and NO₃)\niron: parameterisation for iron (Fe), currently the \"complex chemistry\" of Aumount 2015 is not implemented\nsilicate: parameterisaion for silicate (Si)\noxygen: parameterisaion for oxygen (O₂)\nphosphate: parameterisaion for phosphate (PO₄)\ninorganic_carbon: parameterisation for the evolution of the inorganic carbon system (DIC and Alkalinity)\nfirst_anoxia_thresehold and second_anoxia_thresehold: thresholds in anoxia parameterisation\nnitrogen_redfield_ratio and phosphate_redfield_ratio: the assumed element ratios N/C and P/C \nmixed_layer_shear and background_shear: the mixed layer and background shear rates, TODO: move this to a computed field\nlatitude: model latitude, should be PrescribedLatitude for RectilinearGrids and ModelLatitude for grids providing their own latitude\nday_length: parameterisation for day length based on time of year and latitude, you may wish to change this to (φ, t) -> 1day if you  want to ignore the effect of day length, or something else if you're modelling a differen planet\nmixed_layer_depth: an AbstractField containing the mixed layer depth (to be computed during update state)\neuphotic: an AbstractField containing the euphotic depth, the depth where light reduces to 1/1000 of   the surface value (computed during update state)\nsilicate_climatology: an AbstractField containing the silicate climatology which effects the diatoms silicate  half saturation constant\nmean_mixed_layer_vertical_diffusivity: an AbstractField containing the mean mixed layer vertical diffusivity   (to be computed during update state)\nmean_mixed_layer_light: an AbstractField containing the mean mixed layer light (computed during update state)\ncarbon_chemistry: the CarbonChemistry model used to compute the calicte saturation\ncalcite_saturation: an AbstractField containing the calcite saturation  (computed during update state)\nsurface_photosynthetically_active_radiation: funciton for the photosynthetically available radiation at the surface\nlight_attenuation_model: light attenuation model which integrated the attenuation of available light\nsinking_speed: named tuple of constant sinking speeds, or fields (i.e. ZFaceField(...)) for any tracers which sink  (convention is that a sinking speed is positive, but a field will need to follow the usual down being negative)\nopen_bottom: should the sinking velocity be smoothly brought to zero at the bottom to prevent the tracers leaving the domain\nscale_negatives: scale negative tracers?\nparticles: slot for BiogeochemicalParticles\nmodifiers: slot for components which modify the biogeochemistry when the tendencies have been calculated or when the state is updated\n\nAll parameterisations default to the operaitonal version of PISCES as close as possible.\n\nNotes\n\nCurrently only MixedMondoPhytoplankton are implemented, and some work should be done to generalise the classes to a single phytoplankton if more classes are required (see  OceanBioME.Models.PISCESModel docstring). Similarly, if a more generic particulate_organic_matter was desired a way to specify arbitary tracers for arguments would be required.\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.PrescribedLatitude","page":"Library","title":"OceanBioME.Models.PISCESModel.PrescribedLatitude","text":"PrescribedLatitude\n\nReturns the prescribed latitude rather than the model grid y position.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.DissolvedOrganicMatter.DissolvedOrganicCarbon","page":"Library","title":"OceanBioME.Models.PISCESModel.DissolvedOrganicMatter.DissolvedOrganicCarbon","text":"DissolvedOrganicCarbon\n\nParameterisation of dissolved organic matter which depends on a bacterial  concentration.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.ParticulateOrganicMatter.TwoCompartementCarbonIronParticles","page":"Library","title":"OceanBioME.Models.PISCESModel.ParticulateOrganicMatter.TwoCompartementCarbonIronParticles","text":"TwoCompartementCarbonIronParticles\n\nA quota parameterisation for particulate organic matter with two size classes, each with carbon and iron compartements, and a silicate compartement for the large size class.\n\nConfusingly we decided to name these compartmenets POC and GOC for the small and large carbon classes, SFe and BFe for the small and  ̶l̶a̶r̶g̶e̶ big iron  compartements, and PSi for the  ̶l̶a̶r̶g̶e̶ particulate silicon (not the  phytoplankton silicon).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.Iron.SimpleIron","page":"Library","title":"OceanBioME.Models.PISCESModel.Iron.SimpleIron","text":"SimpleIron(; excess_scavenging_enhancement = 1000)\n\nParameterisation for iron evolution, not the \"complex chemistry\" model of Aumount et al, 2015. Iron is scavenged (i.e. perminemtly removed from the model) when the free iron concentration exeeds the ligand concentration at a rate modified by excess_scavenging_enhancement.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.InorganicCarbons.InorganicCarbon","page":"Library","title":"OceanBioME.Models.PISCESModel.InorganicCarbons.InorganicCarbon","text":"InorganicCarbon\n\nDefault parameterisation for DICandAlk`alinity evolution. \n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.Zooplankton.QualityDependantZooplankton","page":"Library","title":"OceanBioME.Models.PISCESModel.Zooplankton.QualityDependantZooplankton","text":"QualityDependantZooplankton\n\nThe PISCES zooplankton growth model where each class has preferences for grazing on nanophytoplankton (P), diatoms (D), microzooplankton (Z), and particulate organic matter (POC), and can flux feed on sinking  particulates (POC and GOC).\n\nThis model assumes a fixed ratio for all other elements (i.e. N, P, Fe).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.Phytoplankton.GrowthRespirationLimitedProduction","page":"Library","title":"OceanBioME.Models.PISCESModel.Phytoplankton.GrowthRespirationLimitedProduction","text":"NutrientLimitedProduction\n\nBaseProduction with light limitation moderated by nutrient availability. This is the \"new production\" PISCES phytoplankton growth rate model. Growth rate is of the form:\n\nμ = μ₁f₁(τ)f₂(zₘₓₗ)(1-exp(-α θᶜʰˡ PAR  τ (bᵣ + μᵣ))) L\n\nKeyword Arguments\n\nbase_growth_rate: the base growth rate, μ₀, in (1/s)\ntemperatrue_sensetivity: temperature sensetivity parameter, b, giving μ₁ = μ₀ bᵀ where T is temperature\ndark_tollerance: the time that the phytoplankton survives in darkness below the euphotic layer, τᵈ (s)\ninitial_slope_of_PI_curve: the relationship between photosynthesis and irradiance, α₀ (1/W/m²)\nlow_light_adaptation: factor increasing the sensetivity of photosynthesis to irradiance, β,  giving α = α₀(1 + exp(-PAR)), typically set to zero\nbasal_respiration_rate: reference respiration rate, bᵣ (1/s)\nreference_growth_rate: reference growth rate, μᵣ (1/s)\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.Phytoplankton.MixedMondo","page":"Library","title":"OceanBioME.Models.PISCESModel.Phytoplankton.MixedMondo","text":"MixedMondo\n\nHolds the parameters for the PISCES mixed mondo phytoplankton  parameterisation where nutrient limitation is modelled using the mondo approach for nitrate (NO₃), ammonia (NH₄), phosphate (PO₄), and silicate (Si), but the quota approach is used for iron (Fe)  and light (PAR).\n\nTherefore each class has a carbon compartement (generically I), chlorophyll (IChl), and iron (IFe), and may also have silicate (ISi) if the nutrient_limitation specifies that the growth is silicate limited, despite the fact that the silicate still limits  the growth in a mondo fashion.\n\nThe growth_rate may be different parameterisations, currently  either NutrientLimitedProduction or  GrowthRespirationLimitedProduction, which represent the typical and newprod versions of PISCES.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.Phytoplankton.NitrogenIronPhosphateSilicateLimitation","page":"Library","title":"OceanBioME.Models.PISCESModel.Phytoplankton.NitrogenIronPhosphateSilicateLimitation","text":"NitrogenIronPhosphateSilicateLimitation\n\nHolds the parameters for growth limitation by nitrogen (NO₃ and NH₄), iron (Fe), phosphate PO₄, and (optionally) silicate (Si) availability.\n\nSilicate limitation may be turned off (e.g. for nanophytoplankton) by setting silicate_limited=false.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.Phytoplankton.NutrientLimitedProduction","page":"Library","title":"OceanBioME.Models.PISCESModel.Phytoplankton.NutrientLimitedProduction","text":"NutrientLimitedProduction\n\nBaseProduction with light limitation moderated by nutrient availability. This is the \"origional\" PISCES phytoplankton growth rate model. Growth rate is of the form:\n\nμ = μ₁f₁(τᵈ)f₂(zₘₓₗ)(1-exp(-α θᶜʰˡ PAR  τ μ₀ L)) L\n\nKeyword Arguments\n\nbase_growth_rate: the base growth rate, μ₀, in (1/s)\ntemperatrue_sensetivity: temperature sensetivity parameter, b, giving μ₁ = μ₀ bᵀ where T is temperature\ndark_tollerance: the time that the phytoplankton survives in darkness below the euphotic layer, τᵈ (s)\ninitial_slope_of_PI_curve: the relationship between photosynthesis and irradiance, α₀ (1/W/m²)\nlow_light_adaptation: factor increasing the sensetivity of photosynthesis to irradiance, β,  giving α = α₀(1 + exp(-PAR)), typically set to zero\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.PISCESModel.Nitrogen.NitrateAmmonia","page":"Library","title":"OceanBioME.Models.PISCESModel.Nitrogen.NitrateAmmonia","text":"NitrateAmmonia\n\nA parameterisation for the evolution of nitrate (NO₃) and ammonia (NH₄) where ammonia can be nitrified into nitrate, nitrate and ammonia are supplied by the bacterial degredation of dissolved organic matter, and consumed by  phytoplankton. Additionally waste produces ammonia through various means.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#Sugar-kelp-(Saccharina-latissima)","page":"Library","title":"Sugar kelp (Saccharina latissima)","text":"","category":"section"},{"location":"appendix/library/#OceanBioME.Models.SugarKelpModel","page":"Library","title":"OceanBioME.Models.SugarKelpModel","text":"Sugar kelp model of Broch and Slagstad (2012) and updated by Broch et al. (2013), Fossberg et al. (2018), and Broch et al. (2019).\n\nPrognostic properties\n\nArea: A (dm²)\nNitrogen reserve: N (gN/gSW)\nCarbon reserve: C (gC/gSW)\n\nTracer dependencies\n\nNitrates: NO₃ (mmol N/m³)\nAmmonia: NH₄ (mmol N/m³)\nPhotosynthetically available radiation: PAR (einstein/m²/day)\nTemperature: T (°C)\n\n\n\n\n\n","category":"module"},{"location":"appendix/library/#OceanBioME.Models.SugarKelpModel.SugarKelp","page":"Library","title":"OceanBioME.Models.SugarKelpModel.SugarKelp","text":"SugarKelp\n\nDefines the parameters for SugarKelp biogeochemistry.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.SugarKelpModel.SugarKelpParticles-Union{Tuple{Any}, Tuple{FT}} where FT","page":"Library","title":"OceanBioME.Models.SugarKelpModel.SugarKelpParticles","text":"SugarKelpParticles(n; grid, kelp_parameters = NamedTuple(), kwargs...)\n\nSets up n sugar kelp BiogeochemicalParticles with default parameters except those specified in kelp_parameters. kwagrs are passed onto BiogeochemicalParticles.\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#Carbon-Chemistry","page":"Library","title":"Carbon Chemistry","text":"","category":"section"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel","text":"CarbonChemistryModel to solve chemical equilibrium parameterisations\n\n\n\n\n\n","category":"module"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.CarbonChemistry","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.CarbonChemistry","text":"CarbonChemistry(FT = Float64; \n                ionic_strength = IonicStrength(),\n                solubility = K0(),\n                carbonic_acid = (K1 = K1(), K2 = K2()),\n                boric_acid = KB(),\n                water = KW(),\n                sulfate = KS(; ionic_strength),\n                fluoride = KF(; ionic_strength),\n                phosphoric_acid = (KP1 = KP1(), KP2 = KP2(), KP3 = KP3()),\n                silicic_acid = KSi(; ionic_strength),\n                calcite_solubility = KSP_calcite(),\n                density_function = teos10_polynomial_approximation)\n\nCarbon chemistry model capable of solving for sea water pCO₂ from DIC and  total alkalinity or DIC and pH. \n\nDefault form from Dickson, A.G., Sabine, C.L. and  Christian, J.R. (2007),  Guide to Best Practices for Ocean CO 2 Measurements. PICES Special Publication 3, 191 pp.\n\nSee each parameters documentation for origional sources.\n\nExample\n\njulia> using OceanBioME\n\njulia> carbon_chemistry = CarbonChemistry()\n`CarbonChemistry` model which solves for pCO₂ and pH\n\njulia> pCO₂ = carbon_chemistry(; DIC = 2000, Alk = 2000, T = 10, S = 35)\n1308.0843992121615\n\njulia> pH = carbon_chemistry(; DIC = 2000, Alk = 2000, T = 10, S = 35, return_pH = true)\n7.502534641304366\n\njulia> pCO₂_higher_pH = carbon_chemistry(; DIC = 2000, T = 10, S = 35, pH = 7.5)\n1315.6558976217746\n\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.CarbonChemistry-Union{Tuple{}, Tuple{FT}} where FT","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.CarbonChemistry","text":"(p::CarbonChemistry)(; DIC, T, S, Alk = 0, pH = nothing,\n                       return_pH = false,\n                       boron = 0.000232 / 10.811 * S / 1.80655,\n                       sulfate = 0.14 / 96.06 * S / 1.80655,\n                       fluoride = 0.000067 / 18.9984 * S / 1.80655,\n                       silicate = 0,\n                       phosphate = 0,\n                       upper_pH_bound = 14,\n                       lower_pH_bound = 0)\n\nCalculates fCO₂ in sea water with DIC, Alkalinity, Temperature, and Salinity unless pH is specified, in which case intermediate computation of pH is skipped and pCO₂ is calculated from the DIC, T, S and pH.\n\nAlternativly, pH is returned if return_pH is true.\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.IonicStrength","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.IonicStrength","text":"IonicStrength(; a =  19.924,\n                b =  1000.0,\n                c = -1.005)\n\nParameterisation of the ionic strength of sea water.\n\nIs(S) = aS / (b + cS)\n\nDefault values from Dickson (1990, Chem. Thermodyn., 22, 113–127).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.K0","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.K0","text":"K0(; constant = -60.2409,\n     inverse_T =  93.4517 * 100,\n     log_T =  23.3585,\n     T² =  0.0,\n     S =  0.023517,\n     ST = -0.023656 / 100,\n     ST² =  0.0047036 / 100^2)\n\nParameterisation for carbon dioxide solubility equilibrium constant.\n\nCO₂(g) ⇌ CO₂*(aq)\n\nK₀ = [CO₂*(aq)]/f(CO₂)\n\nDefault values from Weiss, R.F. (1974, Mar. Chem., 2, 203–215).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.K1","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.K1","text":"K1(FT = Float64;\n   constant =  61.2172,\n   inverse_T = -3633.86,\n   log_T = -9.67770,\n   S =  0.011555,\n   S² = -0.0001152,\n   pressure_correction = PressureCorrection(FT; a₀=-25.50, a₁=0.1271, a₂=0.0, b₀=-0.00308, b₁=0.0000877))\n\nParameterisation for aquious carbon dioxide - bicarbonate dissociation equilibrium constant.\n\nCO₂*(aq) + H₂O ⇌ H₂CO₃ ⇌ HCO₃⁻ + H⁺\n\nK₁ = [H⁺][HCO₃⁻]/[CO₂*]\n\nDefault values from Lueker et al. (2000, Mar. Chem., 70: 105–119).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.K2","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.K2","text":"K2(FT = Float64;\n   constant = -25.9290,\n   inverse_T = -471.78,\n   log_T = 3.16967,\n   S = 0.01781,\n   S² = -0.0001122,\n   pressure_correction = PressureCorrection(FT; a₀=-15.82, a₁=-0.0219, a₂=0.0, b₀=0.00113, b₁=-0.0001475))\n\nParameterisation for bicarbonate dissociation equilibrium constant.\n\nHCO₃⁻ ⇌ CO₃²⁻ + H⁺\n\nK₂ = [H⁺][CO₃²⁻]/[HCO₃⁻]\n\nDefault values from Lueker et al. (2000, Mar. Chem., 70: 105–119).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KB","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KB","text":"KB(FT = Float64;\n   constant =  148.0248,\n   inverse_T = -8966.90,\n   inverse_T_sqrt_S = -2890.53,\n   inverse_T_S = -77.942,\n   inverse_T_sqrt_S³ =  1.728,\n   inverse_T_S² = -0.0996,\n   sqrt_S = 137.1942,\n   S = 1.62142,\n   log_T = -24.4344,\n   log_T_sqrt_S = -25.085,\n   S_log_T = -0.2474,\n   T_sqrt_S =  0.053105,\n   pressure_correction = PressureCorrection(FT; a₀=-29.48, a₁=0.1622, a₂=-0.0026080, b₀=-0.00284, b₁=0.0))\n\nParameterisation for boric acid equilibrium with water.\n\nB(OH)₃ + H₂O ⇌ B(OH)₄⁻ + H⁺\n\nKᵇ = [H⁺][B(OH)₄⁻]/[B(OH)₃]\n\nDefault values from Dickson (1990, Deep-Sea Res., 37, 755–766).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KF","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KF","text":"KF(; ionic_strength = IonicStrength(),\n      sulfate_constant = KS(; ionic_strength),\n      constant = -9.68,\n      inverse_T = 874.0,\n      sqrt_S =  0.111,\n      log_S = 0.0,\n      log_S_KS = 0.0,\n      pressure_correction = \n         PressureCorrection(; a₀=-9.78, a₁=-0.0090, a₂=-0.000942, b₀=-0.00391, b₁=0.000054))\n\nParameterisation for hydrogen fluoride dissociation equilibrium constant.\n\nHF ⇌ F⁻ + H⁺\n\nKᶠ = [H⁺][F⁻]/[HF]\n\nDefault values from Perez and Fraga (1987, Mar. Chem., 21, 161–168).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KP","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KP","text":"KP(constant,\n   inverse_T,\n   log_T,\n   sqrt_S,\n   inverse_T_sqrt_S,\n   S,\n   inverse_T_S,\n   pressure_correction)\n\nGeneric equilibrium constant parameterisation of the form used by  Millero (1995, Geochim. Cosmochim. Acta, 59, 661–677) for phosphoric  acid dissociation.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KS","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KS","text":"KS(; constant =  148.9652,\n     inverse_T = -13847.26,\n     log_T = -23.6521,\n     sqrt_S = -5.977,\n     inverse_T_sqrt_S =  118.67,\n     log_T_sqrt_S =  1.0495,\n     S = -0.01615,\n     pressure_correction = \n        PressureCorrection(; a₀=-18.03, a₁=0.0466, a₂=0.000316, b₀=-0.00453, b₁=0.00009))\n\nParameterisation for bisulfate dissociation equilibrium constant.\n\nHSO₄⁻ ⇌ SO₄²⁻ + H⁺\n\nKˢ = [H⁺][SO₄²⁻]/[HSO₄⁻]\n\nDefault values from Dickson (1990, Chem. Thermodyn., 22, 113–127).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KSP","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KSP","text":"KSP(therm_constant,\n    therm_T,\n    therm_inverse_T,\n    therm_log_T,\n    sea_sqrt_S,\n    sea_T_sqrt_S,\n    sea_inverse_T_sqrt_S,\n    sea_S,\n    sea_S_sqrt_S³,\n    pressure_correction)\n\nGeneric CaCO₃ solubility parameterisation of the form given by Form from Millero, F. J. (2007, Chemical Reviews, 107(2), 308–341).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KSi","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KSi","text":"KSi(; ionic_strength = IonicStrength(),\n      constant =  117.385,\n      inverse_T = -8904.2,\n      log_T = -19.334,\n      sqrt_Is = 3.5913,\n      inverse_T_sqrt_Is = -458.79,\n      Is = -1.5998,\n      inverse_T_Is = 188.74,\n      Is² = 0.07871,\n      inverse_T_Is² = -12.1652,\n      log_S = -0.001005)\n\nParameterisation for silicic acid dissociation equilibrium constant.\n\nSi(OH)₄ ⇌ SiO(OH)₃⁻ + H⁺\n\nKʷ = [H⁺][SiO(OH)₃⁻]/[Si(OH)₄]\n\nDefault values from Millero (1995, Geochim. Cosmochim. Acta, 59, 661–677).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KW","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KW","text":"KW(; constant =  148.9652,\n     inverse_T = -13847.26,\n     log_T = -23.6521,\n     sqrt_S = -5.977,\n     inverse_T_sqrt_S =  118.67,\n     log_T_sqrt_S =  1.0495,\n     S = -0.01615,\n     pressure_correction = \n        PressureCorrection(; a₀=-20.02, a₁=0.1119, a₂=-0.001409, b₀=-0.00513, b₁=0.0000794))\n\nParameterisation for water dissociation equilibrium constant.\n\nH₂O ⇌ OH⁻ + H⁺\n\nKʷ = [H⁺][OH⁻]\n\nDefault values from Millero (1995, Geochim. Cosmochim. Acta, 59, 661–677).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.PressureCorrection","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.PressureCorrection","text":"PressureCorrection(FT=Float64;\n                   a₀, a₁, a₂,\n                   b₀, b₁, b₂,\n                   R = 83.14472)\n\nParameterisation for the pressure effect on thermodynamic constants.\n\nForm from Millero, F. J. (2007, Chemical Reviews, 107(2), 308–341).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KP1-Union{Tuple{}, Tuple{Any}, Tuple{PC}} where PC","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KP1","text":"KP1(; constant = 115.525,\n      inverse_T = -4576.752,\n      log_T = - 18.453,\n      sqrt_S = 0.69171,\n      inverse_T_sqrt_S = -106.736,\n      S = -0.01844,\n      inverse_T_S = -0.65643,\n      pressure_correction = \n         PressureCorrection(; a₀=-14.51, a₁=0.1211, a₂=-0.000321, b₀=-0.00267, b₁=0.0000427))\n\nInstance of KP returning the first phosphocic acid equilibrium constant.\n\nH₃PO₄ ⇌ H₂PO₄⁻ + H⁺\n\nKᵖ¹ = [H⁺][H₂PO₄]/[H₃PO₄]\n\nDefault values from Millero (1995, Geochim. Cosmochim. Acta, 59, 661–677).\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KP2-Union{Tuple{}, Tuple{Any}, Tuple{PC}} where PC","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KP2","text":"KP2(; constant = 172.0883,\n      inverse_T = -8814.715,\n      log_T = -27.927,\n      sqrt_S = 1.3566,\n      inverse_T_sqrt_S = -160.340,\n      S = -0.05778,\n      inverse_T_S = 0.37335,\n      pressure_correction = \n        PressureCorrection(; a₀=-23.12, a₁=0.1758, a₂=-0.002647, b₀=-0.00515, b₁=0.00009))\n\nInstance of KP returning the second phosphocic acid equilibrium constant.\n\nH₂PO₄⁻ ⇌ HPO₄²⁻ + H⁺\n\nKᵖ² = [H⁺][HPO₄²⁻]/[H₂PO₄⁻]\n\nDefault values from Millero (1995, Geochim. Cosmochim. Acta, 59, 661–677).\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KP3-Union{Tuple{}, Tuple{Any}, Tuple{PC}} where PC","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KP3","text":"KP3(; constant = -18.141,\n      inverse_T = -3070.75,\n      log_T = 0.0,\n      sqrt_S = 2.81197,\n      inverse_T_sqrt_S = 17.27039,\n      S = -0.09984,\n      inverse_T_S = -44.99486,\n      pressure_correction = \n        PressureCorrection(; a₀=-26.57, a₁=0.2020, a₂=-0.0030420, b₀=-0.00408, b₁=0.0000714))\n\nInstance of KP returning the third phosphocic acid equilibrium constant.\n\nHPO₄²⁻ ⇌ PO₄ + H⁺\n\nKᵖ³ = [H⁺][PO₄³⁻]/[HPO₄⁻]\n\nDefault values from Millero (1995, Geochim. Cosmochim. Acta, 59, 661–677).\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KSP_aragonite-Union{Tuple{}, Tuple{Any}, Tuple{PC}} where PC","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KSP_aragonite","text":"KSParagonite(; thermconstant = -171.945,                 thermT = -0.077993,                 therminverseT = 2903.293,                 thermlogT = 71.595,                 seasqrtS = -0.068393,                 seaTsqrtS = 0.0017276,                 seainverseTsqrtS = 88.135,                 seaS = -0.10018,                 seaSsqrtS³ = 0.0059415,                 pressure_correction =                     PressureCorrection(; a₀=-45.96, a₁=0.5304, a₂=-0.0, b₀=-0.01176, b₁=0.0003692))\n\nInstance of KSP returning calcite solubility.\n\nDefault values from Millero, F. J. (2007, Chemical Reviews, 107(2), 308–341).\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.KSP_calcite-Union{Tuple{}, Tuple{Any}, Tuple{PC}} where PC","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.KSP_calcite","text":"KSP_calcite(; therm_constant = -171.9065,\n              therm_T = -0.077993,\n              therm_inverse_T = 2839.319,\n              therm_log_T = 71.595,\n              sea_sqrt_S = -0.77712,\n              sea_T_sqrt_S = 0.0028426,\n              sea_inverse_T_sqrt_S = 178.34,\n              sea_S = -0.07711,\n              sea_S_sqrt_S³ = 0.0041249,\n              pressure_correction =\n                  PressureCorrection(; a₀=-48.76, a₁=0.5304, a₂=-0.0, b₀=-0.01176, b₁=0.0003692))\n\nInstance of KSP returning calcite solubility.\n\nDefault values from Millero, F. J. (2007, Chemical Reviews, 107(2), 308–341).\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.Models.CarbonChemistryModel.alkalinity_residual-Tuple{Any, Any}","page":"Library","title":"OceanBioME.Models.CarbonChemistryModel.alkalinity_residual","text":"alkalinity_residual(H, p)\n\nReturns the difference between total alkalinity computed from H(hydrogen ion concentration),DIC,borate,sulfate,phosphate,silicate, andfluorideconcentration and chemical equilibrium constants specified inp, and the specified  totalAlk`alinity.\n\nTAlk = [HCO₃⁻] + 2[CO₃²⁻] + [B(OH)₄⁻] + [OH⁻] + [HPO₄²⁻] + 2[PO₄³⁻] + [SiO(OH)₃⁻] \n       + [NH₃] + [HS⁻] - [H⁺] - [HSO₄⁻] - [HF] - [H₃PO₄] + minor acids and bases\n\nConcentrations diagnosed as specified in Dickson et. al best practice descried in  CarbonChemistry docstring.\n\nNote ammonia (NH₃) is not currently included.\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#Light-Attenuation-Models","page":"Library","title":"Light Attenuation Models","text":"","category":"section"},{"location":"appendix/library/#OceanBioME.Light","page":"Library","title":"OceanBioME.Light","text":"Light attenuation by chlorophyll as described by Karleskind et al. (2011) (implemented as TwoBand) and Morel (1988) (as MultiBand).\n\n\n\n\n\n","category":"module"},{"location":"appendix/library/#OceanBioME.Light.MultiBandPhotosyntheticallyActiveRadiation","page":"Library","title":"OceanBioME.Light.MultiBandPhotosyntheticallyActiveRadiation","text":"MultiBandPhotosyntheticallyActiveRadiation{F, FN, K, E, C, SPAR, SPARD}\n\nLight attenuation model with multiple wave length bands where each band (i) is attenuated like:\n\n∂PARᵢ(z)/∂z = PARᵢ(kʷ(i) + χ(i)Chl(z)ᵉ⁽ⁱ⁾)\n\nWhere kʷ(i) is the band specific water attenuation coefficient, e(i) the chlorophyll exponent, and χ(i) the chlorophyll attenuation coefficient.\n\nWhen the fields are called with biogeochemical_auxiliary_fields an additional field named PAR is also returned which is a sum of the bands.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Light.MultiBandPhotosyntheticallyActiveRadiation-Union{Tuple{}, Tuple{FT}} where FT","page":"Library","title":"OceanBioME.Light.MultiBandPhotosyntheticallyActiveRadiation","text":"MultiBandPhotosyntheticallyActiveRadiation(; grid::AbstractGrid{FT}, \n                                             bands = ((400, 500), (500, 600), (600, 700)), #nm\n                                             base_bands = MOREL_λ,\n                                             base_water_attenuation_coefficient = MOREL_kʷ,\n                                             base_chlorophyll_exponent = MOREL_e,\n                                             base_chlorophyll_attenuation_coefficient = MOREL_χ,\n                                             field_names = [par_symbol(n, length(bands)) for n in 1:length(bands)],\n                                             surface_PAR = default_surface_PAR)\n\nReturns a MultiBandPhotosyntheticallyActiveRadiation attenuation model of surface_PAR in divided  into bands by surface_PAR_division. \n\nThe attenuation morelcoefficients are computed from `basewaterattenuationcoefficient,basechlorophyllexponent, andbasechlorophyllattenuationcoefficientwhich should be  arrays of the coefficients atbasebands` wavelengths. \n\nThe returned field_names default to PAR₁, PAR₂, etc., but may be specified by the user instead.\n\nKeyword Arguments\n\ngrid: grid for building the model on\nwater_red_attenuation, ..., phytoplankton_chlorophyll_ratio: parameter values\nsurface_PAR: function (or array in the future) for the photosynthetically available radiation at the surface,   which should be f(x, y, t) where x and y are the native coordinates (i.e. meters for rectilinear grids  and latitude/longitude as appropriate)\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.Light.PrescribedPhotosyntheticallyActiveRadiation","page":"Library","title":"OceanBioME.Light.PrescribedPhotosyntheticallyActiveRadiation","text":"PrescribedPhotosyntheticallyActiveRadiation(fields)\n\nPrescribedPhotosyntheticallyActiveRadiation returns \"prescribed\" PAR fields which are user specified, e.g. they may be FunctionFields or  ConstantFields.\n\nfields may either be an AbstractField or a NamedTuple of names and  fields which will be returned in biogeochemical_auxiliary_fields, if only one field is present the field will be named PAR.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Light.TwoBandPhotosyntheticallyActiveRadiation-Union{Tuple{}, Tuple{SPAR}, Tuple{FT}} where {FT, SPAR}","page":"Library","title":"OceanBioME.Light.TwoBandPhotosyntheticallyActiveRadiation","text":"TwoBandPhotosyntheticallyActiveRadiation(; grid::AbstractGrid{FT}, \n                                           water_red_attenuation::FT = 0.225, # 1/m\n                                           water_blue_attenuation::FT = 0.0232, # 1/m\n                                           chlorophyll_red_attenuation::FT = 0.037, # 1/(m * (mgChl/m³) ^ eʳ)\n                                           chlorophyll_blue_attenuation::FT = 0.074, # 1/(m * (mgChl/m³) ^ eᵇ)\n                                           chlorophyll_red_exponent::FT = 0.629,\n                                           chlorophyll_blue_exponent::FT = 0.674,\n                                           pigment_ratio::FT = 0.7,\n                                           phytoplankton_chlorophyll_ratio::FT = 1.31,\n                                           surface_PAR::SPAR = default_surface_PAR)\n\nKeyword Arguments\n\ngrid: grid for building the model on\nwater_red_attenuation, ..., phytoplankton_chlorophyll_ratio: parameter values\nsurface_PAR: function (or array in the future) for the photosynthetically available radiation at the surface,   which should be f(x, y, t) where x and y are the native coordinates (i.e. meters for rectilinear grids  and latitude/longitude as appropriate)\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#Sediments","page":"Library","title":"Sediments","text":"","category":"section"},{"location":"appendix/library/#OceanBioME.Models.SedimentModels.InstantRemineralisation","page":"Library","title":"OceanBioME.Models.SedimentModels.InstantRemineralisation","text":"InstantRemineralisation\n\nHold the parameters and fields a simple sediment model where sinking organic carbon is \"instantly remineralised\" and either returned to the domain as  remineralisation_reciever (typically NH₄), or permanently stored in the sediment.\n\nThe \"burial efficiency\" (the fraction permanently stored) is from  Dunne et al. (2007), and varies with the sinking flux.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.SedimentModels.SimpleMultiG","page":"Library","title":"OceanBioME.Models.SedimentModels.SimpleMultiG","text":"struct SimpleMultiG\n\nHold the parameters and fields for a simple \"multi G\" single-layer sediment model. Based on the Level 3 model described by Soetaert et al. (2000).\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.SedimentModels.InstantRemineralisationSediment-Tuple{Any}","page":"Library","title":"OceanBioME.Models.SedimentModels.InstantRemineralisationSediment","text":"InstantRemineralisationSediment(grid;\n                                sinking_tracers = (:P, :D), \n                                remineralisation_reciever = :N,\n                                burial_efficiency_constant1 = 0.013,\n                                burial_efficiency_constant2 = 0.53,\n                                burial_efficiency_half_saturation = 7.0 / 6.56,\n                                kwargs...)\n\nReturn a single-layer instant remineralisation sediment model where the sinking_tracers are instantly remineralised and returned to remineralisation_reciever with a small fraction permanently buried with efficiency:\n\ne = a + b * f / (k + f)²\n\nwhere a is burial_efficiency_constant1, b is burial_efficiency_constant2, and  k is the burial_efficiency_half_saturation.\n\nkwargs... are BiogeochemicalSediment key word arguments.\n\nExample\n\nusing OceanBioME, Oceananigans\n\ngrid = RectilinearGrid(size=(3, 3, 30), extent=(10, 10, 200))\n\nsediment_model = InstantRemineralisationSediment(grid)\n\nbiogeochemistry = NPZD(; grid, sediment_model)\n\nusing OceanBioME, Oceananigans\n\ngrid = RectilinearGrid(size=(3, 3, 30), extent=(10, 10, 200))\n\nsediment_model = InstantRemineralisationSediment(grid; \n                                                 sinking_tracers = (:sPOM, :bPOM),\n                                                 remineralisation_reciever = :NH₄)\n\nbiogeochemistry = LOBSTER(; grid, sediment_model)\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.Models.SedimentModels.SimpleMultiGSediment-Tuple{Any}","page":"Library","title":"OceanBioME.Models.SedimentModels.SimpleMultiGSediment","text":"SimpleMultiGSediment(grid;\n                     fast_decay_rate = 2/day,\n                     slow_decay_rate = 0.2/day,\n                     fast_redfield = 0.1509,\n                     slow_redfield = 0.13,\n                     fast_fraction = 0.74,\n                     slow_fraction = 0.26,\n                     refactory_fraction = 0.1,\n                     sedimentation_rate = 982 * abs(znode(1, 1, 1, grid, Center(), Center(), Center())) ^ (-1.548), # cm/year, incorrect for D < 100m\n                     anoxia_half_saturation = 1.0, # mmol/m³ (arbitarily low)\n                     nitrate_oxidation_params = on_architecture(architecture(grid), (- 1.9785, 0.2261, -0.0615, -0.0289, - 0.36109, - 0.0232)),\n                     denitrification_params = on_architecture(architecture(grid), (- 3.0790, 1.7509, 0.0593, - 0.1923, 0.0604, 0.0662)),\n                     anoxic_params = on_architecture(architecture(grid), (- 3.9476, 2.6269, - 0.2426, -1.3349, 0.1826, - 0.0143)),\n                     solid_dep_params = on_architecture(architecture(grid), (0.233, 0.336, 982.0, - 1.548)),\n                     sinking_nitrogen = (:sPOM, :bPOM),\n                     sinking_carbon = nothing,\n                     sinking_redfield = ifelse(isnothing(sinking_carbon), convert(eltype(grid), 6.56), nothing),\n                     kwargs...)\n\nReturn a single-layer \"multi G\" sediment model (SimpleMultiG) on grid, where parameters can be optionally specified.\n\nThe model is a single layer (i.e. does not include porous diffusion) model with three classes of sediment organic matter which decay at three different rates (fast, slow, refactory). The nitrification/denitrification/anoxic mineralisation fractions default to the parameterisation of Soetaert et al. 2000; doi:10.1016/S0012-8252(00)00004-0.\n\nThis model has not yet been validated or compared to observational data. The variety of degridation processes is likely to be strongly dependent on oxygen availability (see https://bg.copernicus.org/articles/6/1273/2009/bg-6-1273-2009.pdf) so it will therefore be important to also thoroughly validate the oxygen model (also currently limited).\n\nExample\n\njulia> using OceanBioME, Oceananigans\n\njulia> grid = RectilinearGrid(size=(3, 3, 30), extent=(10, 10, 200));\n\njulia> sediment_model = SimpleMultiGSediment(grid)\n`BiogeochemicalSediment` with `Single-layer multi-G sediment model (Float64)` biogeochemsitry\n    Prognostic fields: (:Ns, :Nf, :Nr)\n    Tracked fields: (:NO₃, :NH₄, :O₂, :sPOM, :bPOM)\n    Coupled fields: (:NO₃, :NH₄, :O₂)\n\njulia> biogeochemistry = LOBSTER(; grid, sediment_model)\nLOBSTER{Float64} with carbonates ❌, oxygen ❌, variable Redfield ratio ❌ and (:sPOM, :bPOM) sinking\n Light attenuation: Two-band light attenuation model (Float64)\n Sediment: `BiogeochemicalSediment` with `Single-layer multi-G sediment model (Float64)` biogeochemsitry\n Particles: Nothing\n Modifiers: Nothing\n\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#Gas-exchange-boundary-conditions","page":"Library","title":"Gas exchange boundary conditions","text":"","category":"section"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel","page":"Library","title":"OceanBioME.Models.GasExchangeModel","text":"GasExchangeModel to solve chemical equilibrium parameterisations\n\n\n\n\n\n","category":"module"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.CarbonDioxideConcentration","page":"Library","title":"OceanBioME.Models.GasExchangeModel.CarbonDioxideConcentration","text":"CarbonDioxideConcentration(; carbon_chemistry, \n                             first_virial_coefficient = PolynomialVirialCoefficientForCarbonDioxide(),\n                             cross_viral_coefficient = CrossVirialCoefficientForCarbonDioxide(),\n                             air_pressue = 1 # atm)\n\nConverts fCO₂ to partial pressure as per Dickson, A.G., Sabine, C.L. and  Christian, J.R. (2007),  Guide to Best Practices for Ocean CO 2 Measurements. PICES Special Publication 3, 191 pp.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.GasExchange","page":"Library","title":"OceanBioME.Models.GasExchangeModel.GasExchange","text":"GasExchange\n\nGasExchange returns the air-sea flux of a gas betwen water_concentration and air_concentration with a transfer_velocity computed from the temperature  (provided later), and the wind_speed.\n\ntransfer_velocity should behave as a function of wind speed and temperature (i.e. k(u, T)), water_concentration a function of c(x, y, t, T, field_dependencies...).\n\nwater_concentration, air_concentration and wind_speed can either be numbers,  functions of the form (x, y, t), functions of the form (i, j, grid, clock, model_fields)  if discrete_form is set to true, or any kind of Field.\n\nwater_concentration should usually be a [Tracer]Concentration where is the name of the tracer (you will have to build your own if this is not OxygenConcentration),  or a CarbonDioxideConcentration which diagnoses the partial pressure of CO₂ in the water.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.PartiallySolubleGas","page":"Library","title":"OceanBioME.Models.GasExchangeModel.PartiallySolubleGas","text":"PartiallySolubleGas(; air_concentration, solubility)\n\nParameterises the available concentration of a gas dissolving in water in the form alpha C_a where lpha is the Ostwald solubility coeffieient and C_a is the concentration in the air.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.Wanninkhof92Solubility","page":"Library","title":"OceanBioME.Models.GasExchangeModel.Wanninkhof92Solubility","text":"Wanninkhof92Solubility\n\nParameterises the Ostwald solubility coefficient as given in Wanninkhof, 1992.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.CarbonDioxideGasExchangeBoundaryCondition","page":"Library","title":"OceanBioME.Models.GasExchangeModel.CarbonDioxideGasExchangeBoundaryCondition","text":"CarbonDioxideGasExchangeBoundaryCondition(FT = Float64; \n                                          carbon_chemistry = CarbonChemistry(FT),\n                                          transfer_velocity = SchmidtScaledTransferVelocity(schmidt_number = CarbonDioxidePolynomialSchmidtNumber(FT)),\n                                          air_concentration = 413, # ppmv\n                                          wind_speed = 2,\n                                          water_concentration = nothing,\n                                          silicate_and_phosphate_names = nothing,\n                                          kwargs...)\n\nReturns a FluxBoundaryCondition for the gas exchange between carbon dioxide dissolved in the water specified by the carbon_chemisty model, and air_concentration with transfer_velocity (see  GasExchangeBoundaryCondition for details).\n\nsilicate_and_phosphate_names should either be nothing, a Tupleof symbols specifying the name of the silicate and phosphate tracers, or aNamedTupleof values for thecarbon_chemistry` model.\n\nkwargs are passed on to GasExchangeBoundaryCondition.\n\nNote: The model always requires T, S, DIC, and Alk to be present in the model.\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.CarbonDioxidePolynomialSchmidtNumber","page":"Library","title":"OceanBioME.Models.GasExchangeModel.CarbonDioxidePolynomialSchmidtNumber","text":"CarbonDioxidePolynomialSchmidtNumber(FT = Float64; a = 2116.8, b = -136.25, c = 4.7353, d = -0.092307, e = 0.0007555)\n\nSchmidt number parameterisation Wanninkhof, 2014 for sea water\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.GasExchangeBoundaryCondition","page":"Library","title":"OceanBioME.Models.GasExchangeModel.GasExchangeBoundaryCondition","text":"GasExchangeBoundaryCondition(; water_concentration,\n                               air_concentration,\n                               transfer_velocity,\n                               wind_speed)\n\nReturns a FluxBoundaryCondition for the gas exchange between water_concentration and air_concentration with transfer_velocity.\n\nwater_concentration, air_concentration and wind_speed can either be numbers,  functions of the form (x, y, t), functions of the form (i, j, grid, clock, model_fields)  if discrete_form is set to true, or any kind of Field.\n\nwater_concentration should usually be a [Tracer]Concentration where is the name of the tracer (you will have to build your own if this is not OxygenConcentration),  or a CarbonDioxideConcentration which diagnoses the partial pressure of CO₂ in the water.\n\ntransfer_velocity should be a function of the form k(u₁₀, T).\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.OxygenGasExchangeBoundaryCondition","page":"Library","title":"OceanBioME.Models.GasExchangeModel.OxygenGasExchangeBoundaryCondition","text":"OxygenGasExchangeBoundaryCondition(FT = Float64; \n                                   transfer_velocity = SchmidtScaledTransferVelocity(schmidt_number = OxygenPolynomialSchmidtNumber(FT)),\n                                   water_concentration = OxygenConcentration(),\n                                   air_concentration = 9352.7, # mmolO₂/m³\n                                   wind_speed = 2,\n                                   kwagrs...)\n\nReturns a FluxBoundaryCondition for the gas exchange between oxygen dissolved in the water specified by the the OxygenConcentration in the base model, and air_concentration with transfer_velocity (see GasExchangeBoundaryCondition for details).\n\nkwargs are passed on to GasExchangeBoundaryCondition.\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.OxygenPolynomialSchmidtNumber","page":"Library","title":"OceanBioME.Models.GasExchangeModel.OxygenPolynomialSchmidtNumber","text":"OxygenPolynomialSchmidtNumber(FT = Float64; a = 1953.4, b = - 128.0, c = 3.9918, d = -0.050091)\n\nSchmidt number parameterisation Wanninkhof, 2014 for sea water\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.SchmidtScaledTransferVelocity","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.SchmidtScaledTransferVelocity","text":"SchmidtScaledTransferVelocity(; schmidt_number, \n                                base_transfer_velocity = Ho06())\n\nReturns a model for gas transfer velocity which depends on the u₁₀, the 10m-wind, and  Temperature. The model is of the typical form:\n\nk(u₁₀, T) = k₆₆₀(u₁₀) √(660/Sc(T))\n\nThe base_transfer_velocity (k₆₆₀) is typically an empirically derived gas transfer velocity normalised by the Scmidt number for CO₂ at 20°C (660), and the schmidt_number (Sc) is a parameterisation of the gas specific Schmidt number.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.CCMP2","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.CCMP2","text":"CCMP2(FT = Float64; scale_factor = 0.256789 / hour / 100)\n\nQuadratic k₆₆₀ parameterisation calibrated to give 16.5 cm/hr global average (reccomended Naegler, 2009) for the CCMP2 wind product by SeaFlux/Luke Gregor et al. (2023).\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.ERA5","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.ERA5","text":"ERA5(FT = Float64; scale_factor = 0.270875 / hour / 100)\n\nQuadratic k₆₆₀ parameterisation calibrated to give 16.5 cm/hr global average (reccomended Naegler, 2009) for the ERA5 wind product by SeaFlux/Luke Gregor et al. (2023).\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Ho06","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Ho06","text":"Ho06(FT = Float64; scale_factor = 0.266 / hour / 100)\n\nQuadratic k₆₆₀ parameterisation of Ho et al. (2006) suitable for the QuickSCAT satellite and short-term  steady wind product.\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.JRA55","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.JRA55","text":"JRA55(FT = Float64; scale_factor = 0.2601975 / hour / 100)\n\nQuadratic k₆₆₀ parameterisation calibrated to give 16.5 cm/hr global average (reccomended Naegler, 2009) for the JRA55 wind product by SeaFlux/Luke Gregor et al. (2023).\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.McGillis01","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.McGillis01","text":"McGillis01(FT = Float64; constant = 3.3 / hour / 100, cubic = 0.026 / hour / 100)\n\nCubic k₆₆₀ parameterisation of McGillis et al. (2001) suitable for  short term, in situ wind products.\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.NCEP1","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.NCEP1","text":"NCEP1(FT = Float64; scale_factor = 0.2866424 / hour / 100)\n\nQuadratic k₆₆₀ parameterisation calibrated to give 16.5 cm/hr global average (reccomended Naegler, 2009) for the NCEP1 wind product by SeaFlux/Luke Gregor et al. (2023).\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Nightingale00","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Nightingale00","text":"Nightingale00(FT = Float64; linear = 0.333 / hour / 100, quadratic = 0.222 / hour / 100)\n\nCubic k₆₆₀ parameterisation of Nightingale et al. (2000) suitable for  short term, in situ wind products (?).\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Sweeny07","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Sweeny07","text":"Sweeny07(FT = Float64; scale_factor = 0.27 / hour / 100)\n\nQuadratic k₆₆₀ parameterisation of Sweeny et al. (2007) suitable for the NCEP/NCAR reanalysis 1 product\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Wanninkhof09","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Wanninkhof09","text":"Wanninkhof09(FT = Float64; constant = 3 / hour / 100, linear = 0.1 / hour / 100, quadratic = 0.064 / hour / 100, cubic = 0.011 / hour / 100)\n\nCubic k₆₆₀ parameterisation of Wanninkhof et al (2009) suitable for the Cross-Calibrated Multi-Platform (CCMP) Winds product\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Wanninkhof14","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Wanninkhof14","text":"Wanninkhof14(FT = Float64; scale_factor = 0.251 / hour / 100)\n\nQuadratic k₆₆₀ parameterisation of Wanninkhof et al (2014) suitable for the Cross-Calibrated Multi-Platform (CCMP) Winds product\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Wanninkhof99","page":"Library","title":"OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.Wanninkhof99","text":"Wanninkhof99(FT = Float64; scale_factor = 0.0283 / hour / 100)\n\nCubic k₆₆₀ parameterisation of Wanninkhof & McGillis (1999) suitable for  short term, in situ wind products.\n\n\n\n\n\n","category":"function"},{"location":"appendix/library/#Box-Model","page":"Library","title":"Box Model","text":"","category":"section"},{"location":"appendix/library/#OceanBioME.BoxModels","page":"Library","title":"OceanBioME.BoxModels","text":"Integrate biogeochemical models on a single point\n\n\n\n\n\n","category":"module"},{"location":"appendix/library/#OceanBioME.BoxModels.BoxModel-Union{Tuple{}, Tuple{PT}, Tuple{C}, Tuple{G}, Tuple{B}} where {B, G, C, PT}","page":"Library","title":"OceanBioME.BoxModels.BoxModel","text":"BoxModel(; biogeochemistry,\n           forcing = NamedTuple(),\n           timestepper = :RungeKutta3,\n           clock = Clock(; time = 0.0),\n           prescribed_tracers::PT = NamedTuple())\n\nConstructs a box model of a biogeochemistry model. Once this has been constructed you can set initial condiitons by set!(model, X=1.0...).\n\nKeyword Arguments\n\nbiogeochemistry: (required) an OceanBioME biogeochemical model, most models must be passed a grid which can be set to a BoxModelGrid for box models\nforcing: NamedTuple of additional forcing functions for the biogeochemical tracers to be integrated\ntimestepper: Timestepper to integrate model\nclock: Oceananigans clock to keep track of time\nprescribed_tracers: named tuple of tracer names and function (f(t)) prescribing tracer values\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#Oceananigans.Fields.set!-Tuple{BoxModel}","page":"Library","title":"Oceananigans.Fields.set!","text":"set!(model::BoxModel; kwargs...)\n\nSet the values for a BoxModel\n\nArguments\n\nmodel - the model to set the arguments for\n\nKeyword Arguments\n\nvariables and value pairs to set\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#Oceananigans.TimeSteppers.cache_previous_tendencies!-Tuple{BoxModel}","page":"Library","title":"Oceananigans.TimeSteppers.cache_previous_tendencies!","text":"Store previous source terms before updating them. \n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#Particles","page":"Library","title":"Particles","text":"","category":"section"},{"location":"appendix/library/#OceanBioME.Particles.BiogeochemicalParticles-Union{Tuple{Any}, Tuple{FT}} where FT","page":"Library","title":"OceanBioME.Particles.BiogeochemicalParticles","text":"BiogeochemicalParticles(number; \n                        grid,\n                        biogeochemistry,\n                        advection = LagrangianAdvection(),\n                        timestepper = ForwardEuler,\n                        field_interpolation = NearestPoint(),\n                        scalefactors = ones(number))\n\nCreates number particles with biogeochemistry on grid, advected by advection which defaults to LagrangianAdvection (i.e. they comove with the water). The biogeochemistry is stepped by timestepper and tracer fields are interpolated by field_interpolation, which defaults to directly reading the nearest center point and taking up/depositing in the same.\n\nParticles can also have a scalefactor which scales their tracer interaction (e.g. to mimic the particle representing multiple particles).\n\n\n\n\n\n","category":"method"},{"location":"appendix/library/#OceanBioME.Particles.ForwardEuler","page":"Library","title":"OceanBioME.Particles.ForwardEuler","text":"ForwardEuler\n\nStep particle biogeochemistry with a ForwardEuler methods with Δt from the physical model substep.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Particles.LagrangianAdvection","page":"Library","title":"OceanBioME.Particles.LagrangianAdvection","text":"LagrangianAdvection\n\nSpecifies that particles should move in a purley lagrangian mannor.\n\n\n\n\n\n","category":"type"},{"location":"appendix/library/#OceanBioME.Particles.NearestPoint","page":"Library","title":"OceanBioME.Particles.NearestPoint","text":"NearestPoint\n\nSpecifies that tracer values should be taken from the nearst center point.\n\n\n\n\n\n","category":"type"},{"location":"references/#References","page":"References","title":"References","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"Aumont, O.; Ethé, C.; Tagliabue, A.; Bopp, L. and Gehlen, M. (2015). PISCES-v2: An ocean biogeochemical model for carbon and ecosystem studies. Geoscientific Model Development 8, 2465–2513.\n\n\n\nBranson, O. (2023), oscarbranson/cbsyst. Zenodo.\n\n\n\nBroch, O. J.; Alver, M. O.; Bekkby, T.; Gundersen, H.; Forbord, S.; Handå, A.; Skjermo, J. and Hancke, K. (2019). The kelp cultivation potential in coastal and offshore regions of Norway. Frontiers in Marine Science 5.\n\n\n\nBroch, O. J.; Ellingsen, I. H.; Forbord, S.; Wang, X.; Volent, Z.; Alver, M. O.; Handå, A.; Andresen, K.; Slagstad, D.; Reitan, K. I.; Olsen, Y. and Skjermo, J. (2013). Modelling the cultivation and bioremediation potential of the kelp Saccharina latissima in close proximity to an exposed salmon farm in Norway. Aquaculture Environment Interactions 4, 187–206.\n\n\n\nBroch, O. J. and Slagstad, D. (2012). Modelling seasonal growth and composition of the kelp Saccharina latissima. Journal of Applied Phycology 24, 759–776.\n\n\n\nChen, M.; Fan, M.; Liu, R.; Wang, X.; Yuan, X. and Zhu, H. (2015). The dynamics of temperature and light on the growth of phytoplankton. Journal of Theoretical Biology 385, 8–19.\n\n\n\nDickson, A.; Sabine, C. and Christian, J. (2007). Guide to best practices for ocean CO2 measurement. North Pacific Marine Science Organization PICES Special Publication 3; IOCCP Report 8, 191.\n\n\n\nDunne, J. P.; Sarmiento, J. L. and Gnanadesikan, A. (2007). A synthesis of global particle export from the surface ocean and cycling through the ocean interior and on the seafloor. Global Biogeochemical Cycles 21.\n\n\n\nFeistel, R. (2008). A Gibbs function for seawater thermodynamics for −6 to 80^circC and salinity up to 120gkg–1. Deep Sea Research Part I: Oceanographic Research Papers 55, 1639–1671.\n\n\n\nFossberg, J.; Forbord, S.; Broch, O. J.; Malzahn, A. M.; Jansen, H.; Handå, A.; Førde, H.; Bergvik, M.; Fleddum, A. L.; Skjermo, J. and Olsen, Y. (2018). The potential for upscaling kelp (Saccharina latissima) cultivation in salmon-driven integrated multi-trophic aquaculture (IMTA). Frontiers in Marine Science 9.\n\n\n\nHo, D. T.; Law, C. S.; Smith, M. J.; Schlosser, P.; Harvey, M. and Hill, P. (2006). Measurements of air-sea gas exchange at high wind speeds in the Southern Ocean: Implications for global parameterizations. Geophysical Research Letters 33, arXiv:https://agupubs.onlinelibrary.wiley.com/doi/pdf/10.1029/2006GL026817.\n\n\n\nHumphreys, M. P.; Lewis, E. R.; Sharp, J. D. and Pierrot, D. (2022). PyCO2SYS v1.8: marine carbonate system calculations in Python. Geoscientific Model Development 15, 15–43.\n\n\n\nKarleskind, P.; Lévy, M. and Memery, L. (2011). Subduction of carbon, nitrogen, and oxygen in the northeast Atlantic. Journal of Geophysical Research: Oceans 116.\n\n\n\nKuhn, A. M.; Fennel, K. and Mattern, J. P. (2015). Model investigations of the North Atlantic spring bloom initiation. Progress in Oceanography 138, 176–193.\n\n\n\nLévy, M.; Gavart, M.; Mémery, L.; Caniaux, G. and Paci, A. (2005). A four-dimensional mesoscale map of the spring bloom in the northeast Atlantic (POMME experiment): Results of a prognostic model. Journal of Geophysical Research C: Oceans 110, 1–23.\n\n\n\nLévy, M.; Klein, P. and Treguier, A.-M. (2001). Impact of sub-mesoscale physics on production and subduction of phytoplankton in an oligotrophic regime. Journal of Marine Research 59, 535–565.\n\n\n\nMorel, A. (1988). Optical modeling of the upper ocean in relation to its biogenous matter content (case I waters). Journal of Geophysical Research 93, 10749.\n\n\n\nResplandy, L.; Lévy, M.; D'Ovidio, F. and Merlivat, L. (2009). Impact of submesoscale variability in estimating the air-sea CO2 exchange: Results from a model study of the POMME experiment. Global Biogeochemical Cycles 23.\n\n\n\nResplandy, L.; Martin, A. P.; Moigne, F. L.; Martin, P.; Aquilina, A.; Mémery, L.; Lévy, M. and Sanders, R. (2012). How does dynamical spatial variability impact 234Th-derived estimates of organic export? Deep-Sea Research Part I: Oceanographic Research Papers 68, 24–45.\n\n\n\nRoquet, F.; Madec, G.; McDougall, T. J. and Barker, P. M. (2015). Accurate polynomial expressions for the density and specific volume of seawater using the TEOS-10 standard. Ocean Modelling 90, 29–43.\n\n\n\nSoetaert, K.; Middelburg, J. J.; Herman, P. M. and Buis, K. (2000). On the coupling of benthic and pelagic biogeochemical models. Earth-Science Reviews 51, 173–201.\n\n\n\nStrong-Wright, J. and Taylor, J. (2022). Modeling the Growth Potential of the Kelp Saccharina Latissima in the North Atlantic. Frontiers in Marine Science 8.\n\n\n\nTaylor, J. R. (2016). Turbulent mixing, restratification, and phytoplankton growth at a submesoscale eddy. Geophysical Research Letters 43, 5784–5792.\n\n\n\nWanninkhof, R. (2014). Relationship between wind speed and gas exchange over the ocean revisited. Limnology and Oceanography: Methods 12, 351–362, arXiv:https://aslopubs.onlinelibrary.wiley.com/doi/pdf/10.4319/lom.2014.12.351.\n\n\n\nWeiss, R. (1974). Carbon dioxide in water and seawater: the solubility of a non-ideal gas. Marine Chemistry 2, 203–215.\n\n\n\n","category":"page"},{"location":"appendix/params/#parameters","page":"Parameters","title":"Parameters","text":"","category":"section"},{"location":"appendix/params/","page":"Parameters","title":"Parameters","text":"These pages contain most of the parameters used in the models included in OceanBioME.jl for ease of reference.","category":"page"},{"location":"appendix/params/","page":"Parameters","title":"Parameters","text":"Units are generally mmol X / m³ for concentration, and SI otherwise.","category":"page"},{"location":"generated/OceanBioME.Models.SedimentModels.SimpleMultiG_parameters/#OceanBioME.Models.SedimentModels.SimpleMultiG-default-parameters","page":"OceanBioME.Models.SedimentModels.SimpleMultiG","title":"OceanBioME.Models.SedimentModels.SimpleMultiG default parameters","text":"","category":"section"},{"location":"generated/OceanBioME.Models.SedimentModels.SimpleMultiG_parameters/","page":"OceanBioME.Models.SedimentModels.SimpleMultiG","title":"OceanBioME.Models.SedimentModels.SimpleMultiG","text":"Name Value\nsinking_redfield 6.56\nfast_decay_rate 2.3148148148148147e-5\nslow_decay_rate 2.3148148148148148e-6\nfast_redfield 0.1509\nslow_redfield 0.13\nfast_fraction 0.74\nslow_fraction 0.26\nrefactory_fraction 0.1\nsedimentation_rate 2871.4808286576654\nanoxia_half_saturation 1.0\nnitrate_oxidation_params (-1.9785, 0.2261, -0.0615, -0.0289, -0.36109, -0.0232)\ndenitrification_params (-3.079, 1.7509, 0.0593, -0.1923, 0.0604, 0.0662)\nanoxic_params (-3.9476, 2.6269, -0.2426, -1.3349, 0.1826, -0.0143)\nsolid_dep_params (0.233, 0.336, 982.0, -1.548)\nsinking_nitrogen (:sPOM, :bPOM)\nsinking_carbon ()","category":"page"},{"location":"model_implementation/#model_implementation","page":"Implementing new models","title":"Implementing new models","text":"","category":"section"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"Here we describe how OceanBioME defines biogeochemical (BGC) models, how this varies from Oceananigans, and how to implement your own model.","category":"page"},{"location":"model_implementation/#Model-structure","page":"Implementing new models","title":"Model structure","text":"","category":"section"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"OceanBioME BGC models are structs of type ContinuousFormBiogeochemistry, which is of abstract type AbstractContinuousFormBiogeochemistry from Oceananigans. In Oceananigans this describes BGC models which are defined using continuous functions (depending continuously on x, y, and z) rather than discrete functions (depending on i, j, k). This allows the user to implement the BGC model equations without worrying about details of the grid or discretization, and then Oceananigans handles the rest.","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"OceanBioME's ContinuousFormBiogeochemistry adds a layer on top of this which makes it easy to add light attenuation models, sediment, and biologically active particles (or individual-based models). OceanBioME's ContinuousFormBiogeochemistry includes parameters in which the types of these components are stored. This means that these model components will automatically be integrated into the BGC model without having to add new methods to call Oceananigans functions. ","category":"page"},{"location":"model_implementation/#Implementing-a-model","page":"Implementing new models","title":"Implementing a model","text":"","category":"section"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"The nature of multiple dispatch in Julia means that we define new BGC models as new types. You can then define methods to this type which are used by OceanBioME and Oceananigans to integrate the model.","category":"page"},{"location":"model_implementation/#The-basics","page":"Implementing new models","title":"The basics","text":"","category":"section"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"For this example we are going to implement the simple Nutrient-Phytoplankton model similar to that used in (Chen et al., 2015), although we neglect the nutrient in/outflow terms since they may be added as boundary conditions, and modified to conserve nitrogen.","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"The first step is to import the abstract type from OceanBioME, some units from Oceananigans (for ease of parameter definition), and import some functions from Oceananigans in order to add methods to:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"using OceanBioME, Oceananigans\nusing Oceananigans.Biogeochemistry: AbstractContinuousFormBiogeochemistry\nusing Oceananigans.Units\nusing Oceananigans.Fields: ConstantField\n\nimport Oceananigans.Biogeochemistry: required_biogeochemical_tracers,\n                                     required_biogeochemical_auxiliary_fields,\n                                     biogeochemical_drift_velocity","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"We then define our struct with the model parameters, as well as slots for the particles, light attenuation, and sediment models:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"@kwdef struct NutrientPhytoplankton{FT, W} <: AbstractContinuousFormBiogeochemistry\n            base_growth_rate :: FT = 1.27 / day              # 1 / seconds\n    nutrient_half_saturation :: FT = 0.025 * 1000 / 14       # mmol N / m³\n       light_half_saturation :: FT = 300.0                   # micro einstein / m² / s\n        temperature_exponent :: FT = 0.24                    # 1\n     temperature_coefficient :: FT = 1.57                    # 1\n         optimal_temperature :: FT = 28.0                    # °C\n              mortality_rate :: FT = 0.15 / day              # 1 / seconds\n     crowding_mortality_rate :: FT = 0.004 / day / 1000 * 14 # 1 / seconds / mmol N / m³\n            sinking_velocity :: W  = ConstantField(2 / day)\nend","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"Here, we use descriptive names for the parameters. Below, each of these parameters correspond to a symbol (or letter) which is more convenient mathematically and when defining the BGC model functions. In the above code we used @kwdef to set default values for the models so that we don't have to set all of these parameters each time we use the model. The default parameter values can optionally be over-ridden by the user when running the model. We have also included a sinking_velocity field in the parameter set to demonstrate how we can get tracers (e.g. detritus) to sink.","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"We also need to define some functions so that OceanBioME and Oceananigans know what tracers and auxiliary fields (e.g. light intensity) we use:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"required_biogeochemical_tracers(::NutrientPhytoplankton) = (:N, :P, :T)\n\nrequired_biogeochemical_auxiliary_fields(::NutrientPhytoplankton) = (:PAR, )","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"Next, we define the functions that specify how the phytoplankton P evolve. In the absence of advection and diffusion (both of which are handled by Oceananigans), we want the phytoplankton to evolve at the rate given by:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"fracpartial Ppartial t = mu g(T) f(N) h(PAR) P - mP - bP^2","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"where mu corresponds to the parameter base_growth_rate, m corresponds to the parameter mortality_rate, and b corresponds to the parameter crowding_mortality_rate. Here, the functions g, f, and h are defined by:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"beginalign\ng(T) = c_1expleft(-c_2T - T_optright)\nf(N) = fracNk_N + N\nh(PAR) = fracPARk_P + PAR\nendalign","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"where c_1 corresponds to temperature_coefficient,  c_2 corresponds to temperature_exponent, T_opt corresponds to optimal_temperature, k_N corresponds to nutrient_half_saturation, and k_P corresponds to light_half_saturation. ","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"We turn this into a function for our model by writing:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"@inline function (bgc::NutrientPhytoplankton)(::Val{:P}, x, y, z, t, N, P, T, PAR)\n    μ = bgc.base_growth_rate\n    m = bgc.mortality_rate\n    b = bgc.crowding_mortality_rate\n\n    growth = μ * g(bgc, T) * f(bgc, N) * h(bgc, PAR) * P\n\n    death = m * P + b * P ^ 2\n\n    return growth - death\nend\n\n@inline function g(bgc, T)\n    c₁ = bgc.temperature_coefficient\n    c₂ = bgc.temperature_exponent\n    Tₒ = bgc.optimal_temperature\n\n    return c₁ * exp(-c₂ * abs(T - Tₒ))\nend\n\n@inline function f(bgc, N)\n    kₙ = bgc.nutrient_half_saturation\n\n    return N / (N + kₙ)\nend\n\n@inline function h(bgc, PAR)\n    kₚ = bgc.light_half_saturation\n\n    return PAR / (PAR + kₚ)\nend","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"The first parameter ::Val{:P} is a special value type that allows this function to be dispatched when it is given the value Val(:P). This is how Oceananigans tells the model which forcing function to use. At the start of the NutrientPhytoplankton function we unpack some parameters from the model, then calculate each term, and return the total change (the gain minus the loss). ","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"For this model, the nutrient evolution can be inferred from the rate of change of phytoplankton. Since this is a simple two variable model and the total concentration is conserved, ","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"fracpartial Npartial t = - fracpartial Ppartial t","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"Hence, we define the nutrient forcing using as the negative of the phytoplankton forcing","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"@inline (bgc::NutrientPhytoplankton)(::Val{:N}, args...) = -bgc(Val(:P), args...)","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"Now we can run an example similar to the LOBSTER box model example:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"using OceanBioME, Oceananigans.Units\nusing Oceananigans.Fields: FunctionField\n\nconst year = years = 365days\n\n@inline PAR⁰(t) = 500 * (1 - cos((t + 15days) * 2π / year)) * (1 / (1 + 0.2 * exp(-((mod(t, year) - 200days) / 50days)^2))) + 2\n\nclock = Clock(; time = 0.0)\n\nz = -10 # specify the nominal depth of the box for the PAR profile\n@inline PAR_func(t) = PAR⁰(t) * exp(0.2z) # Modify the PAR based on the nominal depth and exponential decay \n\nPAR = FunctionField{Center, Center, Center}(PAR_func, BoxModelGrid(); clock)\n\n@inline temp(t) = 2.4 * cos(t * 2π / year + 50days) + 26\n\nbiogeochemistry = Biogeochemistry(NutrientPhytoplankton(); \n                                  light_attenuation = PrescribedPhotosyntheticallyActiveRadiation(PAR))\n\nmodel = BoxModel(; biogeochemistry,\n                   prescribed_tracers = (; T = temp),\n                   clock)\n\nset!(model, N = 15, P = 15)\n\nsimulation = Simulation(model; Δt = 5minutes, stop_time = 5years)\n\nsimulation.output_writers[:fields] = JLD2Writer(model, model.fields; filename = \"box_np.jld2\", schedule = TimeInterval(10days), overwrite_existing = true)\n\n# ## Run the model (should only take a few seconds)\n@info \"Running the model...\"\nrun!(simulation)","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"We can then visualise this:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"P = FieldTimeSeries(\"box_np.jld2\", \"P\")\nN = FieldTimeSeries(\"box_np.jld2\", \"N\")\n\ntimes = P.times\n\n# ## And plot\nusing CairoMakie\n\nfig = Figure(size = (1200, 480), fontsize = 20)\n\naxN= Axis(fig[1, 1], ylabel = \"Nutrient \\n(mmol N / m³)\")\nlines!(axN, times / year, N[1, 1, 1, :], linewidth = 3)\n\naxP = Axis(fig[1, 2], ylabel = \"Phytoplankton \\n(mmol N / m³)\")\nlines!(axP, times / year, P[1, 1, 1, :], linewidth = 3)\n\naxPAR= Axis(fig[2, 1], ylabel = \"PAR (einstein / m² / s)\", xlabel = \"Time (years)\")\nlines!(axPAR, times / year, PAR_func.(times), linewidth = 3)\n\naxT = Axis(fig[2, 2], ylabel = \"Temperature (°C)\", xlabel = \"Time (years)\")\nlines!(axT, times / year, temp.(times), linewidth = 3)\n\nfig","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"So now we know it works.","category":"page"},{"location":"model_implementation/#Phytoplankton-sinking","page":"Implementing new models","title":"Phytoplankton sinking","text":"","category":"section"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"Now that we have a fully working BGC model we might want to add some more features. Another aspect that is easy to add is negative buoyancy (sinking). To-do this all we do is add a method to the Oceananigans function biogeochemical_drift_velocity, and we use ::Val{:P} to specify that only phytoplankton will sink. Above, we set the default value of the parameter bgc.sinking_velocity. We can override this when we call the BGC model like NutrientPhytoplankton(; light_attenuation_model, sinking_velocity = 1/day). Note that before using biogeochemical_drift_velocity, we need to import several Fields from Oceananigans:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"using Oceananigans.Fields: ZeroField, ConstantField\n\nbiogeochemical_drift_velocity(bgc::NutrientPhytoplankton, ::Val{:P}) = \n    (u = ZeroField(), v = ZeroField(), w = bgc.sinking_velocity)","category":"page"},{"location":"model_implementation/#Sediment-model-coupling","page":"Implementing new models","title":"Sediment model coupling","text":"","category":"section"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"Another aspect that OceanBioME includes is sediment models. Doing this varies between sediment models, but for the most generic and simplest, all we need to do is add methods to two functions:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"using OceanBioME.Sediments: sinking_flux\n\nimport OceanBioME.Sediments: nitrogen_flux, carbon_flux, remineralisation_receiver, sinking_tracers\n\n@inline nitrogen_flux(i, j, k, grid, advection, bgc::NutrientPhytoplankton, tracers) =\n     sinking_flux(i, j, k, grid, advection, Val(:P), bgc, tracers)\n                 \n@inline carbon_flux(i, j, k, grid, advection, bgc::NutrientPhytoplankton, tracers) = nitrogen_flux(i, j, k, grid, advection, bgc, tracers) * 6.56\n\n@inline remineralisation_receiver(::NutrientPhytoplankton) = :N\n\n@inline sinking_tracers(::NutrientPhytoplankton) = (:P, )","category":"page"},{"location":"model_implementation/#Putting-it-together","page":"Implementing new models","title":"Putting it together","text":"","category":"section"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"Now that we have added these elements we can put it together into another simple example:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"using Oceananigans, OceanBioME\n\n# define some simple forcing\n\n@inline surface_PAR(t) = 200 * (1 - cos((t + 15days) * 2π / year)) * (1 / (1 + 0.2 * exp(-((mod(t, year) - 200days) / 50days)^2))) + 2\n\n@inline ∂ₜT(z, t) = - 2π / year * sin(t * 2π / year + 50days)\n\n@inline κₚ(z) = 1e-2 * (1 + tanh((z - 50) / 10)) / 2 + 1e-4\n\n# define the grid\n\ngrid = RectilinearGrid(topology = (Flat, Flat, Bounded), size = (32, ), x = 1, y = 1, z = (-100, 0))\n\n# setup the biogeochemical model\n\nlight_attenuation = TwoBandPhotosyntheticallyActiveRadiation(; grid, surface_PAR)\n\nsediment = InstantRemineralisationSediment(grid; sinking_tracers = :P)\n\nsinking_velocity = ZFaceField(grid)\n\nw_sink(z) = 2 / day * tanh(z / 5)\n\nset!(sinking_velocity, w_sink)\n\nnegative_tracer_scaling = ScaleNegativeTracers((:N, :P))\n\nbiogeochemistry = Biogeochemistry(NutrientPhytoplankton(; sinking_velocity);\n                                  light_attenuation,\n                                  sediment,\n                                  modifiers = negative_tracer_scaling) \n\nκ = CenterField(grid)\n\nset!(κ, κₚ)\n\n# put the model together\n\nmodel = NonhydrostaticModel(; grid,\n                              biogeochemistry,\n                              closure = ScalarDiffusivity(ν = κ; κ), \n                              forcing = (; T = ∂ₜT))\n\nset!(model, P = 0.01, N = 15, T = 28)\n\n# run\n\nsimulation = Simulation(model, Δt = 9minutes, stop_time = 1years)\n\nsimulation.output_writers[:tracers] = JLD2Writer(model, model.tracers,\n                                                 filename = \"column_np.jld2\",\n                                                 schedule = TimeInterval(1day),\n                                                 overwrite_existing = true)\n\nsimulation.output_writers[:sediment] = JLD2Writer(model, model.biogeochemistry.sediment.fields,\n                                                  indices = (:, :, 1),\n                                                  filename = \"column_np_sediment.jld2\",\n                                                  schedule = TimeInterval(1day),\n                                                  overwrite_existing = true)\n\nrun!(simulation)","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"We can then visualise this:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"N = FieldTimeSeries(\"column_np.jld2\", \"N\")\nP = FieldTimeSeries(\"column_np.jld2\", \"P\")\n\nsed = FieldTimeSeries(\"column_np_sediment.jld2\", \"storage\")\n\nfig = Figure()\n\naxN = Axis(fig[1, 1], ylabel = \"z (m)\")\naxP = Axis(fig[2, 1], ylabel = \"z (m)\")\naxSed = Axis(fig[3, 1:2], ylabel = \"Sediment (mmol N / m²)\", xlabel = \"Time (years)\")\n\n_, _, zc = nodes(grid, Center(), Center(), Center())\ntimes = N.times\n\nhmN = heatmap!(axN, times ./ year, zc, N[1, 1, 1:grid.Nz, 1:end]',\n               interpolate = true, colormap = Reverse(:batlow))\n\nhmP = heatmap!(axP, times ./ year, zc, P[1, 1, 1:grid.Nz, 1:end]',\n               interpolate = true, colormap = Reverse(:batlow))\n\nlines!(axSed, times ./ year, sed[1, 1, 1, :])\n\nColorbar(fig[1, 2], hmN, label = \"Nutrient (mmol N / m³)\")\nColorbar(fig[2, 2], hmP, label = \"Phytoplankton (mmol N / m³)\")\n\nfig","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"We can see in this that some phytoplankton sink to the bottom, and are both remineralized back into nutrients and stored in the sediment.","category":"page"},{"location":"model_implementation/#Running-on-a-GPU","page":"Implementing new models","title":"Running on a GPU","text":"","category":"section"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"In order to run a BGC model on a GPU we need to tell the compiler how to adapt the NutrientPhytoplankton struct for GPU kernels (see here for more information). After the definition of the BGC struct, we write:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"using Pkg; Pkg.add(\"Adapt\")\nusing Adapt\n\nimport Adapt: adapt_structure\n\nAdapt.adapt_structure(to, bgc::NutrientPhytoplankton) = NutrientPhytoplankton(adapt(to, bgc.base_growth_rate),\n                                                                              adapt(to, bgc.nutrient_half_saturation),\n                                                                              adapt(to, bgc.light_half_saturation),\n                                                                              adapt(to, bgc.temperature_exponent),\n                                                                              adapt(to, bgc.temperature_coefficient),\n                                                                              adapt(to, bgc.optimal_temperature),\n                                                                              adapt(to, bgc.mortality_rate),\n                                                                              adapt(to, bgc.crowding_mortality_rate),\n                                                                              adapt(to, bgc.sinking_velocity))","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"We can add grid as the second argument for ScaleNegativeTracers so that it automatically works on a GPU. We replace the definition of negative_tracer_scaling with:","category":"page"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"negative_tracer_scaling = ScaleNegativeTracers((:N, :P), grid)","category":"page"},{"location":"model_implementation/#Final-notes","page":"Implementing new models","title":"Final notes","text":"","category":"section"},{"location":"model_implementation/","page":"Implementing new models","title":"Implementing new models","text":"When implementing a new model we recommend following a testing process as we have here, starting with a box model, then a column, and finally using it in a realistic physics scenarios. We have found this very helpful for spotting bugs that were proving difficult to decipher in other situations. You can also add Individuals, light attenuation models, and sediment models in a similar fashion.","category":"page"},{"location":"generated/O₂ air-sea exchange_parameters/#O-air-sea-exchange-default-parameters","page":"O₂ air-sea exchange","title":"O₂ air-sea exchange default parameters","text":"","category":"section"},{"location":"generated/O₂ air-sea exchange_parameters/","page":"O₂ air-sea exchange","title":"O₂ air-sea exchange","text":"Name Value\nwind_speed 2.0\ntransfer_velocity OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.SchmidtScaledTransferVelocity{OceanBioME.Models.GasExchangeModel.PolynomialParameterisation{2, Tuple{Float64, Float64, Float64}}, OceanBioME.Models.GasExchangeModel.PolynomialParameterisation{4, NTuple{5, Float64}}, OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.var\"#3#5\"{DataType}}(Order 2 polynomial parameterisation","category":"page"},{"location":"generated/O₂ air-sea exchange_parameters/","page":"O₂ air-sea exchange","title":"O₂ air-sea exchange","text":"p(x) = Σ{n ∈ Z : [0, 2]}(cₙ xⁿ⁻¹) where c = (0.0, 0.0, 7.388888888888889e-7)","category":"page"},{"location":"generated/O₂ air-sea exchange_parameters/","page":"O₂ air-sea exchange","title":"O₂ air-sea exchange","text":", Order 4 polynomial parameterisation     p(x) = Σ{n ∈ Z : [0, 4]}(cₙ xⁿ⁻¹) where c = (1920.4, -135.6, 5.2122, -0.10939, 0.00093777) , OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.var\"#3#5\"{DataType}(Float64))| |water_concentration|OceanBioME.Models.GasExchangeModel.OxygenConcentration()| |air_concentration|OceanBioME.Models.GasExchangeModel.PartiallySolubleGas{Float64, OceanBioME.Models.GasExchangeModel.Wanninkhof92Solubility{Float64}}(9352.7, OceanBioME.Models.GasExchangeModel.Wanninkhof92Solubility{Float64}(-58.3877, 85.8079, 23.8439, -0.034892, 0.015578, -0.0019387))|","category":"page"},{"location":"model_components/biogeochemical/PISCES/notable_differences/#PISCES_queries","page":"Queries","title":"Notes","text":"","category":"section"},{"location":"model_components/biogeochemical/PISCES/notable_differences/","page":"Queries","title":"Queries","text":"While most of the function formulae can be found in Aumont et al. (2015), we have compiled the following list of minor errors in the paper, as well as changes that are present in the NEMO implementation.","category":"page"},{"location":"model_components/biogeochemical/PISCES/notable_differences/#Preface","page":"Queries","title":"Preface","text":"","category":"section"},{"location":"model_components/biogeochemical/PISCES/notable_differences/","page":"Queries","title":"Queries","text":"The OceanBioME implementation of PISCES varies from NEMO and CROCCO in a few regards:","category":"page"},{"location":"model_components/biogeochemical/PISCES/notable_differences/","page":"Queries","title":"Queries","text":"Our standard unit of concentration is mmol / m³ which is equivalent to μmol / L, so we have retained these units all the tracers except iron\nIron is modelled in μmol / m³ which is equivalent to nmol / L\nIn other implementations of PISCES nitrogen is tracked in carbon units (i.e. the concentration of nitrogen divided by the Redfield ratio). We instead opted to track in nitrogen units and so multiply most terms by the Redfield ratio (TODO: check that constants are in the correct units)\nAumont et al. (2015) refers to the concentrations in μmol / L and nmol / L. The NEMO and CROCCO source code track everything in mol/L, therefore many units were converted, but some were missed (listed below)\nAumont et al. (2015) includes the \"yearly maximum silicate\", Si′ but it appears that the NEMO source code uses the surface silicate, so we have renamed it to silicate_climatology\nOther implementations of PISCES compute the dark residence time (the time spent below the euphotic depth due to mixing within the mixed layer) assuming a constant diffusivity. We replaced this with the actual diffusivity (or it can be set to a ConstantField to replicate other results)\nWe have removed dust from PISCES since it can be implemented as a more generic model elsewhere, and doesn't actually appear in PISCES except in the iron scavenging term which would need to be added as a forcing if iron scavenging from dust was desired in a model.\nThe bacterial remineralisation of DOC is split into the oxic and anoxic parts which are referred to as Remin and Denit, but we have renamed these as oxic_remineralisation and anoxic_remineralisation for clarity\nWe would also like to note for future developers that theta^Chl is mg Chl / mg C so needs to be computed as IChl  12I","category":"page"},{"location":"model_components/biogeochemical/PISCES/notable_differences/#Constant-disparities","page":"Queries","title":"Constant disparities","text":"","category":"section"},{"location":"model_components/biogeochemical/PISCES/notable_differences/","page":"Queries","title":"Queries","text":"We believe that units of some constants were incorrect in Aumont et al. (2015), all units are now all noted in the code and may vary.  The values vary for:","category":"page"},{"location":"model_components/biogeochemical/PISCES/notable_differences/","page":"Queries","title":"Queries","text":"Aggregation factors (a_1 a_2 ), found in TwoCompartementCarbonIronParticles and DissolvedOrganicCarbon aggregation_parameters: from the NEMO source code, all of these parameters need a factor of 10^-6 to convert them from units of 1 / (mol / L) to 1 / (μmol / L). Additionally, all the parameters require a factor of 1  86400, for the parameters not multiplied by shear this straight forwardly is because they have time units of 1 / day in the NEMO code, but for those multiplied by shear this is because they implicitly have a factor of seconds per day in them to result in an aggregation in mmol C / day\nIn a similar vein, the flux feeding rate for zooplankton g_FF^M is in 1 / (m mol / L) where that m in meters, so we need to multiply by a factor of 10^-6 to get 1 / (m μmol / L)\nThe fraction of bacterially consumed iron going to small and big particles, kappa^BFe_Bact and kappa^SFe_Bact, in equations 48 and 49 are not recorded but from the NEMO source code we can see that they are 0.04 and 0.12 respectively. Additionally, we need to multiply by a factor of 0.16 (bacterial_iron_uptake_efficiency) to the drawdown from the iron pool due to the instantaneous return (as per the NEMO version)\ntheta_max^Fe Bact is not recorded so the value 0.06 μmol Fe / mmol C is taken from the NEMO source code\ntheta^Fe Z and theta^Fe M are taken from the NEMO source code to be 0.01 and 0.015 μmol Fe / mmol C\ntheta_max^Fe P is taken from the NEMO source code to be 0.06 μmol Fe / mmol C, we note that this isn't actually the maximum in the sense that the ratio could (probably) go above this value\nK^B 1_Fe is not recorded so the value 0.3 μmol Fe / m³ is taken from the NEMO source code\neta^Z and eta^M in equation 76 are incorrectly labelled as nu^I in parameter table\nIron ratios are often given as mol Fe / mol C, so we have converted to μmol Fe / mmol C","category":"page"},{"location":"model_components/biogeochemical/PISCES/notable_differences/#Equation-disparities","page":"Queries","title":"Equation disparities","text":"","category":"section"},{"location":"model_components/biogeochemical/PISCES/notable_differences/","page":"Queries","title":"Queries","text":"The calcite production limitation, L^CaCO_3_lim in equation 77, is not documented. From the NEMO source code it appears to take the form L^CaCO_3_lim = min(L_N^P L_PO_4^P L_Fe) where L_Fe = Fe  (Fe + 005). Additionally, in the NEMO source code L_PO_4 is PO_4  (PO_4 + K^P min_NH_4) but that didn't make sense to us so we assumed it was L_PO_4^P\nThe temperature factor in calcite production is supposed to bring the production to zero when the temperature goes below 0°C but in the documented form does not, it was changed to max(0 T  (T + 01))\nWe think there is an additional factor of Diss_Si in the PSi equation (51) so have neglected it\nA factor of R_NH_4 appears in the nitrate equation which is undefined, and we did not track down in the NEMO source code so have neglected\nThe form of K^Fe_eq in equation 65 is not given, so we took the form expleft(1627 - 15657  max(T + 27315 5)right) from the NEMO source code\nEquation 32 contains a typo, the second term should be (1 - gamma ^M)(1 - e^M - sigma^M)(sum textcolorredg^M (I) + g_FF^M(GOC))M\nEquation 37 is missing a factor of 3Delta O_2 in the third term, and sh in the fifth term\nEquation 40 is missing a factor of sh in the third and fourth terms, and is missing a + in the fourth term which should read 05m^D fracDD+K_mD + sh times w^D D^2\nEquation 48 is missing a factor of 3Delta O_2 in the second term, and a factor of Z in the penultimate term\nEquation 49 is missing a factor of 3Delta O_2 in the second term\nEquations 54 and 55 are missing factors of the Redfield ratio in all terms except nitrification, nitrogen fixation. Additionally, we think that the term R_NH_4lambda_NH_4Delta(O_2)NH_4 is not meant to be present and can not work out its utility or parameter values so have neglected\nEquation 60 is missing a factor of e^Z in the first term and e^M, but for clarity we have rewritten it as:","category":"page"},{"location":"model_components/biogeochemical/PISCES/notable_differences/","page":"Queries","title":"Queries","text":"fracpartial Fepartial t += sum_J^Z MleftJmaxleft(0 (1 - sigma)sum_Ig^J(I)theta^Fe I - e^Jtheta^Fe Jsum_Ig^J(I) right)right","category":"page"},{"location":"model_components/biogeochemical/PISCES/notable_differences/","page":"Queries","title":"Queries","text":"which is the total iron grazed, minus the amount which is routed to particles, minus the amount stored in the zooplankton (and is identical with different simplification to the original)","category":"page"},{"location":"model_components/biogeochemical/PISCES/notable_differences/","page":"Queries","title":"Queries","text":"Equation 19 has a typo and L^I^Fe_lim 2 should read 4 - 45 LFe  (LFe + 1)\nIn equation 33, the min parts did not make sense (and we don't think are present in the NEMO source code), and so have been neglected\nThe first term in equation 14 should read (1-delta^I)12 (theta_min^Chl I + rho(theta_max^Chl I-theta_min^Chl I))mu^I I and rho should be given by L_dayfracmu If_1Lfrac12IIChlfracL_Palpha PAR, maybe this is what it says, but it was not clear","category":"page"},{"location":"model_components/biogeochemical/PISCES/notable_differences/#Changes-since-[Aumont2015](@citet)-in-NEMO","page":"Queries","title":"Changes since Aumont et al. (2015) in NEMO","text":"","category":"section"},{"location":"model_components/biogeochemical/PISCES/notable_differences/","page":"Queries","title":"Queries","text":"Diatom quadratic mortality has changed forms to w^D=w^P + 025 w^D_max frac1 - (L^D_lim)^2025 + (L^D_lim)^2\nThe P-I slope, alpha, can vary for adaptation to depth, but the default is no enhancement. This can be included in our version by setting low_light_adaptation to be non-zero in the growth rate parameterisations","category":"page"},{"location":"contributing/#Contributors-Guide","page":"Contibutors guide","title":"Contributors Guide","text":"","category":"section"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Thank you for considering contributions to OceanBioME! We hope this guide helps.","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Feel free to ask us questions and chat with us at any time about any topic at all by:","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Opening a GitHub issue\nCreating a GitHub discussion","category":"page"},{"location":"contributing/#Creating-issues","page":"Contibutors guide","title":"Creating issues","text":"","category":"section"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"The simplest way to contribute to OceanBioME is to create or comment on issues and discussions.","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"The most useful bug reports:","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Provide an explicit code snippet –- not just a link –- that reproduces the bug in the latest tagged version of OceanBioME. This is sometimes called the \"minimal working example\". Reducing bug-producing code to a minimal example can dramatically decrease the time it takes to resolve an issue.\nPaste the entire error received when running the code snippet, even if it's unbelievably long.\nUse triple backticks (e.g., ```some_code; and_some_more_code;```) to enclose code snippets, and other markdown formatting syntax to make your issue easy and quick to read.\nReport the OceanBioME version, Julia version, machine (especially if using a GPU) and any other possibly useful details of the computational environment in which the bug was created.","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Discussions are recommended for asking questions about (for example) the user interface, implementation details, science, and life in general.","category":"page"},{"location":"contributing/#But-I-want-to-*code*!","page":"Contibutors guide","title":"But I want to code!","text":"","category":"section"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"New users help write OceanBioME code and documentation by forking the OceanBioME repository, using git to edit code and docs, and then creating a pull request. Pull requests are reviewed by OceanBioME collaborators.\nA pull request can be merged once it is reviewed and approved by collaborators. If the pull request author has write access, they have the responsibility of merging their pull request. Otherwise, OceanBioME.jl collaborators will execute the merge with permission from the pull request author.\nNote: for small or minor changes (such as fixing a typo in documentation), the GitHub editor is super useful for forking and opening a pull request with a single click.\nWrite your code with love and care. In particular, conform to existing OceanBioME style and formatting conventions. For example, we love verbose and explicit variable names, use TitleCase for types, snake_case for objects, and always.put.spaces.after.commas. For formatting decisions we loosely follow the YASGuide. It's worth few extra minutes of our time to leave future generations with well-written, readable code.","category":"page"},{"location":"contributing/#What-is-a-\"collaborator\"-and-how-can-I-become-one?","page":"Contibutors guide","title":"What is a \"collaborator\" and how can I become one?","text":"","category":"section"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Collaborators have permissions to review pull requests and status allows a contributor to review pull requests in addition to opening them. Collaborators can also create branches in the main OceanBioME repository.\nWe ask that new contributors try their hand at forking OceanBioME, and opening and merging a pull request before requesting collaborator status.","category":"page"},{"location":"contributing/#What's-a-good-way-to-start-developing-OceanBioME?","page":"Contibutors guide","title":"What's a good way to start developing OceanBioME?","text":"","category":"section"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Tackle an existing issue. We keep a list of good first issues that are self-contained and suitable for a newcomer to try and work on.\nTry to run OceanBioME and play around with it. If you run into any problems or find it difficult to use or understand, please open an issue!\nWrite up an example or tutorial on how to do something useful with OceanBioME, like how to set up a new configuration.\nImprove documentation or comments if you found something hard to use.\nImplement a new feature if you need it to use OceanBioME.","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"If you're interested in working on something, let us know by commenting on existing issues or  by opening a new issue. This is to make sure no one else is working on the same issue and so  we can help and guide you in case there is anything you need to know beforehand.","category":"page"},{"location":"contributing/#Ground-Rules","page":"Contibutors guide","title":"Ground Rules","text":"","category":"section"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Each pull request should consist of a logical collection of changes. You can include multiple bug fixes in a single pull request, but they should be related. For unrelated changes, please submit multiple pull requests.\nDo not commit changes to files that are irrelevant to your feature or bugfix (eg: .gitignore).\nBe willing to accept criticism and work on improving your code; we don't want to break other users' code, so care must be taken not to introduce bugs. We discuss pull requests and keep working on them until we believe we've done a good job.\nBe aware that the pull request review process is not immediate, and is generally proportional to the size of the pull request.","category":"page"},{"location":"contributing/#Reporting-a-bug","page":"Contibutors guide","title":"Reporting a bug","text":"","category":"section"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"The easiest way to get involved is to report issues you encounter when using OceanBioME or by requesting something you think is missing.","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Head over to the issues page.\nSearch to see if your issue already exists or has even been solved previously.\nIf you indeed have a new issue or request, click the \"New Issue\" button.\nPlease be as specific as possible. Include the version of the code you were using, as well as what operating system you are running. The output of Julia's versioninfo() and ] status is helpful to include. Try your best to include a complete, \"minimal working example\" that reproduces the issue.","category":"page"},{"location":"contributing/#Setting-up-your-development-environment","page":"Contibutors guide","title":"Setting up your development environment","text":"","category":"section"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Install Julia on your system.\nInstall git on your system if it is not already there (install XCode command line tools on a Mac or git bash on Windows).\nLogin to your GitHub account and make a fork of the OceanBioME repository by clicking the \"Fork\" button.\nClone your fork of the OceanBioME repository (in terminal on Mac/Linux or git shell/ GUI on Windows) in the location you'd like to keep it.\ngit clone https://github.com/your-user-name/OceanBioME.jl.git\nNavigate to that folder in the terminal or in Anaconda Prompt if you're on Windows.\nConnect your repository to the upstream (main project).\ngit remote add oceanbiome https://github.com/OceanBioME/OceanBioME.jl.git\nCreate the development environment by opening Julia via julia --project then typing in ] instantiate. This will install all the dependencies in the Project.toml file.\nYou can test to make sure OceanBioME works by typing in ] test. Doing so will run all the tests (and this can take a while).","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Your development environment is now ready!","category":"page"},{"location":"contributing/#Pull-Requests","page":"Contibutors guide","title":"Pull Requests","text":"","category":"section"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"We follow the ColPrac guide for collaborative practices. We ask that new contributors read that guide before submitting a pull request.","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Changes and contributions should be made via GitHub pull requests against the main branch.","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"When you're done making changes, commit the changes you made. Chris Beams has written a  guide on how to write good commit messages.","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"When you think your changes are ready to be merged into the main repository, push to your fork and submit a pull request.","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Working on your first Pull Request? You can learn how from this free video series How to Contribute to an Open Source Project on GitHub, Aaron Meurer's tutorial on the git workflow, or the guide “How to Contribute to Open Source\".","category":"page"},{"location":"contributing/#Documentation","page":"Contibutors guide","title":"Documentation","text":"","category":"section"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"Now that you've made your awesome contribution, it's time to tell the world how to use it. Writing documentation strings is really important to make sure others use your functionality properly. Didn't write new functions? That's fine, but be sure that the documentation for the code you touched is still in great shape. It is not uncommon to find some strange wording or clarification that you can take care of while you are here.","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"You can preview how the Documentation will look like after merging by building the documentation  locally. From the main directory of your local repository call","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"JULIA_DEBUG=Documenter julia --project=docs/ docs/make.jl","category":"page"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"and then open docs/build/index.html in your favorite browser. Providing the environment variable  JULIA_DEBUG=Documenter will provide with more information in the documentation build process and thus help figuring out a potential bug.","category":"page"},{"location":"contributing/#Credits","page":"Contibutors guide","title":"Credits","text":"","category":"section"},{"location":"contributing/","page":"Contibutors guide","title":"Contibutors guide","text":"This contributor's guide is heavily based on the excellent Oceananigans contributors guide which in turn is based on the MetPy contributor's guide.","category":"page"},{"location":"generated/TwoBandPhotosyntheticallyActiveRadiation_parameters/#TwoBandPhotosyntheticallyActiveRadiation-default-parameters","page":"TwoBandPhotosyntheticallyActiveRadiation","title":"TwoBandPhotosyntheticallyActiveRadiation default parameters","text":"","category":"section"},{"location":"generated/TwoBandPhotosyntheticallyActiveRadiation_parameters/","page":"TwoBandPhotosyntheticallyActiveRadiation","title":"TwoBandPhotosyntheticallyActiveRadiation","text":"Name Value\nwater_red_attenuation 0.225\nwater_blue_attenuation 0.0232\nchlorophyll_red_attenuation 0.037\nchlorophyll_blue_attenuation 0.074\nchlorophyll_red_exponent 0.629\nchlorophyll_blue_exponent 0.674\npigment_ratio 0.7\nphytoplankton_chlorophyll_ratio 1.31\nsurface_PAR defaultsurfacePAR","category":"page"},{"location":"generated/data_assimilation/#Calibrating-a-biogeochemical-model-with-EnsembleKalmanProcesses","page":"Data assimilation","title":"Calibrating a biogeochemical model with EnsembleKalmanProcesses","text":"","category":"section"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"In this example we calibrate some of the parameters for the NPZD model in a simple box model setup using a data assimilation package EnsembleKalmanProcesses. First we setup the model and generate synthetic data with \"true\" parameters. We then define priors and setup an EKP to solve.","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"While this is a very simple situation it illustrates the ease of integration with data assimilation tools. Examples given in the EnsembleKalmanProcesses docs illustrate how the package can be used to solve more complex forward models.","category":"page"},{"location":"generated/data_assimilation/#Install-dependencies","page":"Data assimilation","title":"Install dependencies","text":"","category":"section"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"First we ensure we have the required dependencies installed","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"using Pkg\npkg \"add OceanBioME, Oceananigans, CairoMakie, EnsembleKalmanProcesses, Distributions\"","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"using OceanBioME, EnsembleKalmanProcesses, JLD2, CairoMakie, Oceananigans.Units, Oceananigans\nusing LinearAlgebra, Random\n\nusing Distributions\n\nusing EnsembleKalmanProcesses\nusing EnsembleKalmanProcesses.ParameterDistributions\n\nusing Oceananigans.Fields: FunctionField\n\nconst year = years = 365day\n\nrng_seed = 41\nrng = Random.MersenneTwister(rng_seed)","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"Random.MersenneTwister(41)","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"Setup the forward model","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"@inline PAR⁰(t) = 60 * (1 - cos((t + 15days) * 2π / year)) * (1 / (1 + 0.2 * exp(-((mod(t, year) - 200days) / 50days)^2))) + 2\n\nz = -10 # nominal depth of the box for the PAR profile\n@inline PAR_func(t) = PAR⁰(t) * exp(0.2z) # Modify the PAR based on the nominal depth and exponential decay\n\nfunction run_box_simulation(initial_photosynthetic_slope,\n                            base_maximum_growth,\n                            nutrient_half_saturation,\n                            phyto_base_mortality_rate,\n                            j)\n    grid = BoxModelGrid()\n    clock = Clock(; time = zero(grid))\n\n    PAR = FunctionField{Center, Center, Center}(PAR_func, grid; clock)\n\n    biogeochemistry = NutrientPhytoplanktonZooplanktonDetritus(; grid,\n                                                                 initial_photosynthetic_slope,\n                                                                 base_maximum_growth,\n                                                                 nutrient_half_saturation,\n                                                                 phyto_base_mortality_rate,\n                                                                 light_attenuation_model = PrescribedPhotosyntheticallyActiveRadiation(PAR))\n\n    model = BoxModel(; biogeochemistry, clock)\n\n    set!(model, N = 10.0, P = 0.1, Z = 0.01)\n\n    simulation = Simulation(model; Δt = 20minutes, stop_time = 2years, verbose = false)\n\n    simulation.output_writers[:fields] = JLD2Writer(model, model.fields; filename = \"box_calibration_$j.jld2\", schedule = TimeInterval(8hours), overwrite_existing = true)\n\n    @info \"Running the model...\"\n    run!(simulation)\n\n    P = FieldTimeSeries(\"box_calibration_$j.jld2\", \"P\")\n\n    times = P.times\n\n    return P[1, 1, 1, length(times)-1092:end], times[length(times)-1092:end]\nend","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"run_box_simulation (generic function with 1 method)","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"Define the forward map","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"function G(u, j)\n    (initial_photosynthetic_slope,\n     base_maximum_growth,\n     nutrient_half_saturation,\n     phyto_base_mortality_rate) = u\n\n    P, times = run_box_simulation(initial_photosynthetic_slope,\n                                  base_maximum_growth,\n                                  nutrient_half_saturation,\n                                  phyto_base_mortality_rate,\n                                  j)\n\n    peak, winter, average, peak_timing, die_off_time = extract_observables(P, times)\n\n    return [peak, winter, average, peak_timing, die_off_time], P\nend\n\nfunction extract_observables(P, times)\n    if all(P .> 0) # model failure - including just in case\n        peak = maximum(P)\n        winter = minimum(P)\n        average = mean(P)\n\n        peak_timing = times[findmax(P)[2]]\n\n        growth_rate = diff(P)[546:end]\n\n        die_off_time = times[545 + findmin(growth_rate)[2]]\n\n        return peak, winter, average, peak_timing./day, die_off_time./day\n    else\n        return NaN, NaN, NaN, NaN, NaN\n    end\nend","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"extract_observables (generic function with 1 method)","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"Generate the \"truth\" data (normally you would load observations etc here)","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"Γ = Diagonal([0.001, 0.0001, 0.002, 5., 5.])\n\nnoise_dist = MvNormal(zeros(5), Γ)\n\ntruth = (0.15/day, 0.7/day, 2.4, 0.01/day)\nobs, P₀ = G(truth, 1)\n\ny = obs .+ rand(noise_dist)","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"5-element Vector{Float64}:\n   0.28549467208978685\n   0.018768053969079455\n   0.12123267731176618\n 402.178279909524\n 692.2612000659233","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"Solve the inverse problem and record all of the results for plotting purposes","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"prior_u1 = constrained_gaussian(\"initial_photosynthetic_slope\", 0.1953 / day, 0.05 / day, 0, Inf)\nprior_u2 = constrained_gaussian(\"base_maximum_growth\", 0.6989 / day, 0.1/ day, 0, Inf)\nprior_u3 = constrained_gaussian(\"nutrient_half_saturation\", 2.3868, 0.5, 0, Inf)\nprior_u4 = constrained_gaussian(\"phyto_base_mortality_rate\", 0.0101 / day, 0.01 / day, 0, Inf)\n\nprior = combine_distributions([prior_u1, prior_u2, prior_u3, prior_u4])\n\nN_ensemble = 8\nN_iterations = 5\n\ninitial_ensemble = construct_initial_ensemble(rng, prior, N_ensemble)\n\nensemble_kalman_process = EnsembleKalmanProcess(initial_ensemble, y, Γ, Inversion(); rng, failure_handler_method = SampleSuccGauss())\n\nP = zeros(1093, N_ensemble, N_iterations) # recording all of the results for plotting only (not essential)\n\nfor i in 1:N_iterations\n    @info \"Iteration: $i\"\n    params_i = get_ϕ_final(prior, ensemble_kalman_process)\n\n    G_ens = zeros(5, N_ensemble)\n\n    Threads.@threads for j in 1:N_ensemble\n        G_ens[:, j], P[:, j, i] = G(params_i[:, j], j)\n    end\n\n    update_ensemble!(ensemble_kalman_process, G_ens)\nend\n\nfinal_ensemble = get_ϕ_final(prior, ensemble_kalman_process)","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"4×8 Matrix{Float64}:\n 1.97301e-6  1.61393e-6  1.79048e-6  1.75237e-6  1.8061e-6   1.97923e-6  1.91378e-6  1.99335e-6\n 6.42915e-6  7.07196e-6  7.58478e-6  7.98649e-6  6.40713e-6  8.03415e-6  7.13905e-6  7.61825e-6\n 3.08709     1.86941     3.15957     2.7964      2.19224     3.05141     3.11255     3.47465\n 1.98168e-7  6.31389e-8  1.03647e-7  6.9599e-8   1.61434e-7  1.44548e-7  1.03891e-7  1.75913e-7","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"Plot the results","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"fig = Figure()\n\nn = Observable(1)\n\ntitle = @lift string(\"Generation: \", $n)\n\nP_plts = [@lift P[:, j, $n] for j in 1:N_ensemble]\n\nfig = Figure(size = (1200, 800));\n\nax = Axis(fig[1, 1], xlabel = \"Day of year\", ylabel = \"Phytoplankton concentration (mmol/m³)\"; title)\n\n[lines!(ax, [1:8hours:365days-16hours;]./day, P_plts[j], color = :black, alpha = 0.2) for j in 1:N_ensemble]\n\nlines!(ax, [1:8hours:365days-16hours;]./day, P₀, color = :black)\n\nrecord(fig, \"data_assimilation.mp4\", 1:size(P, 3); framerate = 2) do i; n[] = i; end","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"(Image: )","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"","category":"page"},{"location":"generated/data_assimilation/","page":"Data assimilation","title":"Data assimilation","text":"This page was generated using Literate.jl.","category":"page"},{"location":"appendix/function_index/#Index","page":"Function index","title":"Index","text":"","category":"section"},{"location":"appendix/function_index/","page":"Function index","title":"Function index","text":"","category":"page"},{"location":"visualization/#Visualize-output","page":"Visualization","title":"Visualize output","text":"","category":"section"},{"location":"visualization/","page":"Visualization","title":"Visualization","text":"In the examples we use Makie.jl for plotting.","category":"page"},{"location":"visualization/","page":"Visualization","title":"Visualization","text":"Makie comes with a few backends. In the documented examples we use CairoMakie since this backend works well on headless devices, that is, devices without monitor. Because the documentation is automatically built via GitHub actions the CairoMakie backend is necessary. However, users that want to run the examples on devices with a monitor might want to change to GLMakie that displays figures in an interactive window. To do that you need to install GLMakie, e.g.,","category":"page"},{"location":"visualization/","page":"Visualization","title":"Visualization","text":"using Pkg\npkg\"add GLMakie\"","category":"page"},{"location":"visualization/","page":"Visualization","title":"Visualization","text":"and replace using CairoMakie with using GLMakie.","category":"page"},{"location":"model_components/biogeochemical/NPZ/#NPZD","page":"NPZD","title":"Nutrient Phytoplankton Zooplankton Detritus (NPZD) model","text":"","category":"section"},{"location":"model_components/biogeochemical/NPZ/","page":"NPZD","title":"NPZD","text":"The provided NPZD model is the low complexity model of Kuhn et al. (2015).","category":"page"},{"location":"model_components/biogeochemical/NPZ/","page":"NPZD","title":"NPZD","text":"<img src=\"../npzd.svg\"  alt=\"Diagram of NPZD formulation\" style=\"max-width: calc(100% - 20px);\">","category":"page"},{"location":"model_components/biogeochemical/NPZ/#Model-equations","page":"NPZD","title":"Model equations","text":"","category":"section"},{"location":"model_components/biogeochemical/NPZ/","page":"NPZD","title":"NPZD","text":"fracpartial Ppartial t = mu_textmaxfracNk_N + Nfracalpha PARsqrtmu_textmax^2 + alpha^2PAR^2P - g_textmaxfracP^2k_P^2 + P^2Z-(l_PN+l_PD)P","category":"page"},{"location":"model_components/biogeochemical/NPZ/","page":"NPZD","title":"NPZD","text":"fracpartial Zpartial t = beta g_textmaxfracP^2k_P^2 + P^2Z - (l_ZN + l_ZDZ)Z","category":"page"},{"location":"model_components/biogeochemical/NPZ/","page":"NPZD","title":"NPZD","text":"fracpartial Dpartial t = (1 - beta) g_textmaxfracP^2k_P^2 + P^2Z + l_ZDZ^2 + l_PDP - r_DND","category":"page"},{"location":"model_components/biogeochemical/NPZ/","page":"NPZD","title":"NPZD","text":"fracpartial Npartial t = - mu_textmaxfracNk_N + Nfracalpha PARsqrtmu_textmax^2 + alpha^2PAR^2P + l_PNP + l_ZNZ + r_DND","category":"page"},{"location":"model_components/biogeochemical/NPZ/","page":"NPZD","title":"NPZD","text":"Here mu_textmax = mu_0Q_10(T) and l_XY = l_XY0 Q_10(T) where Q_10(T) = 188^T10.","category":"page"},{"location":"model_components/biogeochemical/NPZ/","page":"NPZD","title":"NPZD","text":"Additionally, the phytoplankton and detritus sink at a constant rate.","category":"page"},{"location":"model_components/biogeochemical/NPZ/#Parameter-variable-names","page":"NPZD","title":"Parameter variable names","text":"","category":"section"},{"location":"model_components/biogeochemical/NPZ/","page":"NPZD","title":"NPZD","text":"Symbol Variable name Units\nalpha initial_photosynthetic_slope 1 / (W / m² / s)\nmu_0 base_maximum_growth 1 / s\nk_N nutrient_half_saturation mmol N / m³\nl_PN0 base_respiration_rate 1 / s\nl_PD0 phyto_base_mortality_rate 1 / s\ng_textmax maximum_grazing_rate 1 / s\nk_P grazing_half_saturation mmol N / m³\nbeta assimulation_efficiency -\nl_ZN base_excretion_rate 1 / s\nl_ZD zoo_base_mortality_rate 1 / s\nr_DN remineralization_rate 1 / s","category":"page"},{"location":"model_components/biogeochemical/NPZ/","page":"NPZD","title":"NPZD","text":"All default parameter values are given in Parameters.","category":"page"},{"location":"model_components/biogeochemical/NPZ/#Model-conservation","page":"NPZD","title":"Model conservation","text":"","category":"section"},{"location":"model_components/biogeochemical/NPZ/","page":"NPZD","title":"NPZD","text":"Nitrogen is conserved in the evolution of this model (excluding external sources and sinking), i.e. fracpartial Ppartial t + fracpartial Zpartial t + fracpartial Dpartial t + fracpartial Npartial t = 0.","category":"page"},{"location":"model_components/individuals/#individuals","page":"Overview","title":"Individuals","text":"","category":"section"},{"location":"model_components/individuals/","page":"Overview","title":"Overview","text":"The effects of individuals can be modelled in OceanBioME. We have implemented this through custom dynamics in the Lagrangian Particle tracking feature of Oceananigans. We have extended these functionalities to make it easier to implement \"active\" particles which interact with the tracers. We have then implemented a model of sugar kelp which can be followed as an example of using this functionality.","category":"page"},{"location":"model_components/individuals/","page":"Overview","title":"Overview","text":"To setup particles first create a particle biogeochemistry, e.g.:","category":"page"},{"location":"model_components/individuals/","page":"Overview","title":"Overview","text":"\nstruct GrowingParticles{FT}\n    nutrients_half_saturation :: FT\nend","category":"page"},{"location":"model_components/individuals/","page":"Overview","title":"Overview","text":"We then need to add some methods to tell OceanBioME what properties this particle has, and what tracers it interacts with:","category":"page"},{"location":"model_components/individuals/","page":"Overview","title":"Overview","text":"\nimport OceanBioME.Particles: required_particle_fields, required_tracers, coupled_tracers\n\nrequired_particle_fields(::GrowingParticles) = (:S, )\nrequired_tracers(::GrowingParticles) = (:N, )\ncoupled_tracers(::GrowingParticles) = (:N, )\n","category":"page"},{"location":"model_components/individuals/","page":"Overview","title":"Overview","text":"So our model is going to track the Size of the particles and take up Nutrients.  Now we need to how this growth happens.  The forcing functions should be of the form (particles::ParticleBiogeochemistry)(::Val{:PROPERTY}, t, required_particle_fields..., required_tracers...), so in this example:","category":"page"},{"location":"model_components/individuals/","page":"Overview","title":"Overview","text":"(p::GrowingParticles)(::Val{:S}, t, S, N) = N / (N + p.nutrient_half_saturation)\n(p::GrowingParticles)(::Val{:N}, t, S, N) = - N / (N + p.nutrient_half_saturation)","category":"page"},{"location":"model_components/individuals/","page":"Overview","title":"Overview","text":"We can then create an instance of this particle model using BiogeochemicalParticles, and set their initial position and size:","category":"page"},{"location":"model_components/individuals/","page":"Overview","title":"Overview","text":"using OceanBioME, Oceananigans\n\nLx, Ly, Lz = 100, 100, 100\ngrid = RectilinearGrid(; size = (8, 8, 8), extent = (Lx, Ly, Lz))\n\nparticles = BiogeochemicalParticles(10; grid, biogeochemistry = GrowingParticles(0.5))\n\nset!(particles, S = 0.1, x = rand(10) * Lx, y = rand(10) * Ly, z = rand(10) * Lz)","category":"page"},{"location":"model_components/individuals/","page":"Overview","title":"Overview","text":"We can then put these into a compatible biogeochemical model, for example:","category":"page"},{"location":"model_components/individuals/","page":"Overview","title":"Overview","text":"\nbiogeochemistry = NPZD(; grid, particles)","category":"page"},{"location":"generated/NutrientPhytoplanktonZooplanktonDetritus_parameters/#NutrientPhytoplanktonZooplanktonDetritus-default-parameters","page":"NutrientPhytoplanktonZooplanktonDetritus","title":"NutrientPhytoplanktonZooplanktonDetritus default parameters","text":"","category":"section"},{"location":"generated/NutrientPhytoplanktonZooplanktonDetritus_parameters/","page":"NutrientPhytoplanktonZooplanktonDetritus","title":"NutrientPhytoplanktonZooplanktonDetritus","text":"Name Value\ninitial_photosynthetic_slope 2.2604166666666667e-6\nbase_maximum_growth 8.08912037037037e-6\nnutrient_half_saturation 2.3868\nbase_respiration_rate 7.638888888888889e-7\nphyto_base_mortality_rate 1.1689814814814814e-7\nmaximum_grazing_rate 2.4909722222222224e-5\ngrazing_half_saturation 0.5573\nassimulation_efficiency 0.9116\nbase_excretion_rate 1.1805555555555556e-7\nzoo_base_mortality_rate 3.929398148148148e-6\nremineralization_rate 1.4039351851851852e-6\nP sinking speed 1×1×1 Field{Oceananigans.Grids.Center, Oceananigans.Grids.Center, Oceananigans.Grids.Face} on RectilinearGrid on Oceananigans.Architectures.CPU","category":"page"},{"location":"generated/NutrientPhytoplanktonZooplanktonDetritus_parameters/","page":"NutrientPhytoplanktonZooplanktonDetritus","title":"NutrientPhytoplanktonZooplanktonDetritus","text":"├── grid: 1×1×1 RectilinearGrid{Float64, Oceananigans.Grids.Flat, Oceananigans.Grids.Flat, Oceananigans.Grids.Flat} on Oceananigans.Architectures.CPU with 0×0×0 halo ├── boundary conditions: FieldBoundaryConditions │   └── west: Nothing, east: Nothing, south: Nothing, north: Nothing, bottom: Nothing, top: Nothing, immersed: Nothing └── data: 1×1×1 OffsetArray(::Array{Float64, 3}, 1:1, 1:1, 1:1) with eltype Float64 with indices 1:1×1:1×1:1     └── max=-2.95255e-6, min=-2.95255e-6, mean=-2.95255e-6| |D sinking speed|1×1×1 Field{Oceananigans.Grids.Center, Oceananigans.Grids.Center, Oceananigans.Grids.Face} on RectilinearGrid on Oceananigans.Architectures.CPU ├── grid: 1×1×1 RectilinearGrid{Float64, Oceananigans.Grids.Flat, Oceananigans.Grids.Flat, Oceananigans.Grids.Flat} on Oceananigans.Architectures.CPU with 0×0×0 halo ├── boundary conditions: FieldBoundaryConditions │   └── west: Nothing, east: Nothing, south: Nothing, north: Nothing, bottom: Nothing, top: Nothing, immersed: Nothing └── data: 1×1×1 OffsetArray(::Array{Float64, 3}, 1:1, 1:1, 1:1) with eltype Float64 with indices 1:1×1:1×1:1     └── max=-3.1816e-5, min=-3.1816e-5, mean=-3.1816e-5|","category":"page"},{"location":"model_components/light/#light","page":"Light attenuation models","title":"Light attenuation models","text":"","category":"section"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"Nearly all BGC models require some model of the attenuation of PAR through the water. Usually this depends on the concentration of chlorophyll in the water (in phytoplankton), and may depend on the concentration of coloured dissolved organic matter or particulates.","category":"page"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"We have two models implemented, a two band model by Karleskind et al. (2011), and a more generic \"multi band\" model which can have the PAR split into arbitary many wavelength bands, but default to the widely used three band model by Morel (1988). As the light level is diagnostic of the phytoplankton concentration these models are implemented with the light level as various auxiliary fields which are updated within the biogeochemical model.","category":"page"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"Models requiring light attenuation models will set these up automatically, for example LOBSTER sets light_attenuation_model = TwoBandPhotosyntheticallyActiveRadiation(). You may choose others. Additionally, you can pass the surface PAR as a function of horizontal position and time. The default for LOBSTER is (x, y, t) -> 100*max(0.0, cos(t*π/(12hours))).","category":"page"},{"location":"model_components/light/#The-multi-band-model","page":"Light attenuation models","title":"The multi band model","text":"","category":"section"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"The surface intensity is split into multiple bands (usually with equal weight, but users may specify custom weights), and the attenuation of each band (i) is computed from the radiative transfer equation:","category":"page"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"fracpartial PAR^ipartial z = PAR^i (k^w(i) + chi(i)Chl^e(i))","category":"page"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"where Chl is the concentration of chlorophyll, k^w(i) is the band specific water attenuation coefficient, chi(i) the chlorophyll attenuation coefficient, and e(i) the chlorophyll exponent.","category":"page"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"The water concentration of chlorophyll is returned by a function chlorophyll with arguments biogeochemistry and model. For the LOBSTER model this returns a constant ratio of the phytoplankton concentration, but may be different for other models.","category":"page"},{"location":"model_components/light/#The-two-band-model","page":"Light attenuation models","title":"The two band model","text":"","category":"section"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"Light attenuation is calculated by integrating attenuation (from the surface). The PAR is considered as two components attenuated at different rates. At depth z the total PAR is given by:","category":"page"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"PAR = fracPAR_02 leftexpleft(k_rz + chi_rint_z=0^z Chl_r dzright) + expleft(k_bz + chi_bint_z=0^z Chl_b dzright)right","category":"page"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"where PAR_0 is the surface value, k_r and k_b are the red and blue attenuation coefficients of water, chi_r and chi_b are the red and blue chlorophyll attenuation coefficients, and Chl_r and Chl_b are the red and blue chlorophyll pigment concentrations. The chlorophyll pigment concentration is derived from the phytoplankton concentration where it is assumed that the pigment concentration is given by:","category":"page"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"Chl = PR_ChlP","category":"page"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"where the ratio is constant and found in Parameters. The red and blue pigment concentrations are then found as Chl_r = left(fracChlr_textpigright)^e_r and Chl_b = left(fracChlr_textpigright)^e_b. ","category":"page"},{"location":"model_components/light/#Parameter-variable-names","page":"Light attenuation models","title":"Parameter variable names","text":"","category":"section"},{"location":"model_components/light/","page":"Light attenuation models","title":"Light attenuation models","text":"Symbol Variable name Units\nk_r water_red_attenuation 1 / m\nk_b water_blue_attenuation 1 / m\nchi_r chlorophyll_red_attenuation 1 / m / (mg Chl / m³) ^ e_r\nchi_b chlorophyll_blue_attenuation 1 / m / (mg Chl / m³) ^ e_b\ne_r chlorophyll_red_exponent -\ne_b chlorophyll_blue_exponent -\nr_textpig pigment_ratio -\nR_ChlP phytoplankton_chlorophyll_ratio mg Chl / mmol N","category":"page"},{"location":"model_components/individuals/slatissima/#sugar-kelp","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar kelp (Saccharina latissima) individuals","text":"","category":"section"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"We have implemented a model of sugar kelp growth within this spatially infinitesimal Lagrangian particles framework originally based on the model of Broch and Slagstad (2012) and updated by Broch et al. (2013), Fossberg et al. (2018), and Broch et al. (2019). This is the same model passively forced by Strong-Wright and Taylor (2022).","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"The model tracks three variables, the frond area, A (dm²), carbon reserve, C (gC / gSW), and nitrate reserve, N (gN / gSW). The growth depends on the nitrate (and optionally ammonia) availability in the water, the temperature, and light availability. The minimum required coupling is with nitrates so the model can be coupled with an NPZD model, but can optionally uptake ammonia, DIC (CO₂), oxygen, and release dissolved organic matter (from exudation) and large detritus.  ","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"Results could look something like this (from Strong-Wright and Taylor (2022)): (Image: Example A, N, and C profiles from [StrongWright2022](@citet))","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"You can access the model biogeochemistry by setting up SugarKelp, i.e.:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"using OceanBioME\n\nkelp_bgc = SugarKelp()\n\n# output\nSugarKelp{Float64} biogeochemistry (Broch & Slagstad, 2012) tracking the `N`itrogen and `C`arbon in a frond of `A`rea","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"which can be put into BiogeochemicalParticles, or you can directly manifest particles:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"using OceanBioME, Oceananigans\n\ngrid = RectilinearGrid(size = (1, 1, 1), extent = (1, 1, 1));\nparticles = SugarKelpParticles(10; grid)\n\n# output\n10 BiogeochemicalParticles with SugarKelp{Float64} biogeochemistry:\n├── fields: (:A, :N, :C)\n└── coupled tracers: (:NO₃, :NH₄, :DIC, :O₂, :DOC, :DON, :bPOC, :bPON)\n","category":"page"},{"location":"model_components/individuals/slatissima/#Model-equations","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Model equations","text":"","category":"section"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"As per Broch and Slagstad (2012) this model variables evolve as:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"beginalign\nfracdAdt  = left(mu - nuright)A \nfracdNdt  = J - mu(N + N_textstruct) \nfracdCdt  = P(1 - E) - R - mu(C + C_textstruct)\nendalign","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"The apical frond loss given by:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"nu = frac10^-6exp(varepsilon A)1 + 10^-6(exp(varepsilon A) - 1)","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"The growth given by:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"mu = f_textareaf_textseasonalf_texttempminleft(mu_c max(mu_NO_3 mu_NH_4)right)","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"where:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"beginalign\nf_textarea  = m_1exp(-(AA_0)^2) + m_2 \nf_textseasonal  = a_1(1 + textsgn(lambda(n))lambda(n)^12) + a_2 \nf_texttemp  = left beginarrayll\n                      008T + 02  -18leq T  10 \n                      1            10 leq T leq 15 \n                      194 - T4   15  T leq 19 \n                      0            T  19\n                   endarray right\nendalign","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"where n is the day of the year, lambda is the normalised day length change, and T is the temperature in degrees centigrade. The limiting rates (mu_c, mu_NO_3, mu_NH_4) depend on the availability of carbon giving:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"mu_c = 1 - fracC_textminC","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"and on the available nitrogen which is either limited by the instantaneous uptake of ammonia, or the nitrogen reserve. To find these limits J, the nutrient uptake, must first be found (Fossberg et al., 2018). The uptake is calculated by first finding the NO_3 uptake rate:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"J_NO_3 = J_NO_3text maxf_textcurrfracN_textmax - NN_textmax - N_textminfracNO_3k_NO_3 + NO_3","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"where f_curr = c_1(1 - exp(-u  c_2)) + c_3 (Broch et al., 2019) where u is the relative current speed. We then calculate the potential ammonia uptake:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"tildeJ_NH_4 = J_NH_4text maxf_textcurrfracNH_4k_NH_4 + NH_4","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"This results in a theoretical instantaneous area increase rate of:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"mu_NH_4 = frac1N_textmin + N_textstructfractildeJ_NH_4k_A","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"or growth from reserves of:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"mu_NO_3 = 1 - fracN_textminN","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"The actual resulting ammonia uptake is then:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"J_NH_4 = minleft(tildeJ_NH_4 mu k_A (N_textmin + N_textstruct)right)","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"and the total uptake J = fracJ_NH_4 + J_NO_3k_A.","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"The production of carbon from photosynthesis is given by:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"P = P_Sleft1 - expleft(fracalpha PARP_Sright)rightexpleft(fracbeta PARP_Sright)","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"where PAR is the photosynthetically available radiation and","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"P_S = fracalpha I_textsatln(1 + alphabeta)","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"alpha is a constant but beta depends on the maximum photosynthetic rate which is defined by both:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"P_textmax = fracalpha I_textsatln(1 + alphabeta)left(fracalphaalpha + betaright)left(fracbetaalpha + betaright) ^ betaalpha","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"and","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"P_textmax = fracP_1expleft(fracT_APT_P1 - fracT_APTright)1 + expleft(fracT_APLT - fracT_APLT_PLright) + expleft(fracT_APHT - fracT_APHT_PHright)","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"where T is the temperature in kelvin and the T_X are Arrhenius temperature constants. We solve these iteratively to find beta.","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"The exudation fraction is given by:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"E = 1 - expleft(gamma(C_min - C)right)","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"As per Broch et al. (2013) R, the respiration rate, is given by:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"R = leftR_Aleft(fracmumu_textmax + fracJJ_textmaxright) + R_Brightexpleft(fracT_ARRT_1 - fracT_ARRTright)","category":"page"},{"location":"model_components/individuals/slatissima/#Parameter-variable-names","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Parameter variable names","text":"","category":"section"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"Symbol Variable name Units\nA_0 growth_rate_adjustment 1 / dm²\nalpha photosynthetic_efficiency gC / dm² / s / einstein\nC_textmin minimum_carbon_reserve gC / gSW\nC_textstruct structural_carbon gC / gSW\ngamma exudation gC / g\nvarepsilon erosion 1 / dm²\nI_textsat saturation_irradiance einstein\nk_A structural_dry_weight_per_area g / dm²\nk_dw structural_dry_to_wet_weight -\nk_C carbon_reserve_per_carbon g / gC\nk_N nitrogen_reserve_per_nitrogen g / gN\nN_textmin minimum_nitrogen_reserve gN / gSW\nN_textmax maximum_nitrogen_reserve gN / gSW\nm_2 growth_adjustment_2 -\nm_1 growth_adjustment_1 -\nmu_textmax maximum_specific_growth_rate 1 / s\nN_textstruct structural_nitrogen gN / gSW\nP_1 photosynthesis_at_ref_temp_1 gC / dm² / s\nP_2 photosynthesis_at_ref_temp_2 gC / dm² / s\nT_P1 photosynthesis_ref_temp_1 °K\nT_P2 photosynthesis_ref_temp_2 °K\na_1 photoperiod_1 -\na_2 photoperiod_2 -\nR_1 respiration_at_ref_temp_1 gC / dm² / s\nR_2 respiration_at_ref_temp_2 gC / dm² / s\nT_R1 respiration_ref_temp_1 °K\nT_R2 respiration_ref_temp_2 °K\nT_AP photosynthesis_arrhenius_temp °K\nT_PL photosynthesis_low_temp °K\nT_PH photosynthesis_high_temp °K\nT_APL photosynthesis_high_arrhenius_temp °K\nT_APH photosynthesis_low_arrhenius_temp °K\nT_ARR respiration_arrhenius_temp °K\nu_0p65 current_speed_for_0p65_uptake m / s\nk_NO_3 nitrate_half_saturation mmol N / m³\nk_NH_4 ammonia_half_saturation mmol N / m³\nJ_NO_3text max maximum_nitrate_uptake gN / dm² / s\nJ_NH_4text max maximum_ammonia_uptake gN / dm² / s\nc_1 current_1 -\nc_2 current_2 1 / m / s\nc_3 current_3 -\nR_A respiration_reference_A gC / dm² / s\nR_B respiration_reference_B gC / dm² / s\n- exudation_redfield_ratio mmol C / mmol N","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"All default parameter values are given in Parameters.","category":"page"},{"location":"model_components/individuals/slatissima/#Model-conservations","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Model conservations","text":"","category":"section"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"Total nitrogen (and carbon where appropriate) are conserved between the individuals and biogeochemistry. The total nitrogen in each individual is:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"N_texttotal = Ak_A(N + N_textstruct)","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"and carbon:","category":"page"},{"location":"model_components/individuals/slatissima/","page":"Sugar Kelp (Broch and Slagstad 2012 ++)","title":"Sugar Kelp (Broch and Slagstad 2012 ++)","text":"C_texttotal = Ak_A(C + C_textstruct)","category":"page"},{"location":"model_components/sediments/#sediment","page":"Overview","title":"Sediment","text":"","category":"section"},{"location":"model_components/sediments/","page":"Overview","title":"Overview","text":"Sediment models can be added to biogeochemical models and evolve their own biogeochemistry. They may have fields which can be prognostically integrated by the timestepper, and can store the value of tracers in the fluid domain as tracked_fields (for example sediments). The tracked_fields may be reqired_tracers, or can enter the sediment model as sinking_fluxes where the tracked_field value will be:","category":"page"},{"location":"model_components/sediments/","page":"Overview","title":"Overview","text":"-wfracpartal Cpartial z","category":"page"},{"location":"model_components/sediments/","page":"Overview","title":"Overview","text":"struct BiogeochemicalSediment{BC, TS, CL, GR, SF, TF, BI} <: AbstractModel{TS}\n    biogeochemistry :: BC\n        timestepper :: TS\n              clock :: CL\n               grid :: GR\n             fields :: SF\n     tracked_fields :: TF\n     bottom_indices :: BI\nend","category":"page"},{"location":"model_components/sediments/","page":"Overview","title":"Overview","text":"Please see the InstantRemineralisationSediment code as an example of how to implement a simple sediment biochemistry.","category":"page"},{"location":"model_components/sediments/","page":"Overview","title":"Overview","text":"NB: BiogeochemicalSediment are currently only valid for flat bottom grids, or grids with flat cell bottoms (i.e. PartialCellBottom or GridFittedBottom), and will not be correct for future Oceananigans immersed boundaries such as cut-cell grids.","category":"page"},{"location":"generated/LOBSTER_parameters/#LOBSTER-default-parameters","page":"LOBSTER","title":"LOBSTER default parameters","text":"","category":"section"},{"location":"generated/LOBSTER_parameters/","page":"LOBSTER","title":"LOBSTER","text":"Name Value\nphytoplankton_preference 0.5\nmaximum_grazing_rate 9.26e-6\ngrazing_half_saturation 1.0\nlight_half_saturation 33.0\nnitrate_ammonia_inhibition 3.0\nnitrate_half_saturation 0.7\nammonia_half_saturation 0.001\nmaximum_phytoplankton_growthrate 1.21e-5\nzooplankton_assimilation_fraction 0.7\nzooplankton_mortality 2.31e-6\nzooplankton_excretion_rate 5.8e-7\nphytoplankton_mortality 5.8e-7\nsmall_detritus_remineralisation_rate 5.88e-7\nlarge_detritus_remineralisation_rate 5.88e-7\nphytoplankton_exudation_fraction 0.05\nnitrification_rate 5.8e-7\nammonia_fraction_of_exudate 0.75\nammonia_fraction_of_excriment 0.5\nammonia_fraction_of_detritus 0.0\nphytoplankton_redfield 6.56\norganic_redfield 6.56\nphytoplankton_chlorophyll_ratio 1.31\norganic_carbon_calcate_ratio 0.1\nrespiration_oxygen_nitrogen_ratio 10.75\nnitrification_oxygen_nitrogen_ratio 2.0\nslow_sinking_mortality_fraction 0.5\nfast_sinking_mortality_fraction 0.5\ndissolved_organic_breakdown_rate 3.86e-7\nzooplankton_calcite_dissolution 0.3\nsPOM sinking speed 1×1×1 Field{Oceananigans.Grids.Center, Oceananigans.Grids.Center, Oceananigans.Grids.Face} on RectilinearGrid on Oceananigans.Architectures.CPU","category":"page"},{"location":"generated/LOBSTER_parameters/","page":"LOBSTER","title":"LOBSTER","text":"├── grid: 1×1×1 RectilinearGrid{Float64, Oceananigans.Grids.Flat, Oceananigans.Grids.Flat, Oceananigans.Grids.Flat} on Oceananigans.Architectures.CPU with 0×0×0 halo ├── boundary conditions: FieldBoundaryConditions │   └── west: Nothing, east: Nothing, south: Nothing, north: Nothing, bottom: Nothing, top: Nothing, immersed: Nothing └── data: 1×1×1 OffsetArray(::Array{Float64, 3}, 1:1, 1:1, 1:1) with eltype Float64 with indices 1:1×1:1×1:1     └── max=-3.47e-5, min=-3.47e-5, mean=-3.47e-5| |bPOM sinking speed|1×1×1 Field{Oceananigans.Grids.Center, Oceananigans.Grids.Center, Oceananigans.Grids.Face} on RectilinearGrid on Oceananigans.Architectures.CPU ├── grid: 1×1×1 RectilinearGrid{Float64, Oceananigans.Grids.Flat, Oceananigans.Grids.Flat, Oceananigans.Grids.Flat} on Oceananigans.Architectures.CPU with 0×0×0 halo ├── boundary conditions: FieldBoundaryConditions │   └── west: Nothing, east: Nothing, south: Nothing, north: Nothing, bottom: Nothing, top: Nothing, immersed: Nothing └── data: 1×1×1 OffsetArray(::Array{Float64, 3}, 1:1, 1:1, 1:1) with eltype Float64 with indices 1:1×1:1×1:1     └── max=-0.00231481, min=-0.00231481, mean=-0.00231481|","category":"page"},{"location":"model_components/air-sea-gas/#air-sea-gas","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"","category":"section"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"Air-sea gas transfer is typically parameterised as a function of temperature (T) and wind speed (u_10), and the concentration of the gas in the air (C_a) and in the surface water (C_w) in the form:","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"F = k(u_10 T)(C_w - C_a)","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"where k is the gas transfer velocity.","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"Our implementation is intended to be generic for any gas, so you can specify air_concentration, water_concentration, transfer_velocity, and wind_speed as any function in GasExchange, but we also provide constructors and default values for carbon dioxide and oxygen. ","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"To setup carbon dioxide and/or oxygen boundary conditions you simply build the condition and then specify it in the model:","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"using OceanBioME\nCO₂_flux = CarbonDioxideGasExchangeBoundaryCondition()\nO₂_flux  = OxygenGasExchangeBoundaryCondition()\nusing Oceananigans\n\ngrid = RectilinearGrid(size=(3, 3, 30), extent=(10, 10, 200));\n\nmodel = NonhydrostaticModel(; grid,\n                              biogeochemistry = LOBSTER(; grid, carbonates = true, oxygen = true),\n                              boundary_conditions = (DIC = FieldBoundaryConditions(top = CO₂_flux), \n                                                      O₂ = FieldBoundaryConditions(top =  O₂_flux)),\n                              tracers = (:T, :S))","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"note: Note\nAll gas exchange models require temperature (T) to be present in the model, and carbon dioxide requires sailinity (S), total inorganic carbon (DIC), and alkalinity (Alk), and optionally can take silicate and phosphate where there names are specified in the keyword argument silicate_and_phosphate_names","category":"page"},{"location":"model_components/air-sea-gas/#Model-equations","page":"Air-sea gas exchange","title":"Model equations","text":"","category":"section"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"### Gas transfer velocity","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"The default gas transfer velocity (ScaledTransferVelocity) returns a velocity in the form:","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"k(u_10 T) = cu_10^2left(fracSc(T)660right)^-12","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"where c is a coefficient (coeff) which typically is wind product specific with default value 0266 cm/hour from Ho et al. (2006), and Sc is gas specific the temperature dependent Schmidt number (the dimensionless ratio of momentum and mass diffusivity) specified as schmidt_number which can be any function of temperature. The default parameterisations is the 4th order polynomial formulation of Wanninkhof (2014).","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"Currently, the parameters for CO₂ and oxygen are included, but it would be very straightforward to add the parameters given in the original publication for other gases (e.g. inert tracers of other nutrients such as N₂).","category":"page"},{"location":"model_components/air-sea-gas/#Carbon-dioxide-partial-pressure","page":"Air-sea gas exchange","title":"Carbon dioxide partial pressure","text":"","category":"section"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"For most gasses the water concentration C_w is simply taken directly from the biogeochemical model or another tracer (in which case water_concentration should be set to TracerConcentration(:tracer_name)), but for carbon dioxide the fugacity (fCO_2) must be derived from the dissolved inorganic carbon (DIC) and Alkalinity by a CarbonChemistry model (please see the docs for CarbonChemistry), and used to calculate the partial pressure (pCO_2).","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"The default parameterisation for the partial pressure (CarbonDioxideConcentration) is given by Dickson et al. (2007) and defines the partial pressure to be the mole fraction x(CO_2) multiplied by the pressure, P, related to the fugacity by:","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"fCO_2 = x(CO_2)Pexpleft(frac1RTint_0^Pleft(V(CO_2)-fracRTPright)dPright)","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"The volume (V) is related to the gas pressure by the virial expression:","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"fracPV(CO_2)RTapprox1+fracB(x T)V(CO_2)+mathcalO(V(CO_2)^-2)","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"and the first virial coefficient B for carbon dioxide in air can be approximated as:","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"B_CO_2-textair approx B_CO_2(T) + 2x(CO_2)delta_CO_2-textair(T)","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"where delta is the cross virial coefficient.","category":"page"},{"location":"model_components/air-sea-gas/","page":"Air-sea gas exchange","title":"Air-sea gas exchange","text":"B_CO_2 and delta_CO_2-textair are parameterised by Weiss (1974) and reccomended in Dickson et al. (2007) as fourth and first order polynomials respectively.","category":"page"},{"location":"model_components/biogeochemical/#bgc_models","page":"Overview","title":"Biogeochemical Models","text":"","category":"section"},{"location":"model_components/biogeochemical/","page":"Overview","title":"Overview","text":"Biogeochemical (BGC) models can be used within the Oceananigans biogeochemistry framework or as stand alone box models. All BGC models should be setup in the same way so that they can easily be substituted for each other. You can easily implement a different model (or a variation on a current model) by following the guide here.","category":"page"},{"location":"model_components/biogeochemical/","page":"Overview","title":"Overview","text":"For details of the BGC models currently implemented please see the following pages.","category":"page"},{"location":"model_components/biogeochemical/#Oceananigans-setup","page":"Overview","title":"Oceananigans setup","text":"","category":"section"},{"location":"model_components/biogeochemical/","page":"Overview","title":"Overview","text":"At the simplest level, all that is required to setup an existing OceanBioME BGC model is to pass it to the Oceananigans model setup:","category":"page"},{"location":"model_components/biogeochemical/","page":"Overview","title":"Overview","text":"model = NonhydrostaticModel(; grid,\n                              ...,\n                              biogeochemistry = MODEL_NAME(; grid))","category":"page"},{"location":"model_components/biogeochemical/","page":"Overview","title":"Overview","text":"where MODEL_NAME is the name of the model. You may also need to pass additional parameters like:","category":"page"},{"location":"model_components/biogeochemical/","page":"Overview","title":"Overview","text":"MODEL_NAME(; grid, growth_rate = 10.0)","category":"page"},{"location":"model_components/biogeochemical/","page":"Overview","title":"Overview","text":"The above will set up the required tracers and auxiliary fields, and you may also set boundary conditions or additional forcing through the usual Oceananigans setup.","category":"page"},{"location":"model_components/biogeochemical/","page":"Overview","title":"Overview","text":"Models usually have a default light attenuation model specified, these may be substituted easily by passing different models as parameters as above.","category":"page"},{"location":"model_components/biogeochemical/","page":"Overview","title":"Overview","text":"Our models are implemented in an abstract framework Biogeochemistry which contains underlying_biogeochemistry, light_attenuation, sediment, and modifiers. This is automatically set up for existing BGC models, but may also be used to couple any BGC model with light attenuation and sediments. See the implementation page for some more information on how to couple other models.","category":"page"},{"location":"quick_start/#Quick-start","page":"Quick start","title":"Quick start","text":"","category":"section"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"OceanBioME provides biogeochemical models to plug into Oceananigans, for example this code will run one month of a single column, 7 variable (P, Z, sPOM, bPOM, DOM, NO₃, NH₄) biogeochemical situation with constant forcing.","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"First we need to check we have the required dependencies:","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"using Pkg\nPkg.add([\"OceanBioME\", \"Oceananigans\"])","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"using OceanBioME, Oceananigans\nusing Oceananigans.Units\n\ngrid = RectilinearGrid(size = 10, extent = 200meters, topology = (Flat, Flat, Bounded))\n\nmodel = NonhydrostaticModel(; grid, biogeochemistry = LOBSTER(; grid))\n\nset!(model, P = 0.001, Z = 0.001, NO₃ = 1, NH₄ = 0.01)\n\nsimulation = Simulation(model, Δt = 1minute, stop_time = 30days)\n\nsimulation.output_writers[:profiles] = JLD2Writer(model, model.tracers,\n                                                  filename = \"quickstart.jld2\",\n                                                  schedule = TimeInterval(0.5days),\n                                                  overwrite_existing = true)\n\nrun!(simulation)","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"We can then visualize it, first check the required packages are installed:","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"Pkg.add(\"CairoMakie\")","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"and then load the data and plot:","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"using CairoMakie\n\nphytoplankton = FieldTimeSeries(\"quickstart.jld2\", \"P\")\nnitrates = FieldTimeSeries(\"quickstart.jld2\", \"NO₃\")\n\n_, _, z = nodes(nitrates)\n\nfig = Figure()\n\naxis_kwargs = (xlabel = \"Day\", ylabel = \"Depth (m)\")\nax1 = Axis(fig[1, 1]; title = \"Phytoplankton (mmol N/m³)\", axis_kwargs...)\nax2 = Axis(fig[1, 2]; title = \"Nitrate (mmol N/m³)\", axis_kwargs...)\n\nhm1 = heatmap!(ax1, phytoplankton.times / day, z, interior(phytoplankton , 1, 1, :, :)')\nhm2 = heatmap!(ax2,      nitrates.times / day, z, interior(nitrates, 1, 1, :, :)')\n\nfig","category":"page"},{"location":"quick_start/","page":"Quick start","title":"Quick start","text":"OceanBioME provides the tools to add to this, for example adding a carbonate chemistry model, or sediment at the bottom of the model. Please have a look at the rest of the examples to explore these options.","category":"page"},{"location":"model_components/biogeochemical/PISCES/PISCES/#PISCES","page":"PISCES","title":"PISCES (Pelagic Interactions Scheme for Carbon and Ecosystem Studies) model","text":"","category":"section"},{"location":"model_components/biogeochemical/PISCES/PISCES/","page":"PISCES","title":"PISCES","text":"PISCES (PEES-kays, /ˈpiːs.keːs/) is a high complexity ocean biogeochemical model with 24 prognostic tracers.  It has previously been used with the NEMO transport model in the IPSL-CM5A-LR and CNRM-CM5 CMIP-5 earth system models (ESM). This is an early attempt to implement PISCES for use as a test bed in a more flexible environment to allow rapid prototyping and testing of new parametrisations as well as use in idealised experiments, additionally we want to be able to replicate the dynamics of the operational model for possible future use in a Julia based ESM as the ecosystem matures.","category":"page"},{"location":"model_components/biogeochemical/PISCES/PISCES/","page":"PISCES","title":"PISCES","text":"An overview of the model structure is available from the PISCES community website:","category":"page"},{"location":"model_components/biogeochemical/PISCES/PISCES/","page":"PISCES","title":"PISCES","text":"(Image: PISCES model structure)","category":"page"},{"location":"model_components/biogeochemical/PISCES/PISCES/","page":"PISCES","title":"PISCES","text":"The default configuration of PISCES in OceanBioME is the operational/standard version with 24 tracers and can be set up by writing:","category":"page"},{"location":"model_components/biogeochemical/PISCES/PISCES/","page":"PISCES","title":"PISCES","text":"using OceanBioME, Oceananigans\n\ngrid = RectilinearGrid(size=(1, 1, 1), extent=(1, 1, 1));\n\nbiogeochemistry = PISCES(; grid)\n\nshow(biogeochemistry)\n\nOceananigans.Biogeochemistry.required_biogeochemical_tracers(biogeochemistry)\n\n(:P, :PChl, :PFe, :D, :DChl, :DFe, :DSi, :Z, :M, :DOC, :POC, :GOC, :SFe, :BFe, :PSi, :CaCO₃, :NO₃, :NH₄, :PO₄, :Fe, :Si, :DIC, :Alk, :O₂, :T, :S)","category":"page"},{"location":"model_components/biogeochemical/PISCES/PISCES/","page":"PISCES","title":"PISCES","text":"The parametrisations can easily be switched out when the biogeochemistry is constructed by setting the key word parameter, see the API documentation, although we currently do not have any of the other configurations implemented. Note that PISCES-simple is very similar to LOBSTER if that is what you are looking for.","category":"page"},{"location":"model_components/biogeochemical/PISCES/PISCES/","page":"PISCES","title":"PISCES","text":"More documentation will follow but for now the equations can be found in Aumont et al. (2015) read along side our notes here.","category":"page"},{"location":"model_components/biogeochemical/PISCES/PISCES/#Model-conservation","page":"PISCES","title":"Model conservation","text":"","category":"section"},{"location":"model_components/biogeochemical/PISCES/PISCES/","page":"PISCES","title":"PISCES","text":"When the permanent scavenging of iron, nitrogen fixation, and particle sinking are turned off, PISCES conserves:","category":"page"},{"location":"model_components/biogeochemical/PISCES/PISCES/","page":"PISCES","title":"PISCES","text":"Carbon: partial_tP + partial_tD + partial_tZ + partial_tM + partial_tDOC + partial_tPOC + partial_tGOC + partial_tDIC + partial_tCaCO_3=0\nIron: partial_tPFe + partial_tDFe + theta^Feleft(partial_tZ + partial_tM + partial_tDOCright) + partial_tSFe + partial_tBFe + partial_tFe=0\nPhosphate: theta^Pleft(partial_tPFe + partial_tDFe + partial_tZ + partial_tM + partial_tDOC + partial_tPOC + partial_tGOCright) + partial_tPO_4=0\nSilicon: partial_tDSi + partial_tPSi + partial_tSi=0\nNitrogen: theta^Nleft(partial_tPFe + partial_tDFe + partial_tZ + partial_tM + partial_tDOC + partial_tPOC + partial_tGOCright) + partial_tNH_4 + partial_tNO_3=0","category":"page"},{"location":"model_components/sediments/simple_multi_g/#multi-g","page":"Simple Multi-G","title":"Simple multi-G","text":"","category":"section"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"This model, proposed by Soetaert et al. (2000), is a \"G class\" model that evolves carbon and nitrogen in three classes (fast, slow and refectory). The model is also only compatible with the LOBSTER biogeochemical model with carbonate chemistry, oxygen, and variable redfield options on. You also must ensure that the open_bottom option is on for particles to leave the bottom of the domain to the sediment model.","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"It is straightforward to set up:","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"using OceanBioME, Oceananigans, OceanBioME.Sediments\n\ngrid = RectilinearGrid(size=(3, 3, 30), extent=(10, 10, 200))\n\nsediment_model = SimpleMultiGSediment(grid)\n\n# output\n`BiogeochemicalSediment` with `Single-layer multi-G sediment model (Float64)` biogeochemsitry\n    Prognostic fields: (:Ns, :Nf, :Nr)\n    Tracked fields: (:NO₃, :NH₄, :O₂, :sPOM, :bPOM)\n    Coupled fields: (:NO₃, :NH₄, :O₂)","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"You may optionally specify the model parameters. This can then be passed in the setup of a BGC model:","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"biogeochemistry = LOBSTER(; grid,\n                            carbonates = true, oxygen = true, variable_redfield = true,\n                            open_bottom = true,\n                            sediment_model)","category":"page"},{"location":"model_components/sediments/simple_multi_g/#Model-equations","page":"Simple Multi-G","title":"Model equations","text":"","category":"section"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"This model evolved the carbon and nitrogen components of three liability classes: fast, slow, and refractory. Each component is remineralised with first order decay so evolved like:","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"fracdX_idt = F_X_i - lambda_iX_i","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"For the fast and slow classes lambda is a positive, non-zero, rate constant, and for the refractory class it is 0. F_X_i is the flux, and the flux for each class is simply a constant fraction of the total flux:","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"F_X_i = f_iF_X","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"The fraction of remineralised sediment (X_textmin = Sigma_ilambda_X_iX_i) that becomes ammonia or nitrate depends on the equilibrium of chemical equations dependent on the bottom water NO_3, NH_4, and O_2 concentrations, as well as the total remineralisation and mean degradation rate. The mean first order degredation rate is given by:","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"k = fraclambda_textfast C_textfast + lambda_textslow C_textslowC_textfast + C_textslow","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"and, based on Soetaert et al. (2000), the fraction nitrified (i.e becoming nitrate rather than ammonia) is given by:","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"lnleft(C_textminp_nitright) = n_A + n_Bln C_textminln O_2 + n_C * ln C_textmin ^ 2 + n_D * ln k ln NH_4 + n_E ln C_textmin + n_F ln C_textmin ln NH_4","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"Therefore, the efflux of nitrate and ammonia are given by:","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"fracpartial NO_3partial t =fracN_textminp_textnitDelta z","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"fracpartial NH_4partial t = fracN_textmin(1 - p_textnit)Delta z","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"where Delta z is the depth of the bottom cell (since X_i is a surface concentration). This mineralisation also consumes oxygen at a rate:","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"fracpartial O_2partial t =fracC_textmin(1 - p_textanoxp_textsolid deposition) + N_textminp_textnit ONDelta z","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"where the constants are given by:","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"p_textsolid deposition = s_A w ^s_B","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"with, w = s_CD^s_D where D is the water depth.","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"lnleft(C_textminp_textanoxright) = a_A + a_Bln C_textmin + a_C ln C_textmin ^ 2 + a_D ln k + a_E ln O_2 ln k + a_F ln NO_3 ^2","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"The original model of Soetaert et al. (2000) also includes denitrification terms whereby nitrogen is returned to the water column as dissolved N_2, but we currently do not account for this in order to conserve the nitrogen budget.","category":"page"},{"location":"model_components/sediments/simple_multi_g/#Parameter-variable-names","page":"Simple Multi-G","title":"Parameter variable names","text":"","category":"section"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"Symbol Variable name Units\nlambda_textfast fast_decay_rate 1 / s\nlambda_textslow slow_decay_rate 1 / s\nf_textfast fast_fraction -\nf_textslow slow_fraction -\nf_textref refactory_fraction -\nn_i nitrate_oxidation_params -\na_i anoxic_param -\ns_i solid_dep_params -","category":"page"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"All parameters are given in Parameters.","category":"page"},{"location":"model_components/sediments/simple_multi_g/#Model-conservations","page":"Simple Multi-G","title":"Model conservations","text":"","category":"section"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"Nitrogen and carbon is conserved between the model domain and sediment, any nitrogen or carbon not returned to the bottom cell is stored in a sediment field.","category":"page"},{"location":"model_components/sediments/simple_multi_g/#Model-compatibility","page":"Simple Multi-G","title":"Model compatibility","text":"","category":"section"},{"location":"model_components/sediments/simple_multi_g/","page":"Simple Multi-G","title":"Simple Multi-G","text":"This model is currently only compatible with the LOBSTER biogeochemical model.","category":"page"},{"location":"model_components/sediments/instant_remineralisation/#instant_remineralisation","page":"Instant remineralisation","title":"Instant remineralisation","text":"","category":"section"},{"location":"model_components/sediments/instant_remineralisation/","page":"Instant remineralisation","title":"Instant remineralisation","text":"This model is similar to that described in Aumont et al. (2015) where the majority of organic matter that sinks to the bottom of the domain is instantly remineralised and returned to a nutrient pool (usually NH_4) in the bottom cell of the domain, and the remainder is permanently stored. ","category":"page"},{"location":"model_components/sediments/instant_remineralisation/#Model-equations","page":"Instant remineralisation","title":"Model equations","text":"","category":"section"},{"location":"model_components/sediments/instant_remineralisation/","page":"Instant remineralisation","title":"Instant remineralisation","text":"The burial fraction from Dunne et al. (2007) is given by:","category":"page"},{"location":"model_components/sediments/instant_remineralisation/","page":"Instant remineralisation","title":"Instant remineralisation","text":"E = E_0 + E_1left(fracF_OCk_B + F_OCright)^2","category":"page"},{"location":"model_components/sediments/instant_remineralisation/","page":"Instant remineralisation","title":"Instant remineralisation","text":"where F_OC is the carbon flux (in this implementation the nitrogen flux multiplied by the Redfield ratio).","category":"page"},{"location":"model_components/sediments/instant_remineralisation/#Parameter-variable-names","page":"Instant remineralisation","title":"Parameter variable names","text":"","category":"section"},{"location":"model_components/sediments/instant_remineralisation/","page":"Instant remineralisation","title":"Instant remineralisation","text":"Symbol Variable name Units\nE_0 burial_efficiency_constant1 -\nE_1 burial_efficiency_constant2 -\nk_B burial_efficiency_half_saturation mmol C / m² / s","category":"page"},{"location":"model_components/sediments/instant_remineralisation/#Model-conservations","page":"Instant remineralisation","title":"Model conservations","text":"","category":"section"},{"location":"model_components/sediments/instant_remineralisation/","page":"Instant remineralisation","title":"Instant remineralisation","text":"Nitrogen is conserved between the model domain and sediment, any nitrogen not returned to the bottom cell is stored in a sediment field.","category":"page"},{"location":"model_components/sediments/instant_remineralisation/#Model-compatibility","page":"Instant remineralisation","title":"Model compatibility","text":"","category":"section"},{"location":"model_components/sediments/instant_remineralisation/","page":"Instant remineralisation","title":"Instant remineralisation","text":"This model is compatible with all currently implemented models but does not separately store or remineralise carbon.","category":"page"},{"location":"model_components/utils/#utils","page":"Utilities","title":"Utilities","text":"","category":"section"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"We provide some utilities that may be useful.","category":"page"},{"location":"model_components/utils/#Time-step-adaptation","page":"Utilities","title":"Time step adaptation","text":"","category":"section"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"We have added a few additional utilities which extend the capabilities of Oceananigans' time step wizard. For column models where there is no water velocity we have added functions to calculate the advection timescale from the biogeochemical model defined sinking velocities. This could be used by:","category":"page"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"wizard = TimeStepWizard(cfl = 0.2, diffusive_cfl = 0.2, max_change = 2.0, min_change = 0.5, cell_advection_timescale = column_advection_timescale)\nsimulation.callbacks[:wizard] = Callback(wizard, IterationInterval(10))","category":"page"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"Finally, sinking may be more limiting than the normal advective CFL conditions so, we have an additional cell advection timescale defined for 3D models:","category":"page"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"wizard = TimeStepWizard(cfl = 0.6, diffusive_cfl = 0.5, max_change = 1.5, min_change = 0., cell_advection_timescale = sinking_advection_timescale)\nsimulation.callbacks[:wizard] = Callback(wizard, IterationInterval(10))","category":"page"},{"location":"model_components/utils/#Negative-tracer-detection","page":"Utilities","title":"Negative tracer detection","text":"","category":"section"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"As a temporary measure we have implemented a callback to either detect negative tracers and either scale a conserved group, force them back to zero, or throw an error. Please see the numerical implementations' page for details. This can be set up by:","category":"page"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"negativity_protection = ScaleNegativeTracers((:P, :Z, :N))\nbiogeochemistry = Biogeochemistry(...; modifiers = negativity_protection)","category":"page"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"You may also pass a scale factor for each component (e.g. in case they have different redfield ratios):","category":"page"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"negativity_protection = ScaleNegativeTracers((:P, :Z, :N); scalefactors = (1, 1, 2))\nbiogeochemistry = Biogeochemistry(...; modifiers = negativity_protection)","category":"page"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"Here you should carefully consider which tracers form a conserved group (if at all). Alternatively, force to zero by:","category":"page"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"negativity_protection = ZeroNegativeTracers()\nbiogeochemistry = Biogeochemistry(...; modifiers = negativity_protection)","category":"page"},{"location":"model_components/utils/","page":"Utilities","title":"Utilities","text":"The latter optionally takes a named tuple of parameters that may include exclude, which can be a tuple of tracer names (Symbols) which are allowed to be negative.","category":"page"},{"location":"model_components/carbon-chemistry/#carbon-chemistry","page":"Carbon chemistry","title":"Carbon Chemistry","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Our carbon chemistry model follows the best practice described by Dickson et al. (2007), as implemented by e.g. cbsyst (Branson, 2023) and CO2SYS (Humphreys et al., 2022) in Python.","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"The carbon chemistry model is primarily used for diagnosing the partial pressure of carbon dioxide in the surface water for gas exchange with the air, but is capable of diagnosing other species such as carbonate concentration, useful in the calculation of calcite dissolution. The model works by computing the pH from the total dissolved inorganic carbon and total alkalinity (and optionally silicate, phosphate, boron, sulfate, and fluoride concentration), along with temperature and salinity, which can then be used to find the concentration of different species. We will first describe how to use the model, followed by the underlying chemistry and parameterisations.","category":"page"},{"location":"model_components/carbon-chemistry/#Using-the-model","page":"Carbon chemistry","title":"Using the model","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"To use the carbon chemistry model it is constructed by simply writing:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"using OceanBioME\n\ncarbon_chemistry = CarbonChemistry()","category":"page"},{"location":"model_components/carbon-chemistry/#Computing-fCO_2-and-pH","page":"Carbon chemistry","title":"Computing fCO_2 and pH","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"To compute the fugacity of carbon dioxide (fCO_2) you call the model with the DIC, Alkalinity, Temperature, and Salinity:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"DIC = 2145.0\nAlk = 2448.0\nT = 25.4\nS = 36.45\ncarbon_chemistry(; DIC, Alk, T, S)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"This is sufficient when computing fCO_2 at the surface, but if we wanted to know fCO_2 at depth where there is higher pressure we can specify the pressure in bar like:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"carbon_chemistry(; DIC, Alk, T, S, P = 100)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"We may also be interested in the pH so we can request that be outputted:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"carbon_chemistry(; DIC, Alk, T, S, return_pH = true)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"These function calls assume a constant boron, sulfate, and fluoride ratio relative to the salinity (as described below), but can be specified instead:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"carbon_chemistry(; DIC, Alk, T, S, boron = 0)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"And the silicate and phosphate concentrations are assumed to be zero but can similarly be specified:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"carbon_chemistry(; DIC, Alk, T, S, silicate = 2, phosphate = 1)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"The same code can also be used to compute fCO_2 when the pH is already known by passing it in the same way:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"carbon_chemistry(; DIC, pH = 8.1, T, S)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Finally, for slightly improved accuracy you may wish to specify that the seawater density calculation, is an intermediary step in the calculations above, is computed using the full TEOS-10 Feistel (2008) standard by setting this as the density_function when you construct the carbon chemistry model:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"using OceanBioME.Models: teos10_density\ncarbon_chemistry = CarbonChemistry(; density_function = teos10_density)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"But this comes at the cost of significantly increased computational expense and GPU incompatability.","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"During the conversion from practical to absolute salinity units the location can then also be entered for (very slightly, in this example ~10^-4muatm) improved accuracy:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"carbon_chemistry(; DIC, Alk, T, S, lon = -31.52, lat = 33.75)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"The default uses the polynomial approximation described in Roquet et al. (2015) as provided by SeawaterPolynomials.jl.","category":"page"},{"location":"model_components/carbon-chemistry/#Computing-the-carbonate-concentration","page":"Carbon chemistry","title":"Computing the carbonate concentration","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"So that this model can be used in calcite dissolution models it can also return the carbonate saturation by calling the function calcite_saturation","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"using OceanBioME.Models.CarbonChemistryModel: calcite_saturation\n\ncalcite_saturation(carbon_chemistry; DIC, Alk, T, S)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"This function takes all of the same arguments (e.g. boron) as carbon_chemistry above.","category":"page"},{"location":"model_components/carbon-chemistry/#Chemistry","page":"Carbon chemistry","title":"Chemistry","text":"","category":"section"},{"location":"model_components/carbon-chemistry/#pH-computation","page":"Carbon chemistry","title":"pH computation","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"When carbon dioxide is dissolved in seawater it dissociates into carbonate and bicarbonate species according to the equilibria:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceCO_2(g) ce= CO_2(aq)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceCO_2(aq) + ceH_2O ce= H_2CO_3(aq)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceCO_2(aq) + H_2Oce= H^+ HCO^-_3","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceHCO^-_3 ce= H^+ + CO^2-_3","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"from which we define the total dissolved inorganic carbon (DIC) to be DIC = ceCO_2(aq) + ceHCO^-_3 + ceCO^2-_3.  The equilibrium constants for these equations are defined as:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_0=fracceCO_2(aq)cepCO_2","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_1=fracceHCO^-_3H^+ceCO_2(aq)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"and","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_2=fracceCO^2-_3H^+ceHCO^-_3","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"These equilibria depend on the total hydrogen ion concentration H^+, which depends on the concentration of acids and buffering of bases.","category":"page"},{"location":"model_components/carbon-chemistry/#Alkalinity:-acid-base-buffering","page":"Carbon chemistry","title":"Alkalinity: acid-base buffering","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Alkalinity is a measure of the buffering capacity of seawater and we can approximate it as:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Alk = ceHCO_3^- + 2ceCO_3^2- + ceB(OH)_4^- + ceOH^- + ceHPO_4^2- + 2cePO_4^3- + ceSiO(OH)_3^- + ceNH_3 + ceHS^- - ceH^+ - ceHSO_4^- - ceHF - ceH_3PO_4 + text minor acids and bases","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"where the \"minor\" species are either in sufficiently low concentrations as to be neglected (sometimes the photphate, silicate and sulfate species can also be neglected), and we shall neglect ceNH_3.","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Each of these acid and base species are also in an equilibrated dissociation state given below.","category":"page"},{"location":"model_components/carbon-chemistry/#Hydrogen-sulfate","page":"Carbon chemistry","title":"Hydrogen sulfate","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Sulfate in the form of hydrogen sulfate dissociates to form sulfate ions in the equilibrium","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceHSO_4^-ce= H^+ + SO_4^2-","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"with an equilibrium constant given by","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_S=fracceSO_4^2-H^+ceHSO_4^-","category":"page"},{"location":"model_components/carbon-chemistry/#Boric-acid","page":"Carbon chemistry","title":"Boric acid","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Boron in the form of boric acid equilibrates with water in the reaction","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceB(OH)_3+H_2Oce= H^+ + B(OH)_4^-","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"with equilibrium constant","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_B=fracceB(OH)_4^-H^+ceB(OH)_3","category":"page"},{"location":"model_components/carbon-chemistry/#Hydrogen-fluoride","page":"Carbon chemistry","title":"Hydrogen fluoride","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Hydrogen fluoride dissociated in the equilibrium","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceHFce= H^+ + F^-","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"with equilibrium constant","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_F=fracceF^-H^+ceHF","category":"page"},{"location":"model_components/carbon-chemistry/#Phosphoric-acid","page":"Carbon chemistry","title":"Phosphoric acid","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Phosphoric acid undergoes a three stage dissociation given by the equilibrium","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceH_3PO_4ce= H^+ + H_2PO_4^-","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceH_2PO_4^-ce= H^+ + HPO_4^2-","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceHPO_4^2-ce= H^+ + PO_4^3-","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"with equilibrium constants","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_P1 = fracceH^+H_2PO_4^-ceH_3PO_4","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_P2 = fracceH^+HPO_4^2-ceH_2PO_4^-","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_P3 = fracceH^+PO_4^3-ceHPO_4^2-","category":"page"},{"location":"model_components/carbon-chemistry/#Silicic-acid","page":"Carbon chemistry","title":"Silicic acid","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Silicic acid dissociates in the equilibrium","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceSi(OH)_4ce= H^+ + SiO(OH)_3^-","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"with equilibrium constant","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_Si = fracceH^+SiO(OH)_3^-ceSi(OH)_4","category":"page"},{"location":"model_components/carbon-chemistry/#Water","page":"Carbon chemistry","title":"Water","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Finally, water dissociates in the equilibrium","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceH_2Oce= H^+ + OH^-","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"with equilibrium constant","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_w = ceH^+OH^-","category":"page"},{"location":"model_components/carbon-chemistry/#Alkalinity-equilibration","page":"Carbon chemistry","title":"Alkalinity equilibration","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"From these rate constants we can rewrite the total alkalinity (given above) in terms of only the rate constants, total hydrogen ion concentration (ceH^+), the total dissolved inorganic carbon (DIC), boron (textB), phosphate (textP), silicate (textSi), Sulfate (textSulf), and fluorine (textF) content of the water, by rearranging the equations above.  This results in a form of the total alkalinity:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"beginalign\nAlk approx fracDICceH^+K_1ceH^+^2 + K_1ceH^+ + K_1K_2\n    + frac2DICK_1K_2ceH^+^2 + K_1ceH^+ + K_1K_2\n    + fractextB1+ceH^+K_B\n    + fracK_wceH^+\n    + fractextPceH^+K_P1K_P2ceH^+^3+K_P1ceH^+^2+K_P1K_P2ceH^+ + K_P1K_P2K_P3\n    + frac2textPK_P1K_P2K_P3ceH^+^3+K_P1ceH^+^2+K_P1K_P2ceH^+ + K_P1K_P2K_P3\n    + fractextSi1+ceH^+K_Si\n    - fracceH^+1+textSK_S\n    - fractextSulf1+K_SceH^+(1+SK_S)\n    - fractextF1+K_FceH^+\n    - fracceH^+^2ceH^+^3+K_P1ceH^+^2+K_P1K_P2ceH^+ + K_P1K_P2K_P3\nendalign","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"This gives us a second equation from total alkalinity (which we must already know) with one unknown, ceH^+.  Our model solves for ceH^+ using a bisection method to an accuracy of 10^-10, having approximated the equilibrium constants from parametrisations described below. We can then determine the pH as, pH = -log_10(ceH^+).","category":"page"},{"location":"model_components/carbon-chemistry/#Carbon-dioxide","page":"Carbon chemistry","title":"Carbon dioxide","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Now that we know DIC, Alk, and ceH^+ we can return to the equation for total dissolved inorganic carbon to find the concentration of aqueous carbon dioxide","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"CO_2(aq) = fracDICceH^+^2ceH^+^2 + K_1ceH^+ + K_1K_2","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"from which we determine gas phase carbon dioxide concentration as","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"fCO_2 = fracCO_2(aq)K_0","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"in atmospheres.","category":"page"},{"location":"model_components/carbon-chemistry/#Carbonate-concentration-and-calcite-saturation","page":"Carbon chemistry","title":"Carbonate concentration and calcite saturation","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Similarly we can also diagnose the calcite concentration","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"CO_3^2- = fracDICK_1K_2ceH^+(ceH^+ + K_1)+K_1K_2","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"This concentration is important in the dissolution of calcium carbonate which reacts according to the equilibrium","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"ceCaCO_3(aq)ce= Ca^+ + CO_3^2-","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"which has an equilibrium constant","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K_SP = ceCa^2+ceCO_3^2-","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"The calcite saturation can then be defined as Omega=fracceCO_3^2-ceCO_3 saturation^2- which can be diagnosed as:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Omega = fracceCa^2+ceCO_3^2-K_SP","category":"page"},{"location":"model_components/carbon-chemistry/#Missing-pieces","page":"Carbon chemistry","title":"Missing pieces","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"In most cases the chemistry described above requires information about more elements that is usually available. This means that we must parameterise their concentrations, usually this results in the boron, sulfate, and fluoride concentrations being set as constant ratios of the salinity.  Usually these ratios are:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"beginalign\ntextB = frac000023210811fracS180655\ntextS = frac0149606 fracS180655\ntextF = frac0000067189984 fracS180655\nendalign","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"We use these ratios by default in the model (but they can be changed when calling the models functions described below). Additionally, silicate and phosphate concentrations are often unavailable (both in observations and models), so are by default set to zero and their alkalinity contribution assumed to be small.","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"The \"ionic strength\" must also be parameterised for some equilibrium constants and is usually assumed to be:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"Is = frac199241000 - 1005S","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"but these parameters are also variable in the model.","category":"page"},{"location":"model_components/carbon-chemistry/#Model-parameterisation","page":"Carbon chemistry","title":"Model parameterisation","text":"","category":"section"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"The chemical system described above has a large number of equilibrium constants, the constants are typically assumed to depend on the temperature, salinity, and pressure (hydrostatic pressure from depth underwater). [//]: # (This sentence is not currently actually true, but will be by the time of PR merge) By default, this model parameterises them based on the \"best practice\" guidelines of Dickson et al. (2007). These parameterisations are:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"using OceanBioME.Models.CarbonChemistryModel: K0, K1, K2, KB, KW, KS, KF, KP1, KP2, KP3, KSi, KSP_calcite, KSP_aragonite\nK0() # Weiss & Price (1980, Mar. Chem., 8, 347-359; Eq 13 with table 6 values)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K1() # Millero (1995, Geochim. Cosmochim. Acta, 59, 664)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K2() # Millero (1995, Geochim. Cosmochim. Acta, 59, 664)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KB() # Dickson (1990, Deep-Sea Res., 37, 755–766)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KW() # Millero (1995, Geochim. Cosmochim. Acta, 59, 661–677)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KS() # Dickson (1990, Chem. Thermodyn., 22, 113–127)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KF() # Dickson and Riley (1979, Mar. Chem., 7, 89–99)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KP1() # Millero (1995, Geochim. Cosmochim. Acta, 59, 661–677)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KP2() # Millero (1995, Geochim. Cosmochim. Acta, 59, 661–677)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KP3() # Millero (1995, Geochim. Cosmochim. Acta, 59, 661–677)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KSi() # Millero (1995, Geochim. Cosmochim. Acta, 59, 661–677)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KSP_calcite() # Millero, F. J. (2007, Chemical Reviews, 107(2), 308–341)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KSP_aragonite() # Millero, F. J. (2007, Chemical Reviews, 107(2), 308–341)","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"The pressure corrections from Millero, F. J. (2007, Chemical Reviews, 107(2), 308–341) are:","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K1().pressure_correction","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"K2().pressure_correction","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KB().pressure_correction","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KW().pressure_correction","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KS().pressure_correction","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KF().pressure_correction","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KP1().pressure_correction","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KP2().pressure_correction","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KP3().pressure_correction","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KSP_calcite().pressure_correction","category":"page"},{"location":"model_components/carbon-chemistry/","page":"Carbon chemistry","title":"Carbon chemistry","text":"KSP_aragonite().pressure_correction","category":"page"},{"location":"generated/SugarKelp_parameters/#SugarKelp-default-parameters","page":"SugarKelp","title":"SugarKelp default parameters","text":"","category":"section"},{"location":"generated/SugarKelp_parameters/","page":"SugarKelp","title":"SugarKelp","text":"Name Value\ntemperature_limit OceanBioME.Models.SugarKelpModel.LinearOptimalTemperatureRange{Float64}(10.0, 15.0, 0.0847457627118644, -0.25)\ngrowth_rate_adjustment 4.5\nphotosynthetic_efficiency 0.011527777777777776\nminimum_carbon_reserve 0.01\nstructural_carbon 0.2\nexudation 0.5\nerosion_exponent 0.22\nbase_erosion_rate 1.0e-6\nsaturation_irradiance 7.776\nstructural_dry_weight_per_area 0.5\nstructural_dry_to_wet_weight 0.0785\ncarbon_reserve_per_carbon 2.1213\nnitrogen_reserve_per_nitrogen 2.72\nminimum_nitrogen_reserve 0.0126\nmaximum_nitrogen_reserve 0.0216\ngrowth_adjustment_2 0.046799999999999994\ngrowth_adjustment_1 0.16919999999999996\nmaximum_specific_growth_rate 0.18\nstructural_nitrogen 0.0146\nphotosynthesis_at_ref_temp_1 0.02928\nphotosynthesis_at_ref_temp_2 0.0312\nphotosynthesis_ref_temp_1 285.0\nphotosynthesis_ref_temp_2 288.0\nphotoperiod_1 0.85\nphotoperiod_2 0.3\nrespiration_at_ref_temp_1 0.006684\nrespiration_at_ref_temp_2 0.0130296\nrespiration_ref_temp_1 285.0\nrespiration_ref_temp_2 290.0\nphotosynthesis_arrhenius_temp 1737.7267805628196\nphotosynthesis_low_temp 271.0\nphotosynthesis_high_temp 296.0\nphotosynthesis_high_arrhenius_temp 1414.87\nphotosynthesis_low_arrhenius_temp 4547.89\nrespiration_arrhenius_temp 11033.8920579234\ncurrent_speed_for_0p65_uptake 0.03\nnitrate_half_saturation 4.0\nammonia_half_saturation 1.3\nmaximum_nitrate_uptake 0.00672\nmaximum_ammonia_uptake 0.008064\ncurrent_1 0.72\ncurrent_2 0.28\ncurrent_3 0.045\nbase_activity_respiration_rate 0.002664\nbase_basal_respiration_rate 0.0013368\nexudation_redfield_ratio Inf\nadapted_latitude 57.5","category":"page"},{"location":"generated/column/#OneD_column","page":"Simple column model","title":"One-dimensional column example","text":"","category":"section"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"In this example we setup a simple 1D column with the LOBSTER biogeochemical model and observe its evolution. The example demonstrates:","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"How to setup OceanBioME's biogeochemical models\nHow to visualise results","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"This is forced by idealised mixing layer depth and surface photosynthetically available radiation (PAR) which are setup first.","category":"page"},{"location":"generated/column/#Install-dependencies","page":"Simple column model","title":"Install dependencies","text":"","category":"section"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"First we check we have the dependencies installed","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"using Pkg\npkg\"add OceanBioME, Oceananigans, CairoMakie\"","category":"page"},{"location":"generated/column/#Model-setup","page":"Simple column model","title":"Model setup","text":"","category":"section"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"We load the packages and choose the default LOBSTER parameter set","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"using OceanBioME, Oceananigans, Printf\nusing Oceananigans.Fields: FunctionField, ConstantField\nusing Oceananigans.Units\n\nconst year = years = 365days","category":"page"},{"location":"generated/column/#Surface-PAR-and-turbulent-vertical-diffusivity-based-on-idealised-mixed-layer-depth","page":"Simple column model","title":"Surface PAR and turbulent vertical diffusivity based on idealised mixed layer depth","text":"","category":"section"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"Setting up idealised functions for PAR and diffusivity (details here can be ignored but these are typical of the North Atlantic)","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"@inline PAR⁰(x, y, t) = 60 * (1 - cos((t + 15days) * 2π / year)) * (1 / (1 + 0.2 * exp(-((mod(t, year) - 200days) / 50days)^2))) + 2\n\n@inline H(t, t₀, t₁) = ifelse(t₀ < t < t₁, 1.0, 0.0)\n\n@inline fmld1(t) = H(t, 50days, year) * (1 / (1 + exp(-(t - 100days) / 5days))) * (1 / (1 + exp((t - 330days) / 25days)))\n\n@inline MLD(t) = - (10 + 340 * (1 - fmld1(year - eps(year)) * exp(-mod(t, year) / 25days) - fmld1(mod(t, year))))\n\n@inline κₜ(x, y, z, t) = 1e-2 * (1 + tanh((z - MLD(t)) / 10)) / 2 + 1e-4\n\n@inline temp(x, y, z, t) = 2.4 * cos(t * 2π / year + 50days) + 10","category":"page"},{"location":"generated/column/#Grid","page":"Simple column model","title":"Grid","text":"","category":"section"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"Define the grid.","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"grid = RectilinearGrid(size = (1, 1, 50), extent = (20meters, 20meters, 200meters))","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"1×1×50 RectilinearGrid{Float64, Oceananigans.Grids.Periodic, Oceananigans.Grids.Periodic, Oceananigans.Grids.Bounded} on Oceananigans.Architectures.CPU with 1×1×3 halo\n├── Periodic x ∈ [0.0, 20.0)   regularly spaced with Δx=20.0\n├── Periodic y ∈ [0.0, 20.0)   regularly spaced with Δy=20.0\n└── Bounded  z ∈ [-200.0, 0.0] regularly spaced with Δz=4.0","category":"page"},{"location":"generated/column/#Model","page":"Simple column model","title":"Model","text":"","category":"section"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"First we define the biogeochemical model including carbonate chemistry (for which we also define temperature (T) and salinity (S) fields) and scaling of negative tracers(see discussion in the positivity preservation) and then setup the Oceananigans model with the boundary condition for the DIC based on the air-sea CO₂ flux.","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"biogeochemistry = LOBSTER(; grid,\n                            surface_photosynthetically_active_radiation = PAR⁰,\n                            carbonates = true,\n                            scale_negatives = true)\n\nCO₂_flux = CarbonDioxideGasExchangeBoundaryCondition()\n\nclock = Clock(; time = 0.0)\nT = FunctionField{Center, Center, Center}(temp, grid; clock)\nS = ConstantField(35.0)\n\nmodel = NonhydrostaticModel(; grid,\n                              clock,\n                              closure = ScalarDiffusivity(ν = κₜ, κ = κₜ),\n                              biogeochemistry,\n                              boundary_conditions = (DIC = FieldBoundaryConditions(top = CO₂_flux), ),\n                              auxiliary_fields = (; T, S))\n\nset!(model, P = 0.03, Z = 0.03, NO₃ = 4.0, NH₄ = 0.05, DIC = 2239.8, Alk = 2409.0)","category":"page"},{"location":"generated/column/#Simulation","page":"Simple column model","title":"Simulation","text":"","category":"section"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"Next we setup a simulation and add some callbacks that:","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"Show the progress of the simulation\nStore the model and particles output","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"simulation = Simulation(model, Δt = 3minutes, stop_time = 100days)\n\nprogress_message(sim) = @printf(\"Iteration: %04d, time: %s, Δt: %s, wall time: %s\\n\",\n                                iteration(sim),\n                                prettytime(sim),\n                                prettytime(sim.Δt),\n                                prettytime(sim.run_wall_time))\n\nsimulation.callbacks[:progress] = Callback(progress_message, TimeInterval(10days))\n\nfilename = \"column\"\nsimulation.output_writers[:profiles] = JLD2Writer(model, model.tracers,\n                                                  filename = \"$filename.jld2\",\n                                                  schedule = TimeInterval(1day),\n                                                  overwrite_existing = true)","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"┌ Warning: Attempting to store typeof(Main.var\"##225\".κₜ).\n│ JLD2 only stores functions by name.\n│  This may not be useful for anonymous functions.\n└ @ JLD2 ~/.julia-oceananigans/packages/JLD2/WDhXU/src/data/writing_datatypes.jl:447\n","category":"page"},{"location":"generated/column/#Run!","page":"Simple column model","title":"Run!","text":"","category":"section"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"We are ready to run the simulation","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"run!(simulation)","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"[ Info: Initializing simulation...\nIteration: 0000, time: 0 seconds, Δt: 3 minutes, wall time: 0 seconds\n[ Info:     ... simulation initialization complete (18.070 seconds)\n[ Info: Executing initial time step...\n[ Info:     ... initial time step complete (13.600 seconds).\nIteration: 4800, time: 10 days, Δt: 3 minutes, wall time: 44.408 seconds\nIteration: 9600, time: 20 days, Δt: 3 minutes, wall time: 56.539 seconds\nIteration: 14400, time: 30 days, Δt: 3 minutes, wall time: 1.139 minutes\nIteration: 19200, time: 40 days, Δt: 3 minutes, wall time: 1.342 minutes\nIteration: 24000, time: 50 days, Δt: 3 minutes, wall time: 1.546 minutes\nIteration: 28800, time: 60 days, Δt: 3 minutes, wall time: 1.745 minutes\nIteration: 33600, time: 70 days, Δt: 3 minutes, wall time: 1.949 minutes\nIteration: 38400, time: 80 days, Δt: 3 minutes, wall time: 2.155 minutes\nIteration: 43200, time: 90 days, Δt: 3 minutes, wall time: 2.361 minutes\n[ Info: Simulation is stopping after running for 2.628 minutes.\n[ Info: Simulation time 100 days equals or exceeds stop time 100 days.\nIteration: 48000, time: 100 days, Δt: 3 minutes, wall time: 2.628 minutes\n","category":"page"},{"location":"generated/column/#Load-saved-output","page":"Simple column model","title":"Load saved output","text":"","category":"section"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"Now we can load the results and do some post processing to diagnose the air-sea CO₂ flux. Hopefully, this looks different to the example without kelp!","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"   P = FieldTimeSeries(\"$filename.jld2\", \"P\")\n NO₃ = FieldTimeSeries(\"$filename.jld2\", \"NO₃\")\n   Z = FieldTimeSeries(\"$filename.jld2\", \"Z\")\nsPOM = FieldTimeSeries(\"$filename.jld2\", \"sPOM\")\nbPOM = FieldTimeSeries(\"$filename.jld2\", \"bPOM\")\n DIC = FieldTimeSeries(\"$filename.jld2\", \"DIC\")\n Alk = FieldTimeSeries(\"$filename.jld2\", \"Alk\")\n\nx, y, z = nodes(P)\ntimes = P.times","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"We compute the  air-sea CO₂ flux at the surface (corresponding to vertical index k = grid.Nz) and the carbon export by computing how much carbon sinks below some arbirtrary depth; here we use depth that corresponds to k = grid.Nz - 20.","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"air_sea_CO₂_flux = zeros(length(times))\ncarbon_export = zeros(length(times))\n\nusing Oceananigans.Biogeochemistry: biogeochemical_drift_velocity\n\nfor (n, t) in enumerate(times)\n    clock.time = t\n\n    air_sea_CO₂_flux[n] = CO₂_flux.condition.func(1, 1, grid, clock, (; DIC = DIC[n], Alk = Alk[n], T, S))\n    carbon_export[n] = (sPOM[n][1, 1, grid.Nz-20] * biogeochemical_drift_velocity(model.biogeochemistry, Val(:sPOM)).w[1, 1, grid.Nz-20] +\n                        bPOM[n][1, 1, grid.Nz-20] * biogeochemical_drift_velocity(model.biogeochemistry, Val(:bPOM)).w[1, 1, grid.Nz-20]) * redfield(Val(:sPOM), model.biogeochemistry)\nend","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"Both air_sea_CO₂_flux and carbon_export are in units mmol CO₂ / (m² s).","category":"page"},{"location":"generated/column/#Plot","page":"Simple column model","title":"Plot","text":"","category":"section"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"Finally, we plot!","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"using CairoMakie\n\nfig = Figure(size = (1000, 1500), fontsize = 20)\n\naxis_kwargs = (xlabel = \"Time (days)\", ylabel = \"z (m)\", limits = ((0, times[end] / days), (-150meters, 0)))\n\naxP = Axis(fig[1, 1]; title = \"Phytoplankton concentration (mmol N / m³)\", axis_kwargs...)\nhmP = heatmap!(times / days, z, interior(P, 1, 1, :, :)', colormap = :batlow)\nColorbar(fig[1, 2], hmP)\n\naxNO₃ = Axis(fig[2, 1]; title = \"Nitrate concentration (mmol N / m³)\", axis_kwargs...)\nhmNO₃ = heatmap!(times / days, z, interior(NO₃, 1, 1, :, :)', colormap = :batlow)\nColorbar(fig[2, 2], hmNO₃)\n\naxZ = Axis(fig[3, 1]; title = \"Zooplankton concentration (mmol N / m³)\", axis_kwargs...)\nhmZ = heatmap!(times / days, z, interior(Z, 1, 1, :, :)', colormap = :batlow)\nColorbar(fig[3, 2], hmZ)\n\naxD = Axis(fig[4, 1]; title = \"Detritus concentration (mmol N / m³)\", axis_kwargs...)\nhmD = heatmap!(times / days, z, interior(sPOM, 1, 1, :, :)' .+ interior(bPOM, 1, 1, :, :)', colormap = :batlow)\nColorbar(fig[4, 2], hmD)\n\nCO₂_molar_mass = (12 + 2 * 16) * 1e-3 # kg / mol\n\naxfDIC = Axis(fig[5, 1], xlabel = \"Time (days)\", ylabel = \"Flux (kgCO₂/m²/year)\",\n                         title = \"Air-sea CO₂ flux and Sinking\", limits = ((0, times[end] / days), nothing))\nlines!(axfDIC, times / days, air_sea_CO₂_flux / 1e3 * CO₂_molar_mass * year, linewidth = 3, label = \"Air-sea flux\")\nlines!(axfDIC, times / days, carbon_export / 1e3    * CO₂_molar_mass * year, linewidth = 3, label = \"Sinking export\")\nLegend(fig[5, 2], axfDIC, framevisible = false)\n\nfig","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"<img width=1000 height=1500 style='object-fit: contain; height: auto;' src=\"data:image/png;base64, \"/>","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"","category":"page"},{"location":"generated/column/","page":"Simple column model","title":"Simple column model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/#LOBSTER","page":"LOBSTER","title":"The Lodyc-DAMTP Ocean Biogeochemical Simulation Tools for Ecosystem and Resources (LOBSTER) model","text":"","category":"section"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"LOBSTER is a medium complexity BGC model with seven core prognostic variables: phytoplankton, zooplankton, small and large detritus, nitrates, ammonia, and dissolved organic matter. LOBSTER was originally proposed by Lévy et al. (2005) and subsequently added to by Lévy et al. (2001), Resplandy et al. (2009), Karleskind et al. (2011), and Resplandy et al. (2012).","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"(Image: Diagram of LOBSTER formulation)","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"Additionally, this implementation of LOBSTER optionally models simple carbonate chemistry (DIC and Alkalinity), Oxygen, and variable redfield ratios for the now dissolved and particulate organic groups (which then allows carbon to be conserved). These are activated in the model setup, for example:","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"julia> using OceanBioME, Oceananigans\n\njulia> grid = RectilinearGrid(size=(3, 3, 30), extent=(10, 10, 200));\n\njulia> bgc_model = LOBSTER(; grid, carbonates = true)\nLOBSTER{Float64} with carbonates ✅, oxygen ❌, variable Redfield ratio ❌ and (:sPOM, :bPOM) sinking \n Light attenuation: Two-band light attenuation model (Float64)\n Sediment: Nothing\n Particles: Nothing\n Modifiers: Nothing","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/#Model-equations","page":"LOBSTER","title":"Model equations","text":"","category":"section"},{"location":"model_components/biogeochemical/LOBSTER/#Core-components","page":"LOBSTER","title":"Core components","text":"","category":"section"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"When no additional components are activated the tracers NO_3, NH_4, P, Z, sPOM, bPOM, and DOM evolve like:","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial Ppartial t = (1-gamma)mu_P L_PARleft(L_NO_3 + L_NH_4right)P - G_P - m_PP^2","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial Zpartial t = a_zleft(G_P + G_sPOMright) - m_ZZ^2 - mu_ZZ","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial NO_3partial t = -mu_PL_PARL_NO_3 + mu_nNH_4","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial NH_4partial t = -mu_PL_PARL_NH_4 - mu_nNH_4 \n     + alpha_Pgammamu_P L_PARleft(L_NO_3 + L_NH_4right)P\n     + alpha_Zmu_ZZ + alpha_dmu_sPOMsPOM + alpha_dmu_bPOMbPOM\n     + mu_DOMDOM","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial sPOMpartial t = f_sleft(1-a_Z)left(G_P + G_sPOMright) + m_PP^2 + m_ZZ^2right - G_sPOM - mu_sPOMsPOM - fracpartialpartial z(sPOM w_s)","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial bPOMpartial t = (1-f_s)left(1-a_Z)left(G_P + G_sPOMright) + m_PP^2 + m_ZZ^2right - mu_bPOMbPOM - fracpartialpartial z(bPOM w_b)","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial DOMpartial t = (1-alpha_P)gammamu_P L_PARleft(L_NO_3 + L_NH_4right)R_PP + (1-alpha_Z)mu_ZR_ZZ + (1-alpha_D)mu_sPOMsPOM + (1-alpha_D)mu_bPOMbPOM - mu_DOMDOM","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"Where:","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"L_PAR = 1 - e^-PARk_PAR","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"L_NO_3 = fracNO_3NO_3 + k_NO_3e^-psi NH_4","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"L_NH_4 = fracNH_4NH_4 + k_NH_4","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"G_P = g_zfractildepPk_z + tildepP + (1-tildep)sPOMZ","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"G_sPOM = g_zfrac(1-tildep)sPOMk_z + tildepP + (1-tildep)sPOMZ","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"Additionally, the sPOM and bPOM detritus components sink with constant sinking speed.","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/#Carbonate-chemistry","page":"LOBSTER","title":"Carbonate chemistry","text":"","category":"section"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"When the carbonate chemistry is activated additional tracers DIC and Alk evolve like:","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial DICpartial t = alpha_Pgammamu_P L_PARleft(L_NO_3 + L_NH_4right)R_PP + alpha_Zmu_ZZR_Z + alpha_Dmu_sPOMR_OsPOM\n+ alpha_Dmu_bPOMR_ObPOM + mu_DOMR_ODOM - mu_P L_PARleft(L_NO_3 + L_NH_4right) R_P (1 + rho_CaCO_3(1 - gamma))P\n+ G_Peta R_Prho_CaCO_3","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial Alkpartial t = mu_P L_PARL_NO_3P - 2rho_CaCO_3mu_P L_PARleft(L_NO_3 + L_NH_4right)R_PP","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/#Oxygen-chemistry","page":"LOBSTER","title":"Oxygen chemistry","text":"","category":"section"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"When the oxygen chemistry is activated, additional tracer O_2 evolve like:","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial O_2partial t = mu_P L_PARleft(L_NO_3 + L_NH_4right)R_O_2P - (R_O_2 - R_nit)fracpartial NH_4partial t - R_O_2mu_nNH_4","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/#Variable-Redfield","page":"LOBSTER","title":"Variable Redfield","text":"","category":"section"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"When the variable Redfield modification is activated the organic components are modified to evolve their nitrogen and carbon content separately. This means that the waste from non-Redfield models (e.g. loss from the kelp) can be accounted for.","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"In this case the organic components are split into nitrogen and carbon compartments, so the tracers sPOM, bPOM, and DOM are replaced with sPON, sPOC, bPON, bPOC, DON, and DOC. The nitrogen compartments evolve as per the organic matter equations above (i.e. replacing each XOM with XON), while the carbon compartments evolve like:","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial sPOCpartial t = f_sleft(1-a_Z)left(G_P + G_sPOMright)R_Z + m_PP^2 + m_ZR_ZZ^2right - G_sPONR_Z - mu_sPOMsPOC - fracpartialpartial z(sPOC w_s)","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial bPOCpartial t = (1-f_s)left(1-a_Z)left(G_P + G_sPOMright)R_Z + m_PR_PP^2 + m_ZR_ZZ^2right + (G_P(1 - eta) + m_PP^2)R_Prho_CaCO_3 - mu_bPOMbPOC - fracpartialpartial z(bPOC w_b)","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"fracpartial DOCpartial t = (1-alpha_P)gammamu_P L_PARleft(L_NO_3 + L_NH_4right)R_PP + (1-alpha_Z)mu_ZR_ZZ + (1-alpha_D)mu_sPOMsPOC + (1-alpha_D)mu_bPOMbPOC - mu_DOMDOC","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"Additionally, the DIC and Alk equations are modified to replace each XOM cdot R_O with the corresponding XOC.","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/#Parameter-variable-names","page":"LOBSTER","title":"Parameter variable names","text":"","category":"section"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"Symbol Variable name Units\ntildep phytoplankton_preference -\ng_z maximum_grazing_rate 1 / s\nk_z grazing_half_saturation mmol N / m³\nk_PAR light_half_saturation W / m²\npsi nitrate_ammonia_inhibition -\nk_NO_3 nitrate_half_saturation mmol N / m³\nk_NH_4 ammonia_half_saturation mmol N / m³\nmu_P maximum_phytoplankton_growthrate 1 / s\na_z zooplankton_assimilation_fraction -\nm_Z zooplankton_mortality 1 / s / mmol N/m³\nmu_z zooplankton_excretion_rate 1 / s\nm_P phytoplankton_mortality 1 / s\nmu_sPOM small_detritus_remineralisation_rate 1 / s\nmu_bPOM large_detritus_remineralisation_rate 1 / s\ngamma phytoplankton_exudation_fraction -\nmu_n nitrification_rate 1 / 2\nalpha_P ammonia_fraction_of_exudate -\nalpha_Z ammonia_fraction_of_excriment -\nalpha_d ammonia_fraction_of_detritus -\nR_P phytoplankton_redfield mmol C / mmol N\nR_O organic_redfield mmol C / mmol N\nR_ChlN phytoplankton_chlorophyll_ratio mg Chl / mmol N\nrho_CaCO_3 organic_carbon_calcate_ratio mmol CaCO₃/ mmol C\nR_O_2 respiration_oxygen_nitrogen_ratio mmol O / mmol N\nR_nit nitrification_oxygen_nitrogen_ratio mmol O / mmol N\nf_s slow_sinking_mortality_fraction -\nmu_DOM dissolved_organic_breakdown_rate 1 / s\neta zooplankton_calcite_dissolution -","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"All default parameter values are given in Parameters; and a more thorough explanation of new terms will be included in a publication that is in prep.","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/#Model-conservations","page":"LOBSTER","title":"Model conservations","text":"","category":"section"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"In the core configuration nitrogen is conserved in the evolution of the equations (excluding external sources and sinking), i.e.,","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"partial_t NO_3 + partial_t NH_4 + partial_t P + partial_t Z + partial_t sPOM + partial_t bPOM + partial_t DOM = 0 ","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"When the carbonate chemistry component is activated carbon is also conserved, i.e.,","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"R(partial_t P + partial_t Z + partial_t sPOM + partial_t bPOM + partial_t DOM) + partial_t DIC = 0 ","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"Trivially, this is also the case when the variable Redfield component is also activated, i.e.,","category":"page"},{"location":"model_components/biogeochemical/LOBSTER/","page":"LOBSTER","title":"LOBSTER","text":"R(partial_t P + partial_t Z) + partial_t sPOC + partial_t bPOC + partial_t DOC + partial_t DIC = 0","category":"page"},{"location":"generated/kelp/#Simple-active-particle-example","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Simple active particle example","text":"","category":"section"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"Here, we setup a simple 1D column example with the LOBSTER biogeochemical model and active particles modelling the growth of sugar kelp. This example demonstrates:","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"How to setup OceanBioME's biogeochemical models\nHow to add biologically active particles which interact with the biodeochemical model\nHow to visualise results","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"This is forced by idealised mixing layer depth and surface photosynthetically available radiation (PAR) which are setup first.","category":"page"},{"location":"generated/kelp/#Install-dependencies","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Install dependencies","text":"","category":"section"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"First we check we have the dependencies installed","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"using Pkg\npkg \"add OceanBioME, Oceananigans, CairoMakie, JLD2\"","category":"page"},{"location":"generated/kelp/#Model-setup","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model setup","text":"","category":"section"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"First load the required packages","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"using OceanBioME, Oceananigans, Printf\nusing Oceananigans.Fields: FunctionField, ConstantField\nusing Oceananigans.Units\nusing Oceananigans.Architectures: on_architecture\n\nconst year = years = 365days # just for these idealised cases","category":"page"},{"location":"generated/kelp/#Surface-PAR-and-turbulent-vertical-diffusivity-based-on-idealised-mixed-layer-depth","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Surface PAR and turbulent vertical diffusivity based on idealised mixed layer depth","text":"","category":"section"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"Setting up idealised functions for PAR and diffusivity (details here can be ignored but these are typical of the North Atlantic).","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"@inline PAR⁰(x, y, t) = 60 * (1 - cos((t + 15days) * 2π / year)) * (1 / (1 + 0.2 * exp(-((mod(t, year) - 200days) / 50days)^2))) + 2\n\n@inline H(t, t₀, t₁) = ifelse(t₀ < t < t₁, 1.0, 0.0)\n\n@inline fmld1(t) = H(t, 50days, year) * (1 / (1 + exp(-(t - 100days) / 5days))) * (1 / (1 + exp((t - 330days) / 25days)))\n\n@inline MLD(t) = - (10 + 340 * (1 - fmld1(year - eps(year)) * exp(-mod(t, year) / 25days) - fmld1(mod(t, year))))\n\n@inline κₜ(x, y, z, t) = 1e-2 * (1 + tanh((z - MLD(t))/10)) / 2 + 1e-4\n\n@inline temp(x, y, z, t) = 2.4 * cos(t * 2π / year + 50day) + 10\n\narchitecture = CPU()","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"Oceananigans.Architectures.CPU()","category":"page"},{"location":"generated/kelp/#Grid-and-PAR-field","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Grid and PAR field","text":"","category":"section"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"Define the grid and an extra Oceananigans' field that the PAR will be stored in","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"Lx, Ly = 20meters, 20meters\ngrid = RectilinearGrid(architecture, size=(1, 1, 50), extent=(Lx, Ly, 200))","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"1×1×50 RectilinearGrid{Float64, Oceananigans.Grids.Periodic, Oceananigans.Grids.Periodic, Oceananigans.Grids.Bounded} on Oceananigans.Architectures.CPU with 1×1×3 halo\n├── Periodic x ∈ [0.0, 20.0)   regularly spaced with Δx=20.0\n├── Periodic y ∈ [0.0, 20.0)   regularly spaced with Δy=20.0\n└── Bounded  z ∈ [-200.0, 0.0] regularly spaced with Δz=4.0","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"Specify the boundary conditions for DIC and O₂ based on the air-sea CO₂ and O₂ flux","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"CO₂_flux = CarbonDioxideGasExchangeBoundaryCondition()\n\nclock = Clock(; time = 0.0)\nT = FunctionField{Center, Center, Center}(temp, grid; clock)\nS = ConstantField(35.0)","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"ConstantField(35.0)","category":"page"},{"location":"generated/kelp/#Kelp-Particle-setup","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Kelp Particle setup","text":"","category":"section"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"@info \"Setting up kelp particles\"\n\nn = 5 # number of kelp bundles\nz₀ = [-21:5:-1;] * 1.0 # depth of kelp fronds\n\nparticles = SugarKelpParticles(n; grid,\n                               advection = nothing, # we don't want them to move around\n                               scalefactors = fill(2000, n)) # and we want them to look like there are 500 in each bundle\n\nset!(particles, A = 10, N = 0.01, C = 0.1, z = z₀, x = Lx / 2, y = Ly / 2)","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"[ Info: Setting up kelp particles\n","category":"page"},{"location":"generated/kelp/#Setup-BGC-model","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Setup BGC model","text":"","category":"section"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"biogeochemistry = LOBSTER(; grid,\n                            surface_photosynthetically_active_radiation = PAR⁰,\n                            carbonates = true,\n                            variable_redfield = true,\n                            oxygen = true,\n                            scale_negatives = true,\n                            particles)\n\nmodel = NonhydrostaticModel(; grid,\n                              clock,\n                              closure = ScalarDiffusivity(ν = κₜ, κ = κₜ),\n                              biogeochemistry,\n                              auxiliary_fields = (; T, S))\n\nset!(model, P = 0.03, Z = 0.03, NO₃ = 4.0, NH₄ = 0.05, DIC = 2239.8, Alk = 2409.0)","category":"page"},{"location":"generated/kelp/#Simulation","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Simulation","text":"","category":"section"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"Next we setup the simulation along with some callbacks that:","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"Show the progress of the simulation\nStore the model and particles output\nPrevent the tracers from going negative from numerical error (see discussion of this in the positivity preservation implementation page)","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"simulation = Simulation(model, Δt = 4minutes, stop_time = 150days)\n\nprogress_message(sim) = @printf(\"Iteration: %04d, time: %s, Δt: %s, wall time: %s\\n\",\n                                iteration(sim),\n                                prettytime(sim),\n                                prettytime(sim.Δt),\n                                prettytime(sim.run_wall_time))\n\nsimulation.callbacks[:progress] = Callback(progress_message, TimeInterval(10days))\n\nfilename = \"kelp\"\nsimulation.output_writers[:profiles] = JLD2Writer(model, model.tracers,\n                                                  filename = \"$filename.jld2\",\n                                                  schedule = TimeInterval(1day),\n                                                  overwrite_existing = true)\n\nsimulation.output_writers[:particles] = JLD2Writer(model, (; particles),\n                                                   filename = \"$(filename)_particles.jld2\",\n                                                   schedule = TimeInterval(1day),\n                                                   overwrite_existing = true)\n","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"┌ Warning: Attempting to store typeof(Main.var\"##225\".κₜ).\n│ JLD2 only stores functions by name.\n│  This may not be useful for anonymous functions.\n└ @ JLD2 ~/.julia-oceananigans/packages/JLD2/WDhXU/src/data/writing_datatypes.jl:447\n┌ Warning: Attempting to store typeof(Main.var\"##225\".κₜ).\n│ JLD2 only stores functions by name.\n│  This may not be useful for anonymous functions.\n└ @ JLD2 ~/.julia-oceananigans/packages/JLD2/WDhXU/src/data/writing_datatypes.jl:447\n┌ Warning: Attempting to store typeof(Main.var\"##225\".κₜ).\n│ JLD2 only stores functions by name.\n│  This may not be useful for anonymous functions.\n└ @ JLD2 ~/.julia-oceananigans/packages/JLD2/WDhXU/src/data/writing_datatypes.jl:447\n┌ Warning: Attempting to store typeof(Main.var\"##225\".κₜ).\n│ JLD2 only stores functions by name.\n│  This may not be useful for anonymous functions.\n└ @ JLD2 ~/.julia-oceananigans/packages/JLD2/WDhXU/src/data/writing_datatypes.jl:447\n┌ Warning: Attempting to store typeof(Main.var\"##225\".κₜ).\n│ JLD2 only stores functions by name.\n│  This may not be useful for anonymous functions.\n└ @ JLD2 ~/.julia-oceananigans/packages/JLD2/WDhXU/src/data/writing_datatypes.jl:447\n┌ Warning: Attempting to store typeof(Main.var\"##225\".κₜ).\n│ JLD2 only stores functions by name.\n│  This may not be useful for anonymous functions.\n└ @ JLD2 ~/.julia-oceananigans/packages/JLD2/WDhXU/src/data/writing_datatypes.jl:447\n","category":"page"},{"location":"generated/kelp/#Run!","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Run!","text":"","category":"section"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"Finally we run the simulation","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"run!(simulation)","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"[ Info: Initializing simulation...\nIteration: 0000, time: 0 seconds, Δt: 4 minutes, wall time: 0 seconds\n[ Info:     ... simulation initialization complete (1.083 minutes)\n[ Info: Executing initial time step...\n[ Info:     ... initial time step complete (20.909 seconds).\nIteration: 3600, time: 10 days, Δt: 4 minutes, wall time: 1.739 minutes\nIteration: 7200, time: 20 days, Δt: 4 minutes, wall time: 2.039 minutes\nIteration: 10800, time: 30 days, Δt: 4 minutes, wall time: 2.303 minutes\nIteration: 14400, time: 40 days, Δt: 4 minutes, wall time: 2.579 minutes\nIteration: 18000, time: 50 days, Δt: 4 minutes, wall time: 2.840 minutes\nIteration: 21600, time: 60 days, Δt: 4 minutes, wall time: 3.120 minutes\nIteration: 25200, time: 70 days, Δt: 4 minutes, wall time: 3.336 minutes\nIteration: 28800, time: 80 days, Δt: 4 minutes, wall time: 3.554 minutes\nIteration: 32400, time: 90 days, Δt: 4 minutes, wall time: 3.768 minutes\nIteration: 36000, time: 100 days, Δt: 4 minutes, wall time: 3.987 minutes\nIteration: 39600, time: 110 days, Δt: 4 minutes, wall time: 4.210 minutes\nIteration: 43200, time: 120 days, Δt: 4 minutes, wall time: 4.433 minutes\nIteration: 46800, time: 130 days, Δt: 4 minutes, wall time: 4.652 minutes\nIteration: 50400, time: 140 days, Δt: 4 minutes, wall time: 4.875 minutes\n[ Info: Simulation is stopping after running for 5.098 minutes.\n[ Info: Simulation time 150 days equals or exceeds stop time 150 days.\nIteration: 54000, time: 150 days, Δt: 4 minutes, wall time: 5.098 minutes\n","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"Now we can visualise the results with some post processing to diagnose the air-sea CO₂ flux - hopefully this looks different to the example without kelp!","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"tracers = FieldDataset(\"$filename.jld2\")\n\nx, y, z = nodes(tracers[\"P\"])\ntimes = tracers[\"P\"].times","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"We compute the  air-sea CO₂ flux at the surface (corresponding to vertical index k = grid.Nz) and the carbon export by computing how much carbon sinks below some arbirtrary depth; here we use depth that corresponds to k = grid.Nz - 20.","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"air_sea_CO₂_flux = zeros(length(times))\ncarbon_export = zeros(length(times))\n\nusing Oceananigans.Biogeochemistry: biogeochemical_drift_velocity\n\nfor (n, t) in enumerate(times)\n    clock.time = t\n\n    air_sea_CO₂_flux[n] = CO₂_flux.condition.func(1, 1, grid, clock, (; DIC = tracers[\"DIC\"][n], Alk = tracers[\"Alk\"][n], T, S))\n\n    carbon_export[n] = tracers[\"sPOC\"][n][1, 1, grid.Nz-20] * biogeochemical_drift_velocity(biogeochemistry, Val(:sPOC)).w[1, 1, grid.Nz-20] +\n                       tracers[\"bPOC\"][n][1, 1, grid.Nz-20] * biogeochemical_drift_velocity(biogeochemistry, Val(:bPOC)).w[1, 1, grid.Nz-20]\nend","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"Both air_sea_CO₂_flux and carbon_export are in units mmol CO₂ / (m² s).","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"using CairoMakie\n\nfig = Figure(size = (1000, 900), fontsize = 20)\n\naxis_kwargs = (xlabel = \"Time (days)\", ylabel = \"z (m)\", limits = ((0, times[end] / days), (-85meters, 0)))\n\naxP = Axis(fig[1, 1]; title = \"Phytoplankton concentration (mmol N/m³)\", axis_kwargs...)\nhmP = heatmap!(times / days, z, interior(tracers[\"P\"], 1, 1, :, :)', colormap = :batlow)\nColorbar(fig[1, 2], hmP)\n\naxNO₃ = Axis(fig[2, 1]; title = \"Nitrate concentration (mmol N/m³)\", axis_kwargs...)\nhmNO₃ = heatmap!(times / days, z, interior(tracers[\"NO₃\"], 1, 1, :, :)', colormap = :batlow)\nColorbar(fig[2, 2], hmNO₃)\n\naxD = Axis(fig[3, 1]; title = \"Detritus concentration (mmol C/m³)\", axis_kwargs...)\nhmD = heatmap!(times / days, z, interior(tracers[\"sPOC\"], 1, 1, :, :)' .+ interior(tracers[\"bPOC\"], 1, 1, :, :)', colormap = :batlow)\nColorbar(fig[3, 2], hmD)\n\nCO₂_molar_mass = (12 + 2 * 16) * 1e-3 # kg / mol\n\naxfDIC = Axis(fig[4, 1], xlabel = \"Time (days)\", ylabel = \"Flux (kgCO₂/m²/year)\",\n                         title = \"Air-sea CO₂ flux and Sinking\", limits = ((0, times[end] / days), nothing))\nlines!(axfDIC, times / days, air_sea_CO₂_flux / 1e3 * CO₂_molar_mass * year, linewidth = 3, label = \"Air-sea flux\")\nlines!(axfDIC, times / days, carbon_export / 1e3    * CO₂_molar_mass * year, linewidth = 3, label = \"Sinking export\")\nLegend(fig[4, 2], axfDIC, framevisible = false)\n\nsave(\"kelp.png\", fig)","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"CairoMakie.Screen{IMAGE}\n","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"(Image: )","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"We can also have a look at how the kelp particles evolve","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"using JLD2\n\nfile = jldopen(\"$(filename)_particles.jld2\")\n\niterations = keys(file[\"timeseries/t\"])\n\nA, N, C = ntuple(n -> zeros(5, length(iterations)), 3)\n\ntimes = zeros(length(iterations))\n\nfor (i, iter) in enumerate(iterations)\n    particles_values = file[\"timeseries/particles/$iter\"]\n    A[:, i] = particles_values.A\n    N[:, i] = particles_values.N\n    C[:, i] = particles_values.C\n\n    times[i] = file[\"timeseries/t/$iter\"]\nend\n\nNₛ = particles.biogeochemistry.structural_nitrogen\nCₛ = particles.biogeochemistry.structural_carbon\nkₐ = particles.biogeochemistry.structural_dry_weight_per_area\nsf = particles.scalefactors[1]\n\nfig = Figure(size = (1000, 800), fontsize = 20)\n\naxis_kwargs = (xlabel = \"Time (days)\", limits = ((0, times[end] / days), nothing))\n\nax1 = Axis(fig[1, 1]; ylabel = \"Frond area (dm²)\", axis_kwargs...)\n[lines!(ax1, times / day, A[n, :], linewidth = 3) for n in 1:5]\n\nax2 = Axis(fig[2, 1]; ylabel = \"Total Nitrogen (gN)\", axis_kwargs...)\n[lines!(ax2, times / day, (@. A * (N + Nₛ) * kₐ * sf)[n, :], linewidth = 3) for n in 1:5]\n\nax3 = Axis(fig[3, 1]; ylabel = \"Total Carbon (kgCO₂(eq))\", axis_kwargs...)\n[lines!(ax3, times / day, (@. A * (C + Cₛ) * kₐ * sf)[n, :] / 1000 * 44 / 12, linewidth = 3) for n in 1:5]\n\nfig","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"<img width=1000 height=800 style='object-fit: contain; height: auto;' src=\"data:image/png;base64, \"/>","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"","category":"page"},{"location":"generated/kelp/","page":"Model with particles (kelp) interacting with the biogeochemistry","title":"Model with particles (kelp) interacting with the biogeochemistry","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/CarbonChemistry_parameters/#CarbonChemistry-default-parameters","page":"CarbonChemistry","title":"CarbonChemistry default parameters","text":"","category":"section"},{"location":"generated/CarbonChemistry_parameters/","page":"CarbonChemistry","title":"CarbonChemistry","text":"Name Value\nionic_strength Ionic strength\nIs = 19.924 S/(1000.0 + -1.005 S) \nsolubility Solubility constant\nln(k₀/k°) = -60.2409 + 9345.17 / T + 23.3585 (log(T) - log(100)) + 0.0 T² + (0.023517 + -0.00023656 T + 4.7036e-7 T²)S \ncarbonic_acid (K1 = First carbon dioxide dissociation constant","category":"page"},{"location":"generated/CarbonChemistry_parameters/","page":"CarbonChemistry","title":"CarbonChemistry","text":"log₁₀(k₁/k°) = 61.2172 + -3633.86 / T + -9.6777 log(T) + 0.011555 S + -0.0001152 S², K2 = Second carbon dioxide dissociation constant\nlog₁₀(k₂/k°) = -25.929 + -471.78 / T + 3.16967 log(T) + 0.01781 S + -0.0001122 S²)|","category":"page"},{"location":"generated/CarbonChemistry_parameters/","page":"CarbonChemistry","title":"CarbonChemistry","text":"|boric_acid|Boric acid dissociation constant     ln(kᵇ/k°) = 148.0248 + (-8966.9 + -2890.53 √S + -77.942 S + 1.728 √S³ + -0.0996 S²) / T                 + 137.1942 * √S                 + 1.62142 * S                 + (-24.4344 + -25.085 √S + -0.2474 S ) * log(T)                 + 0.053105 * √S * T| |water|Water dissociation constant     ln(kʷ/k°) = 148.9652                 + -13847.26 / T                 + -23.6521 log(T)                 + (-5.977 + 118.67 / T + 1.0495 log(T)) √S                 + -0.01615 * S| |sulfate|Bisulfate dissociation constant     ln(kˢ/k°) = 141.328                 + -4276.1 / T                 + -23.093 log(T)                 + (324.57 + -13856.0 / T + -47.986 log(T)) √Is                 + (-771.54 + 35474.0 / T + 114.723 log(T)) Is                 + -2698.0 √Is³ / T                 + 1776.0 Is² / T                 + log(1 + -0.001005 S)| |fluoride|Hydrogen fluoride dissociation constant     ln(kᶠ/k°) = -9.68                 + 874.0 / T                 + 0.111 √S                 + log(1 + 0.0 S)                 + log(1 + 0.0 S / Kˢ)| |phosphoric_acid|(KP1 = Phosphate dissociation constant     ln(kᵖⁿ/k°) = 115.525                 + -4576.752 / T                 + -18.453 log(T)                 + (0.69171 + -106.736 / T) √S                 + (-0.01844 + -0.65643 / T) S, KP2 = Phosphate dissociation constant     ln(kᵖⁿ/k°) = 172.0883                 + -8814.715 / T                 + -27.927 log(T)                 + (1.3566 + -160.34 / T) √S                 + (-0.05778 + 0.37335 / T) S, KP3 = Phosphate dissociation constant     ln(kᵖⁿ/k°) = -18.141                 + -3070.75 / T                 + 0.0 log(T)                 + (2.81197 + 17.27039 / T) √S                 + (-0.09984 + -44.99486 / T) S)| |silicic_acid|Silicic acid constant     ln(kˢⁱ/k°) = 117.385                 + -8904.2 / T                 + -19.334 log(T)                 + (3.5913 + -458.79 / T) √Is                 + (-1.5998 + 188.74 / T) Is                 + (0.07871 + -12.1652 / T) Is²                 + log(1 + -0.001005 S)| |calcite_solubility|Calcite solubility     ln(kₛₚ) = -171.9065 + -0.077993 T + 2839.319 / T + 71.595 log(T)     ln(kₛₚˢ) = ln(kₛₚ) + (-0.77712 + 0.0028426 T + 178.34 / T) √S                 + -0.07711 S + 0.0041249 √S³| |density_function|teos10polynomialapproximation|","category":"page"},{"location":"numerical_implementation/positivity-preservation/#pos-preservation","page":"Positivity preservation","title":"Positivity Preservation","text":"","category":"section"},{"location":"numerical_implementation/positivity-preservation/","page":"Positivity preservation","title":"Positivity preservation","text":"It is common in BGC models to behave badly if any tracers go bellow zero, analytically this is fine because they (usually) can not get below zero, and it is unphysical for the concentration of something to be negative. Issues arise when the inaccuracy in numerical integration making some tracer become negative, usually leading to explosions (e.g. exp(-C) to inf), or bounds errors (e.g. log(C)). Essentially this occurs when the local error in the numerical scheme is sufficiently large that more than the available amount of tracer is consumed.","category":"page"},{"location":"numerical_implementation/positivity-preservation/","page":"Positivity preservation","title":"Positivity preservation","text":"There exists a set of numerical schemes which overcome this and guarantee positivity (provided a positivity preserving advection scheme and well-behaved diffusion scheme are used) but are complex to implement. Although we may do this in the future we have not yet done so in the meantime have provided some utilities which maintain positivity. The simplest option is to reset any negative tracers to zero, but this causes the model to gain mass. A slightly more complex version is to increase negative tracers to zero and remove the difference from other tracers with in the same conserved system.","category":"page"},{"location":"numerical_implementation/positivity-preservation/","page":"Positivity preservation","title":"Positivity preservation","text":"We have found this to be a satisfactory solution (when balanced against using much smaller time steps), as it tends to cause only a small and local transient change to the solution.","category":"page"},{"location":"numerical_implementation/positivity-preservation/","page":"Positivity preservation","title":"Positivity preservation","text":"See model components page for usage.","category":"page"},{"location":"generated/box/#box_example","page":"Box model","title":"Box model","text":"","category":"section"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"In this example we setup a LOBSTER biogeochemical model in a single box configuration. This example demonstrates:","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"How to setup OceanBioME's biogeochemical models as a stand-alone box model","category":"page"},{"location":"generated/box/#Install-dependencies","page":"Box model","title":"Install dependencies","text":"","category":"section"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"First we check we have the dependencies installed","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"using Pkg\npkg\"add OceanBioME\"","category":"page"},{"location":"generated/box/#Model-setup","page":"Box model","title":"Model setup","text":"","category":"section"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"Load the packages and setup the initial and forcing conditions","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"using OceanBioME, Oceananigans, Oceananigans.Units\nusing Oceananigans.Fields: FunctionField\n\nconst year = years = 365day\n\ngrid = BoxModelGrid()\nclock = Clock(time = zero(grid))\n","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"This is forced by a prescribed time-dependent photosynthetically available radiation (PAR)","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"PAR⁰(t) = 60 * (1 - cos((t + 15days) * 2π / year)) * (1 / (1 + 0.2 * exp(-((mod(t, year) - 200days) / 50days)^2))) + 2\n\nconst z = -10 # specify the nominal depth of the box for the PAR profile\nPAR_func(t) = PAR⁰(t) * exp(0.2z) # Modify the PAR based on the nominal depth and exponential decay\n\nPAR = FunctionField{Center, Center, Center}(PAR_func, grid; clock)","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"Set up the model. Here, first specify the biogeochemical model, followed by initial conditions and the start and end times","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"model = BoxModel(; biogeochemistry = LOBSTER(; grid, light_attenuation_model = PrescribedPhotosyntheticallyActiveRadiation(PAR)),\n                   clock)\n\nset!(model, NO₃ = 10.0, NH₄ = 0.1, P = 0.1, Z = 0.01)\n\nsimulation = Simulation(model; Δt = 5minutes, stop_time = 5years)\n\nsimulation.output_writers[:fields] = JLD2Writer(model, model.fields; filename = \"box.jld2\", schedule = TimeInterval(10days), overwrite_existing = true)\n\nprog(sim) = @info \"$(prettytime(time(sim))) in $(prettytime(simulation.run_wall_time))\"\n\nsimulation.callbacks[:progress] = Callback(prog, IterationInterval(1000000))","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"Callback of prog on IterationInterval(1000000)","category":"page"},{"location":"generated/box/#Run-the-model-(should-only-take-a-few-seconds)","page":"Box model","title":"Run the model (should only take a few seconds)","text":"","category":"section"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"@info \"Running the model...\"\nrun!(simulation)","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"[ Info: Running the model...\n[ Info: Initializing simulation...\n[ Info: 0 seconds in 0 seconds\n[ Info:     ... simulation initialization complete (1.230 seconds)\n[ Info: Executing initial time step...\n[ Info:     ... initial time step complete (487.906 ms).\n[ Info: Simulation is stopping after running for 14.801 seconds.\n[ Info: Simulation time 1825 days equals or exceeds stop time 1825 days.\n","category":"page"},{"location":"generated/box/#Load-the-output","page":"Box model","title":"Load the output","text":"","category":"section"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"times = FieldTimeSeries(\"box.jld2\", \"P\").times\n\ntimeseries = NamedTuple{keys(model.fields)}(FieldTimeSeries(\"box.jld2\", \"$field\")[1, 1, 1, :] for field in keys(model.fields))","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"(NO₃ = [10.0, 10.014827728271484, 9.95897388458252, 9.803510665893555, 9.442779541015625, 8.662609100341797, 7.509425640106201, 6.28082275390625, 4.7296462059021, 2.6037657260894775, 0.49699243903160095, 0.02149912528693676, 0.0014896010980010033, 0.0005181109299883246, 0.0004041373322252184, 0.00037882782635279, 0.00038870100979693234, 0.0004274704842828214, 0.0004989264998584986, 0.000614366726949811, 0.000799674482550472, 0.0011245888890698552, 0.001842557336203754, 0.004405509680509567, 0.019116252660751343, 0.09178268164396286, 0.32754045724868774, 0.8143759965896606, 1.5426056385040283, 2.446213483810425, 3.442251205444336, 4.453429222106934, 5.4193501472473145, 6.299293041229248, 7.070689678192139, 7.725664138793945, 8.266854286193848, 8.703203201293945, 9.045788764953613, 9.301924705505371, 9.45376205444336, 9.216421127319336, 7.959939002990723, 5.998084545135498, 4.28953218460083, 2.4428603649139404, 0.5708245635032654, 0.030698133632540703, 0.002071954309940338, 0.0006018210551701486, 0.0004324908077251166, 0.0003859775315504521, 0.0003806492895819247, 0.000404708698624745, 0.0004587739531416446, 0.0005501210107468069, 0.0006956583238206804, 0.000936620868742466, 0.0013998926151543856, 0.002654946641996503, 0.008666991256177425, 0.04288213700056076, 0.1816270649433136, 0.5381699800491333, 1.151710033416748, 1.9775946140289307, 2.9378275871276855, 3.950180768966675, 4.945048809051514, 5.871870517730713, 6.6993489265441895, 7.412761211395264, 8.01002311706543, 8.497440338134766, 8.885568618774414, 9.18465805053711, 9.3948392868042, 9.444413185119629, 8.720569610595703, 6.983459949493408, 5.122056007385254, 3.4110658168792725, 1.42829430103302, 0.14268764853477478, 0.007129342760890722, 0.0009154630824923515, 0.0004874455335084349, 0.0004022857756353915, 0.00037936310400255024, 0.00038913197931833565, 0.00042769438005052507, 0.0004990406450815499, 0.0006144299986772239, 0.0007997139473445714, 0.0011246178764849901, 0.001842585508711636, 0.00440555764362216, 0.019116384908556938, 0.09178299456834793, 0.3275409936904907, 0.8143766522407532, 1.5426063537597656, 2.446214199066162, 3.4422519207000732, 4.453429698944092, 5.419350624084473, 6.299293518066406, 7.070690155029297, 7.725664138793945, 8.266855239868164, 8.703203201293945, 9.045788764953613, 9.301924705505371, 9.45376205444336, 9.216421127319336, 7.959939002990723, 5.998084545135498, 4.28953218460083, 2.4428603649139404, 0.5708246231079102, 0.030698135495185852, 0.002071954309940338, 0.0006018210551701486, 0.0004324908077251166, 0.0003859775315504521, 0.0003806492895819247, 0.000404708698624745, 0.0004587739531416446, 0.0005501210107468069, 0.0006956583238206804, 0.000936620868742466, 0.0013998926151543856, 0.002654946641996503, 0.008666991256177425, 0.04288213700056076, 0.1816270649433136, 0.5381699800491333, 1.151710033416748, 1.9775946140289307, 2.9378275871276855, 3.950180768966675, 4.945048809051514, 5.871870517730713, 6.6993489265441895, 7.412761211395264, 8.01002311706543, 8.497440338134766, 8.885568618774414, 9.18465805053711, 9.3948392868042, 9.444413185119629, 8.720569610595703, 6.983459949493408, 5.122056007385254, 3.4110658168792725, 1.42829430103302, 0.14268764853477478, 0.007129342760890722, 0.0009154630824923515, 0.0004874455335084349, 0.0004022857756353915, 0.00037936310400255024, 0.00038913197931833565, 0.00042769438005052507, 0.0004990406450815499, 0.0006144299986772239, 0.0007997139473445714, 0.0011246178764849901, 0.001842585508711636, 0.00440555764362216, 0.019116384908556938, 0.09178299456834793, 0.3275409936904907, 0.8143766522407532, 1.5426063537597656, 2.446214199066162, 3.4422519207000732, 4.453429698944092, 5.419350624084473, 6.299293518066406, 7.070690155029297, 7.725664138793945, 8.266855239868164], NH₄ = [0.10000000149011612, 0.04295828938484192, 0.00011986427125521004, 0.000110588975076098, 0.00011421810631873086, 0.00016773933020886034, 0.0003909073129761964, 0.0006881710141897202, 0.0007237876998260617, 0.0007002828060649335, 0.0009715622873045504, 0.0037522525526583195, 0.0044226860627532005, 0.0034332985524088144, 0.003073380095884204, 0.003004128346219659, 0.003119824919849634, 0.0034144080709666014, 0.003921955358237028, 0.0047225854359567165, 0.006003470625728369, 0.008297214284539223, 0.013672569766640663, 0.034302063286304474, 0.12991629540920258, 0.37993282079696655, 0.7782343029975891, 1.247438669204712, 1.659198522567749, 1.9245091676712036, 2.026623010635376, 1.9898605346679688, 1.852348804473877, 1.6526621580123901, 1.423944354057312, 1.1914905309677124, 0.9722262024879456, 0.7752810120582581, 0.6026427745819092, 0.44728726148605347, 0.27661237120628357, 0.00016003442578949034, 0.0001333428081125021, 0.0003633669693954289, 0.0008385949768126011, 0.0009364128927700222, 0.001168465823866427, 0.004090860020369291, 0.00512328976765275, 0.003748397808521986, 0.0032042916864156723, 0.003022753866389394, 0.003046091180294752, 0.003246117616072297, 0.0036392435431480408, 0.004278411157429218, 0.005283518694341183, 0.006960444618016481, 0.01030957791954279, 0.02012486569583416, 0.06635681539773941, 0.23405666649341583, 0.5636929869651794, 1.011699914932251, 1.4679362773895264, 1.812601923942566, 1.9950060844421387, 2.023333787918091, 1.9312058687210083, 1.7580385208129883, 1.5401538610458374, 1.3069335222244263, 1.0794669389724731, 0.8706732988357544, 0.6860883235931396, 0.523810625076294, 0.36835777759552, 0.14620672166347504, 0.00012419659469742328, 0.0001989951852010563, 0.0006177780451253057, 0.0009296899661421776, 0.0009630321874283254, 0.0020232186652719975, 0.0056090643629431725, 0.004302455112338066, 0.003410106524825096, 0.003083109622821212, 0.0030120103619992733, 0.003123758127912879, 0.0034162369556725025, 0.003922843374311924, 0.004723055753856897, 0.006003750022500753, 0.008297410793602467, 0.013672759756445885, 0.03430239111185074, 0.12991690635681152, 0.3799334168434143, 0.7782347202301025, 1.2474387884140015, 1.659198522567749, 1.924509048461914, 2.026622772216797, 1.9898604154586792, 1.8523485660552979, 1.6526620388031006, 1.423944115638733, 1.1914904117584229, 0.9722261428833008, 0.7752809524536133, 0.6026427149772644, 0.4472872018814087, 0.2766123414039612, 0.00016003442578949034, 0.0001333428081125021, 0.00036336699849925935, 0.000838595035020262, 0.0009364128927700222, 0.001168465823866427, 0.004090860020369291, 0.00512328976765275, 0.003748397808521986, 0.0032042916864156723, 0.003022753866389394, 0.003046091180294752, 0.003246117616072297, 0.0036392435431480408, 0.004278411157429218, 0.005283518694341183, 0.006960444618016481, 0.01030957791954279, 0.02012486569583416, 0.06635681539773941, 0.23405666649341583, 0.5636929869651794, 1.011699914932251, 1.4679362773895264, 1.812601923942566, 1.9950060844421387, 2.023333787918091, 1.9312058687210083, 1.7580385208129883, 1.5401538610458374, 1.3069335222244263, 1.0794669389724731, 0.8706732988357544, 0.6860883235931396, 0.523810625076294, 0.36835777759552, 0.14620672166347504, 0.00012419659469742328, 0.0001989951852010563, 0.0006177780451253057, 0.0009296899661421776, 0.0009630321874283254, 0.0020232186652719975, 0.0056090643629431725, 0.004302455112338066, 0.003410106524825096, 0.003083109622821212, 0.0030120103619992733, 0.003123758127912879, 0.0034162369556725025, 0.003922843374311924, 0.004723055753856897, 0.006003750022500753, 0.008297410793602467, 0.013672759756445885, 0.03430239111185074, 0.12991690635681152, 0.3799334168434143, 0.7782347202301025, 1.2474387884140015, 1.659198522567749, 1.924509048461914, 2.026622772216797, 1.9898604154586792, 1.8523485660552979, 1.6526620388031006, 1.423944115638733, 1.1914904117584229, 0.9722261428833008], P = [0.10000000149011612, 0.130426824092865, 0.20609140396118164, 0.3110711872577667, 0.5239167213439941, 0.781402051448822, 0.7339014410972595, 0.693625271320343, 0.8497739434242249, 1.075597882270813, 1.0472710132598877, 0.693520188331604, 0.6849914789199829, 0.7183013558387756, 0.7318313121795654, 0.7358121275901794, 0.7369656562805176, 0.7373128533363342, 0.7373827695846558, 0.7373169660568237, 0.7371252179145813, 0.7366747260093689, 0.7352574467658997, 0.7279763221740723, 0.6939691305160522, 0.6204712986946106, 0.5107722282409668, 0.38963356614112854, 0.2927771508693695, 0.22251692414283752, 0.16985300183296204, 0.12899188697338104, 0.0973038524389267, 0.0734545961022377, 0.056447770446538925, 0.045394010841846466, 0.03971261903643608, 0.039762094616889954, 0.04856622964143753, 0.07819723337888718, 0.18235249817371368, 0.6523274779319763, 1.2134788036346436, 1.0639389753341675, 0.8541514277458191, 0.9869958758354187, 1.0134963989257812, 0.7099952697753906, 0.6876881122589111, 0.7183602452278137, 0.7317607998847961, 0.7358072996139526, 0.7369864583015442, 0.7373450994491577, 0.737428605556488, 0.7373872399330139, 0.7372494339942932, 0.7369549870491028, 0.736195981502533, 0.7331582307815552, 0.7159920334815979, 0.6618388295173645, 0.5696972012519836, 0.448682963848114, 0.3374009132385254, 0.2549114227294922, 0.19444705545902252, 0.148159921169281, 0.11209917813539505, 0.08446429669857025, 0.06415459513664246, 0.05022508278489113, 0.04189293086528778, 0.038929592818021774, 0.04267220199108124, 0.059214942157268524, 0.11320219188928604, 0.3357701301574707, 0.9427752494812012, 1.2635836601257324, 0.8955761194229126, 0.9006602764129639, 1.0542821884155273, 0.8389922976493835, 0.6779425740242004, 0.7048365473747253, 0.7269001007080078, 0.7343969345092773, 0.7365683317184448, 0.7372186183929443, 0.7374076247215271, 0.7374199628829956, 0.7373315691947937, 0.7371309399604797, 0.7366769313812256, 0.7352582812309265, 0.7279765605926514, 0.6939691305160522, 0.6204712390899658, 0.5107722282409668, 0.38963356614112854, 0.2927771508693695, 0.22251692414283752, 0.16985300183296204, 0.12899190187454224, 0.0973038524389267, 0.0734545961022377, 0.056447770446538925, 0.045394010841846466, 0.03971261903643608, 0.039762094616889954, 0.04856622964143753, 0.07819723337888718, 0.18235251307487488, 0.6523274779319763, 1.2134788036346436, 1.0639389753341675, 0.8541514277458191, 0.9869958758354187, 1.0134963989257812, 0.7099952697753906, 0.6876881122589111, 0.7183602452278137, 0.7317607998847961, 0.7358072996139526, 0.7369864583015442, 0.7373450994491577, 0.737428605556488, 0.7373872399330139, 0.7372494339942932, 0.7369549870491028, 0.736195981502533, 0.7331582307815552, 0.7159920334815979, 0.6618388295173645, 0.5696972012519836, 0.448682963848114, 0.3374009132385254, 0.2549114227294922, 0.19444705545902252, 0.148159921169281, 0.11209917813539505, 0.08446429669857025, 0.06415459513664246, 0.05022508278489113, 0.04189293086528778, 0.038929592818021774, 0.04267220199108124, 0.059214942157268524, 0.11320219188928604, 0.3357701301574707, 0.9427752494812012, 1.2635836601257324, 0.8955761194229126, 0.9006602764129639, 1.0542821884155273, 0.8389922976493835, 0.6779425740242004, 0.7048365473747253, 0.7269001007080078, 0.7343969345092773, 0.7365683317184448, 0.7372186183929443, 0.7374076247215271, 0.7374199628829956, 0.7373315691947937, 0.7371309399604797, 0.7366769313812256, 0.7352582812309265, 0.7279765605926514, 0.6939691305160522, 0.6204712390899658, 0.5107722282409668, 0.38963356614112854, 0.2927771508693695, 0.22251692414283752, 0.16985300183296204, 0.12899190187454224, 0.0973038524389267, 0.0734545961022377, 0.056447770446538925, 0.045394010841846466, 0.03971261903643608], Z = [0.009999999776482582, 0.01036160159856081, 0.013349762186408043, 0.022914478555321693, 0.05925460532307625, 0.2215864509344101, 0.5632218718528748, 0.7326152324676514, 0.8514434695243835, 1.0254400968551636, 1.1385185718536377, 0.9785510897636414, 0.8516144752502441, 0.8390449285507202, 0.8513263463973999, 0.8599944114685059, 0.8638564944267273, 0.8653374910354614, 0.8658534288406372, 0.8659818768501282, 0.8659201860427856, 0.8656766414642334, 0.8649802803993225, 0.8620098829269409, 0.8465665578842163, 0.8009541630744934, 0.7169097661972046, 0.5979580283164978, 0.47117912769317627, 0.3594959080219269, 0.26838579773902893, 0.1961282193660736, 0.14010721445083618, 0.09793174266815186, 0.06724778562784195, 0.04567970708012581, 0.030999064445495605, 0.021328672766685486, 0.015278157778084278, 0.012102610431611538, 0.01261300127953291, 0.030619146302342415, 0.19939349591732025, 0.7825743556022644, 0.9584974646568298, 1.0127965211868286, 1.096345067024231, 0.9769718050956726, 0.8566009998321533, 0.8410231471061707, 0.8518320322036743, 0.8601090312004089, 0.8638952374458313, 0.8653673529624939, 0.8658894896507263, 0.8660331964492798, 0.8660032153129578, 0.8658403158187866, 0.8654317855834961, 0.8640806674957275, 0.8570666909217834, 0.8282279372215271, 0.7640365362167358, 0.6604833602905273, 0.5336382985115051, 0.41280949115753174, 0.31141963601112366, 0.23006920516490936, 0.16624127328395844, 0.11743456870317459, 0.08130263537168503, 0.05546963959932327, 0.03760595992207527, 0.025637075304985046, 0.017915893346071243, 0.013341499492526054, 0.01169651746749878, 0.01655091531574726, 0.0739053338766098, 0.47598394751548767, 0.9260565638542175, 0.9752743244171143, 1.064494013786316, 1.0633857250213623, 0.8993756175041199, 0.8415043950080872, 0.8460263609886169, 0.8566446304321289, 0.8624204397201538, 0.8648105263710022, 0.8656989336013794, 0.8659906983375549, 0.8660345673561096, 0.8659405708312988, 0.8656845092773438, 0.864983320236206, 0.8620110750198364, 0.846566915512085, 0.800954282283783, 0.7169097661972046, 0.597957968711853, 0.47117912769317627, 0.3594959080219269, 0.26838579773902893, 0.1961282193660736, 0.14010721445083618, 0.09793174266815186, 0.06724778562784195, 0.04567970708012581, 0.030999064445495605, 0.021328672766685486, 0.015278157778084278, 0.012102610431611538, 0.01261300127953291, 0.030619148164987564, 0.19939351081848145, 0.7825743556022644, 0.9584974050521851, 1.0127965211868286, 1.096345067024231, 0.9769718050956726, 0.8566009998321533, 0.8410231471061707, 0.8518320322036743, 0.8601090312004089, 0.8638952374458313, 0.8653673529624939, 0.8658894896507263, 0.8660331964492798, 0.8660032153129578, 0.8658403158187866, 0.8654317855834961, 0.8640806674957275, 0.8570666909217834, 0.8282279372215271, 0.7640365362167358, 0.6604833602905273, 0.5336382985115051, 0.41280949115753174, 0.31141963601112366, 0.23006920516490936, 0.16624127328395844, 0.11743456870317459, 0.08130263537168503, 0.05546963959932327, 0.03760595992207527, 0.025637075304985046, 0.017915893346071243, 0.013341499492526054, 0.01169651746749878, 0.01655091531574726, 0.0739053338766098, 0.47598394751548767, 0.9260565638542175, 0.9752743244171143, 1.064494013786316, 1.0633857250213623, 0.8993756175041199, 0.8415043950080872, 0.8460263609886169, 0.8566446304321289, 0.8624204397201538, 0.8648105263710022, 0.8656989336013794, 0.8659906983375549, 0.8660345673561096, 0.8659405708312988, 0.8656845092773438, 0.864983320236206, 0.8620110750198364, 0.846566915512085, 0.800954282283783, 0.7169097661972046, 0.597957968711853, 0.47117912769317627, 0.3594959080219269, 0.26838579773902893, 0.1961282193660736, 0.14010721445083618, 0.09793174266815186, 0.06724778562784195, 0.04567970708012581, 0.030999064445495605], sPOM = [0.0, 0.003573118709027767, 0.009635274298489094, 0.022307224571704865, 0.0590001717209816, 0.17683856189250946, 0.3791361153125763, 0.46619272232055664, 0.5694960951805115, 0.7631527781486511, 0.8850253820419312, 0.6406363844871521, 0.5343838930130005, 0.5363081693649292, 0.5497902035713196, 0.5571796298027039, 0.5601804256439209, 0.5612833499908447, 0.5616522431373596, 0.5617240071296692, 0.5616370439529419, 0.5613707304000854, 0.5606057643890381, 0.5572201609611511, 0.539900541305542, 0.4932370185852051, 0.41649436950683594, 0.32241830229759216, 0.23768512904644012, 0.17293454706668854, 0.1250392198562622, 0.08941566199064255, 0.06296256184577942, 0.04362374171614647, 0.029821671545505524, 0.020225632935762405, 0.013720390386879444, 0.00943384412676096, 0.006775324232876301, 0.005605016835033894, 0.007789107505232096, 0.0443393774330616, 0.25883346796035767, 0.6455707550048828, 0.6709123849868774, 0.7297868132591248, 0.8283772468566895, 0.6453545093536377, 0.5391706228256226, 0.5377135276794434, 0.5500903725624084, 0.5572451949119568, 0.5602094531059265, 0.5613113045692444, 0.5616881251335144, 0.5617759823799133, 0.5617226958274841, 0.5615440607070923, 0.5611026287078857, 0.5595915913581848, 0.5515667200088501, 0.520501971244812, 0.4583677649497986, 0.3698858916759491, 0.27768900990486145, 0.20288483798503876, 0.1471981555223465, 0.10592062771320343, 0.07518742978572845, 0.05250953882932663, 0.036118652671575546, 0.02457292005419731, 0.016647232696413994, 0.011343947611749172, 0.007924888283014297, 0.005979523994028568, 0.005911155138164759, 0.01479307934641838, 0.11755424737930298, 0.4696583151817322, 0.6847730875015259, 0.6813927292823792, 0.7964075207710266, 0.7614238858222961, 0.5696017742156982, 0.5334881544113159, 0.544272780418396, 0.5543724894523621, 0.5590761303901672, 0.5608985424041748, 0.5615530610084534, 0.5617549419403076, 0.5617635250091553, 0.5616523623466492, 0.5613766312599182, 0.5606080293655396, 0.557220995426178, 0.5399007797241211, 0.49323707818984985, 0.41649436950683594, 0.32241830229759216, 0.23768512904644012, 0.17293454706668854, 0.1250392198562622, 0.08941566199064255, 0.06296256184577942, 0.04362374171614647, 0.029821671545505524, 0.020225632935762405, 0.013720391318202019, 0.00943384412676096, 0.006775324232876301, 0.005605016835033894, 0.007789107970893383, 0.0443393811583519, 0.25883346796035767, 0.6455707550048828, 0.6709123849868774, 0.7297868132591248, 0.8283772468566895, 0.6453545093536377, 0.5391706228256226, 0.5377135276794434, 0.5500903725624084, 0.5572451949119568, 0.5602094531059265, 0.5613113045692444, 0.5616881251335144, 0.5617759823799133, 0.5617226958274841, 0.5615440607070923, 0.5611026287078857, 0.5595915913581848, 0.5515667200088501, 0.520501971244812, 0.4583677649497986, 0.3698858916759491, 0.27768900990486145, 0.20288483798503876, 0.1471981555223465, 0.10592062771320343, 0.07518742978572845, 0.05250953882932663, 0.036118652671575546, 0.02457292005419731, 0.016647232696413994, 0.011343947611749172, 0.007924888283014297, 0.005979523994028568, 0.005911155138164759, 0.01479307934641838, 0.11755424737930298, 0.4696583151817322, 0.6847730875015259, 0.6813927292823792, 0.7964075207710266, 0.7614238858222961, 0.5696017742156982, 0.5334881544113159, 0.544272780418396, 0.5543724894523621, 0.5590761303901672, 0.5608985424041748, 0.5615530610084534, 0.5617549419403076, 0.5617635250091553, 0.5616523623466492, 0.5613766312599182, 0.5606080293655396, 0.557220995426178, 0.5399007797241211, 0.49323707818984985, 0.41649436950683594, 0.32241830229759216, 0.23768512904644012, 0.17293454706668854, 0.1250392198562622, 0.08941566199064255, 0.06296256184577942, 0.04362374171614647, 0.029821671545505524, 0.020225632935762405, 0.013720391318202019], bPOM = [0.0, 0.0035753059200942516, 0.009651800617575645, 0.02240138314664364, 0.05967976897954941, 0.1868450790643692, 0.5215983986854553, 0.9961959719657898, 1.5059599876403809, 2.199458122253418, 3.03590726852417, 3.302908420562744, 3.0315897464752197, 2.7793807983398438, 2.64855694770813, 2.593064308166504, 2.5712506771087646, 2.5627691745758057, 2.5593466758728027, 2.5577850341796875, 2.5568127632141113, 2.5557966232299805, 2.5539662837982178, 2.5481679439544678, 2.5203633308410645, 2.4235126972198486, 2.2144429683685303, 1.8863080739974976, 1.4941529035568237, 1.1155263185501099, 0.7964250445365906, 0.5490739941596985, 0.36788925528526306, 0.2407766580581665, 0.1546810269355774, 0.09802621603012085, 0.0616043284535408, 0.03864206746220589, 0.024484122171998024, 0.016304107382893562, 0.014247194863855839, 0.04831695184111595, 0.26861441135406494, 0.9157042503356934, 1.7538809776306152, 2.388204574584961, 3.0202836990356445, 3.2533481121063232, 3.0133094787597656, 2.7746217250823975, 2.647498607635498, 2.592849016189575, 2.5712389945983887, 2.562832832336426, 2.5594630241394043, 2.55796217918396, 2.557086706161499, 2.5562732219696045, 2.555040121078491, 2.552039384841919, 2.539437770843506, 2.4838435649871826, 2.334660291671753, 2.0632476806640625, 1.6930092573165894, 1.2993121147155762, 0.947170615196228, 0.6638798117637634, 0.4508998990058899, 0.2984060049057007, 0.1933756023645401, 0.12330809235572815, 0.07776378840208054, 0.04877663403749466, 0.030681297183036804, 0.019748268648982048, 0.014222678728401661, 0.019820282235741615, 0.12140855193138123, 0.5275421142578125, 1.3604999780654907, 2.08145809173584, 2.7087461948394775, 3.225050926208496, 3.154960870742798, 2.8800647258758545, 2.6988143920898438, 2.6140851974487305, 2.579535484313965, 2.5660696029663086, 2.5607845783233643, 2.558582067489624, 2.5574891567230225, 2.5566980838775635, 2.5557522773742676, 2.5539491176605225, 2.548161268234253, 2.5203604698181152, 2.423511266708374, 2.214442253112793, 1.8863075971603394, 1.4941526651382446, 1.1155260801315308, 0.796424925327301, 0.5490739345550537, 0.3678892254829407, 0.2407766431570053, 0.1546810120344162, 0.09802620857954025, 0.061604324728250504, 0.03864206373691559, 0.024484120309352875, 0.016304107382893562, 0.014247193932533264, 0.04831695556640625, 0.26861441135406494, 0.9157042503356934, 1.7538809776306152, 2.388204574584961, 3.0202834606170654, 3.2533481121063232, 3.0133094787597656, 2.7746217250823975, 2.647498607635498, 2.592849016189575, 2.5712389945983887, 2.562832832336426, 2.5594630241394043, 2.55796217918396, 2.557086706161499, 2.5562732219696045, 2.555040121078491, 2.552039384841919, 2.539437770843506, 2.4838435649871826, 2.334660291671753, 2.0632476806640625, 1.6930092573165894, 1.2993121147155762, 0.947170615196228, 0.6638798117637634, 0.4508998990058899, 0.2984060049057007, 0.1933756023645401, 0.12330809235572815, 0.07776378840208054, 0.04877663403749466, 0.030681297183036804, 0.019748268648982048, 0.014222678728401661, 0.019820282235741615, 0.12140855193138123, 0.5275421142578125, 1.3604999780654907, 2.08145809173584, 2.7087461948394775, 3.225050926208496, 3.154960870742798, 2.8800647258758545, 2.6988143920898438, 2.6140851974487305, 2.579535484313965, 2.5660696029663086, 2.5607845783233643, 2.558582067489624, 2.5574891567230225, 2.5566980838775635, 2.5557522773742676, 2.5539491176605225, 2.548161268234253, 2.5203604698181152, 2.423511266708374, 2.214442253112793, 1.8863075971603394, 1.4941526651382446, 1.1155260801315308, 0.796424925327301, 0.5490739345550537, 0.3678892254829407, 0.2407766431570053, 0.1546810120344162, 0.09802620857954025, 0.061604324728250504], DOM = [0.0, 0.004277539439499378, 0.012178177945315838, 0.0276845321059227, 0.06525460630655289, 0.1805507391691208, 0.5023255348205566, 1.039859652519226, 1.7029566764831543, 2.5418851375579834, 3.605313777923584, 4.569132328033447, 5.101508140563965, 5.333013534545898, 5.425017833709717, 5.460566520690918, 5.474238395690918, 5.47945499420166, 5.481344223022461, 5.481855392456055, 5.481701374053955, 5.481059551239014, 5.47967529296875, 5.475917816162109, 5.46016788482666, 5.40010929107666, 5.245605945587158, 4.951867580413818, 4.512401580810547, 3.968803644180298, 3.381422519683838, 2.8031005859375, 2.270038366317749, 1.802258014678955, 1.4071675539016724, 1.0835199356079102, 0.8248827457427979, 0.6223490834236145, 0.4664646089076996, 0.3485792875289917, 0.2626233696937561, 0.21781547367572784, 0.30960729718208313, 0.803763747215271, 1.6821871995925903, 2.6484193801879883, 3.679504871368408, 4.589541435241699, 5.106035232543945, 5.333930969238281, 5.4251813888549805, 5.460580825805664, 5.4742431640625, 5.479492664337158, 5.481432914733887, 5.482012748718262, 5.481958866119385, 5.481490135192871, 5.480520248413086, 5.4783501625061035, 5.470912933349609, 5.438648700714111, 5.337918281555176, 5.117830276489258, 4.7486162185668945, 4.249885559082031, 3.6769309043884277, 3.08845591545105, 2.5293173789978027, 2.0272767543792725, 1.5955455303192139, 1.2367295026779175, 0.9465998411178589, 0.7171987295150757, 0.5391490459442139, 0.40324699878692627, 0.30177024006843567, 0.23244522511959076, 0.23366287350654602, 0.489573210477829, 1.2204203605651855, 2.1592190265655518, 3.1568126678466797, 4.176436424255371, 4.89538049697876, 5.2448883056640625, 5.39008903503418, 5.447015285491943, 5.469008445739746, 5.477489948272705, 5.480711936950684, 5.481830596923828, 5.482043743133545, 5.48177433013916, 5.481087684631348, 5.4796857833862305, 5.475922107696533, 5.460169315338135, 5.400109767913818, 5.24560546875, 4.95186710357666, 4.512401103973389, 3.9688031673431396, 3.381422281265259, 2.803100347518921, 2.27003812789917, 1.8022578954696655, 1.4071674346923828, 1.0835198163986206, 0.8248826861381531, 0.6223490834236145, 0.4664645791053772, 0.3485792577266693, 0.2626233696937561, 0.21781545877456665, 0.30960729718208313, 0.803763747215271, 1.6821870803833008, 2.6484193801879883, 3.679504632949829, 4.589541435241699, 5.106035232543945, 5.333930969238281, 5.4251813888549805, 5.460580825805664, 5.4742431640625, 5.479492664337158, 5.481432914733887, 5.482012748718262, 5.481958866119385, 5.481490135192871, 5.480520248413086, 5.4783501625061035, 5.470912933349609, 5.438648700714111, 5.337918281555176, 5.117830276489258, 4.7486162185668945, 4.249885559082031, 3.6769309043884277, 3.08845591545105, 2.5293173789978027, 2.0272767543792725, 1.5955455303192139, 1.2367295026779175, 0.9465998411178589, 0.7171987295150757, 0.5391490459442139, 0.40324699878692627, 0.30177024006843567, 0.23244522511959076, 0.23366287350654602, 0.489573210477829, 1.2204203605651855, 2.1592190265655518, 3.1568126678466797, 4.176436424255371, 4.89538049697876, 5.2448883056640625, 5.39008903503418, 5.447015285491943, 5.469008445739746, 5.477489948272705, 5.480711936950684, 5.481830596923828, 5.482043743133545, 5.48177433013916, 5.481087684631348, 5.4796857833862305, 5.475922107696533, 5.460169315338135, 5.400109767913818, 5.24560546875, 4.95186710357666, 4.512401103973389, 3.9688031673431396, 3.381422281265259, 2.803100347518921, 2.27003812789917, 1.8022578954696655, 1.4071674346923828, 1.0835198163986206, 0.8248826861381531])","category":"page"},{"location":"generated/box/#And-plot","page":"Box model","title":"And plot","text":"","category":"section"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"using CairoMakie\n\nfig = Figure(size = (1200, 1200), fontsize = 24)\n\naxs = []\nfor (name, tracer) in pairs(timeseries)\n    idx = (length(axs))\n    push!(axs, Axis(fig[floor(Int, idx/2), Int(idx%2)], ylabel = \"$name\", xlabel = \"Year\", xticks=(0:10)))\n    lines!(axs[end], times / year, tracer, linewidth = 3)\nend\n\nfig","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"<img width=1200 height=1200 style='object-fit: contain; height: auto;' src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAACWAAAAlgCAIAAACDL5s5AAAABmJLR0QA/wD/AP+gvaeTAAAgAElEQVR4nOzdd5xddZ34/88tM3d6b5mS3khCCKEFAkEQCU1YQZRlkWVXXV13dVUWxPVLsSHqPhQUZX+rogFUQEEBKaEFAoFAMul10jO9z516+/n9Mezl3s/nzMydW2buOef1/GvumVuO5vKZcz7vZtM0TQAAAAAAAAAAAACwBvt0nwAAAAAAAAAAAACAqUOAEAAAAAAAAAAAALAQAoQAAAAAAAAAAACAhRAgBAAAAAAAAAAAACyEACEAAAAAAAAAAABgIQQIAQAAAAAAAAAAAAshQAgAAAAAAAAAAABYCAFCAAAAAAAAAAAAwEIIEAIAAAAAAAAAAAAWQoAQAAAAAAAAAAAAsBAChAAAAAAAAAAAAICFECAEAAAAAAAAAAAALIQAIQAAAAAAAAAAAGAhBAgBAAAAAAAAAAAACyFACAAAAAAAAAAAAFgIAUIAAAAAAAAAAADAQggQAgAAAAAAAAAAABZCgBAAAAAAAAAAAACwEAKEAAAAAAAAAAAAgIUQIAQAAAAAAAAAAAAshAAhAAAAAAAAAAAAYCEECAEAAAAAAAAAAAALIUAIAAAAAAAAAAAAWAgBQgAAAAAAAAAAAMBCCBACAAAAAAAAAAAAFkKAEAAAAAAAAAAAALAQAoQAAAAAAAAAAACAhRAgBAAAAAAAAAAAACyEACEAAAAAAAAAAABgIQQIAQAAAAAAAAAAAAtxTvcJIK3ZbLbpPgUAAAAAMdE0bbpPAYbBvR4AAACQ/lJ6l0cFIQAAAAAAAAAAAGAhVBBiYtOeidzX19ff319UVFRQUDC9Z4L05PV629vbXS5XZWXldJ8L0lRzc3MwGKypqXE4HNN9LkhHPT09g4ODJSUleXl5030uSEcej6ejoyMrK6uiomK6zwVpqrGxUdO0urq66arKohoM8Zn2e73u7u6hoaHS0tLc3NzpPROkp66uruHh4bKyspycnOk+F6Sjjo4Oj8dTUVGRlZU13eeCdNTe3u71eisrK10u13SfC9JRa2ur3++fMWNGRkbGdJ8L0lFLS0sgEKiurnY6pyeONgV3eVQQAgAAAAAAAAAAABZCBeGUevjhhxsaGoQQt956a3l5eXxvcuLEifr6+ubm5u7u7oqKipqamrPPPnvGjBlJPVMAAAAAAAAAAACYEwHCqeP3+7/+9a+73W4hxC233BJHgPDpp5/+2c9+tnHjRqkPjMPhuOSSS2699daPfexjSTtdAAAAAAAAAAAAmBEtRqfO+vXrR6ODcRgcHLzllluuu+66N998U50SEQwG169fv3bt2q9+9aterzfhMwUAAAAAAAAAAIBpUUE4dX7xi1/E98JAIHDNNde8/vrr4z9N07QHHnigra3t8ccfj++DAAAAAAAAAAAAYHoECKfIs88++9JLL8X32q9//euR0cHc3Nx//Md/XLNmTWVlZVNT0/r165944gm/3z/62yeeeOK000775je/mYSTBgAAAAALC4VCdvs09N2Zrs8FAAAAYB0ECKfC448//tnPfja+127btu3nP/95+OHSpUtffPHFurq68JGbbrrptttuu/zyy1taWkaP3HPPPTfddFPkcwAAAAAAE+rr63viiSc2bty4devWjo4Ot9udkZFRXl6+YMGCj370o5/4xCeWLl2ais/VNO3NN9985JFHtm7d2tzc3NvbW1ZWVlNTc955533mM59ZtWpVKj4UAAAAgJURIEyVvr6+7du3b9q06U9/+tOuXbvifp977rkn/HNJSclrr71WWVkpPWf58uUvv/zyypUrfT6fEMLn8/3whz988MEH4/5QAAAAALAUr9d7zz33/OIXvxgYGIg87vP5mpubm5ub33jjjbvuuuvjH//4fffdd8oppyTxo/ft23fjjTfu3Lkz8mBnZ2dnZ+eOHTt++ctfrl69+rHHHps9e3YSPxQAAACAxdG0JPm++93vlpeXFxcXX3zxxXfeeWci0cGGhobnnnsu/PBHP/qRGh0ctXTp0m984xvhh7/+9a/dbnfcnwsAAAAA1tHS0nLBBRfcd999UnRQomnas88+e9ZZZz322GPJ+uinnnrqzDPPlKKDkk2bNq1YsWLDhg3J+lAAAAAAIECYfCdOnOjq6krKWz377LPhn0tKSm666aZxnvxv//ZvTucHJaFer/eVV15JyjkAAAAAgIl5vd5rrrlmy5YtkQdtNtvMmTMvvfTS0047LTMzM/JXQ0NDN9988+OPP574R9fX13/mM58ZGRkJH8nIyFi8ePGFF144b968yDGEbrf7k5/85JEjRxL/UAAAAAAQBAjT3PPPPx/++VOf+pTL5RrnyZWVlWvXrg0/fOGF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wIDt27cLPLFVPa/X+7e//e2JJ5644JNMk8m0cOHC++67r2UCg0KQ6KHRKisr+/bte/ToUf8uHzcqpOYsjzUIoSwnT54cNmxY/RmjIAg1NTVz5sxZsmRJy0QF5Xv55ZflDgGKUFZWNmjQoFCqg4IgnDx5csyYMUuXLm3uqKAce/fuHTRoUChJoyAIP/744xVXXFFQUNDcUSFc1NTUTJ8+XawOQp0OHz4sdwhAuCLXQyP8/PPP/uogcMsttzz++OOhzHNwOBzz5s27/fbbmRShHiR6uBhz584Vq4NQJzVneaxBCAVxOBzXXXfdqVOnxCNt2rS5++67+/TpExUVdeTIkVWrVn333XfiV+fNm9ejR48RI0bIESwUZO3atevWrZM7CsjP5/Pdeuutge2q9Hr9DTfc0L9//x49eiQkJOzdu3fXrl2rV6/2Lx4mCILX673nnnsyMjKuuuoqmaJGy6mpqZkyZUplZaV4JDEx8fbbb+/WrVvXrl3dbvf+/fuzs7NXr17t9Xr9JxQUFNx4442bN29mLRMIgnDffffV2a0IqhLigycAQcj10Agul2vevHlyRwFFWLhw4XvvvRd4ZPjw4SNHjuzZs2f79u0PHz68a9euTz/9NPBWbfny5W3atHn88cdbPFi0NBI9XIwVK1a88847ckcBmak5y6PFKBTkueeemz9/vrg7derUFStWmEymwHNWrVp1xx13iIP3e/TosXfvXj7O1ezdd9+dM2dObW2teIQWo6r16aefXnfddeJux44dP/vssx49egSddvr06Xnz5r3//vvikYyMjIMHD1oslhYKFDIJXDpOEITrrrtuyZIlaWlpQadt2bLl9ttv379/v3hk1apVLFGO999//+abbw46SItRFbr77rtff/11//Ydd9wxfPjwUF7VtWvXwYMHN2dcgNKR66GhTp8+PXv27C+//FI8Qs831Tpz5kyHDh3sdrt/12q1rlix4oYbbgg6zeFwPPHEE0899ZR4GdFqtTk5OX369GnRcNHiSPTQaHl5ef369auqqgo8yMeNCqk6y/MBylBbWxv44T1s2DCPx1PnmeKfq98HH3zQwqFCdmVlZRs3bnzsscd69+4tvazt379f7gAhjyFDhohvg9jY2KNHj9Zz8h133BH4tnnmmWdaKkzIw+PxtG3bVvwX79Onj9frPd/J+/btMxqN4smjRo1qyVChQMeOHYuPj5d+4ixZskTu0NDSAleu/frrr+UOBwgP5HoIkcfjOXDgwMqVK2fMmBEVFRX0sXvzzTfLHSDk8de//jXwnbBmzZp6Tl6+fHngyddcc02LxQlZkOih0ZxO5+WXXy7N8vi4USE1Z3msQQilWLFixenTp/3bOp1u6dKlWm3d788777wzsIz/7LPPtkR8UIbHHnssJSUlISFh1KhRjzzyyO7du+WOCEpx4sSJTZs2ibsPP/xwhw4d6jn/hRdeyMzMFHcDJxQiIu3atSs/P1/cffLJJ+uZkdCjR4/AflY//vhjTU1N88YHBfN4PDNmzBBbEzPbWOUCm8907dpVxkiAMEKuhwsqLi7u2rWrxWLp1q3bzJkz33nnHe6+IFq1apW4PXHiROncwUCzZs2aMmWKuLt+/fqKiopmDA5yI9FDoz3yyCPi0shkeSqn5iyPAiGUYu3ateL2+PHjs7Ky6jn5vvvuE7d//vnnoqKiZowMSnL8+PGSkhK5o4AS/fvf/xa3jUbjnXfeWf/5MTExf/7zn8XdrVu3kjdGth9++EHc7ty584QJE+o/P/DppNPpPHHiRHNFBsV79NFHf/rpJ//2b37zm/pvURDZ7HZ7YWGhfzsqKqpNmzbyxgOEC3I9XJDD4Th48KDYGRIQnThx4tixY+Lu3LlzL/iSxx57TNx2uVyB65si8pDooXE2bty4aNEi/3afPn1uu+02eeOBjFSe5VEghCLY7faNGzeKu7Nmzar//MmTJ4udvnw+37p165oxOADhYPPmzeL2gAEDEhISLviSkSNHits+n6+goKA5AoNCHDhwQNweOHDgBc/v2bNn4C5PJ1Xrxx9/fPzxx/3b3bt3f/755+WNB/LKy8vz/XcF965du7I0GhAKcj0AFyM7O1vcNhgMgV3gzqdbt26pqanibuD0MkQeEj00wtmzZ2+99Vav1ysIgsViWbVqVdC6yFAVlWd5erkDAARBELKzs202m7g7YsSI+s83GAxDhgz54osv/LvffPPNBfNMRIb58+dPmzYt6GBlZeWNN94oSzxQjsDyXp1N5KWSk5MDd8X+gYhIxcXF4nYow8GC7ghjY2ObPiYoXnl5+YwZMzwejyAIRqNx9erVdJ5Ruby8PHFbbZ1ngEYj10MoUlJSNmzYID3+f//3f59++mnLxwPlCEz0evbsabVaQ3lVcnLymTNn/NskepGNRA+NMHv27JMnT/q3n3vuuR49esgbD+Sl8iyPAiEUYf/+/eJ2hw4dAlewP5/ApDFwuBAiW/fu3bt37x50kKajEARBTP8EQWjXrl0oLwkaSRq4JCEiz5QpU/r37+/fDuwqcz65ubmBu7w91Onuu+8Wmw499dRTffr0kTceyE7NS1MAjUauh1CYTKYxY8ZIj3/yySctHwwUpRGJnnBursedfGQj0UNDvfzyy2Lz88mTJ99zzz3yxgPZqTzLo0AIRTh48KC4HeLfYeBpgX/GANTp2WefFVcX7927dygvycnJEbejo6PT09ObJTIow80339yg8wOXKundu7fY6wzqsXTp0g8++MC/PW7cuD/84Q/yxgMlCLzn7NatmyAIe/fufe+997KzswsKCmpra5OTk9PS0oYOHXrVVVeJz6oAlSPXA3AxbrvttlGjRvm3MzIyQnlJXl5eZWWluMsC0pGNRA8Nsnfv3gceeMC/3bp16zfeeEPeeKAEKs/yKBBCEQKTxrZt24byksDTysrKSkpKgroFAlCVYcOGNeh8n88XuJbYpZde2tQRIYytX79+8eLF4u6DDz4oYzCQRW5urlgRTE5OXr58udrWIUCdDh8+LG7r9fqrr75anOTk55+v8OWXXz788MODBw9+/PHHQ1kqCYhs5HoALkbPnj2DFo27oGeffVbctlqt/qe9gECip3p2u3369Ol2u10QBI1Gs3z5cm4wIKg+y9PKHQAgCOd2DA9xRFhQY/HTp083cUwAItqLL764b98+cfdPf/qTjMFACex2+8GDB1euXHnddddNmDBBXC1p2rRp0qVPEdmcTuf06dPFScnLli0LpSEe1CBwbOm0adOC8sYg2dnZo0aN+utf/+r1eps/NEC5yPUAtKQtW7YsW7ZM3P3tb38bHR0tYzyQHYkeRPPnz9+7d69/+/777x87dqy88UAhVJ7lMYMQiiA+gxMEIcRbt6DTamtrmzgmAJHrww8/vP/++8XdSy+99JprrpExHshoxYoV8+fPt9vt1dXVPp8v8Etarfauu+56+eWXtVoGVKnLggULduzY4d+eO3fupEmT5I0HCuFwOAoKCsRdt9stbsfHx6ekpFRVVRUXF3s8nsBXPfnkk8XFxa+//nrLBQooDLkegBaTm5t79dVXOxwO/67FYmEkqGqR6CHI2rVr//nPf/q3+/bt+8QTT8gbDxSCLI/rIBQhMGk0m82hvMRisZzvOwDA+bhcrr/85S8333yzONLHarWK94hQoZqamuLi4qqqqqCksV27djk5Oa+88opOp5MrNshi3bp1Yt+hHj16PPPMM/LGA+U4cuRI0CjRhISEZ555pqCgoKys7ODBg6dOnSotLf3ggw86deoUeNrSpUtfe+21lg0WUBByPQAtY9WqVQMHDiwpKRGPPP3006mpqTKGBBmR6CHQyZMnZ8+e7d+2Wq2rV682Go3yhgSFIMujQAhFaETSaDKZAlcDImkEcEHff//9ZZdd9tRTT4mf/QaDYc2aNQMHDpQ3MCjQiRMnZs6c+c477wQNE0NkKyoquv322/0PEUwm06pVq4IeUkPNAjvPCIIwZMiQvXv3zp8/P7AXYmxs7JQpU3bv3v373/8+8E51wYIFlZWVLRcroCTkegCa29GjR2+88cYZM2ZUVFSIBx955JHf//73MkYFZSLRUyGv13vrrbeePXvWv/vcc8+xNClEZHkUCKEIgcN2gob2nI/X6w08k891APU4fPjwDTfcMGLEiF27dokHLRbLypUrr7rqKhkDg+w6dep044033njjjcOHD8/IyAhsMrN3796ZM2fecMMNYpMiRDafz3fbbbedOXPGv/vUU0/16dNH3pCgKIFr119++eVffvllenp6nWdardYXX3zxtttuE4+UlZW99NJLzR4ioEjkegCaT0VFxZ///Ofu3bt/9NFHgcfvv//+Rx99VK6ooAQkehAtXLhw48aN/u1rr732N7/5jbzxQFHI8igQQhGioqLEbXG54PoFncai0wDqVF5e/sc//rFHjx4ff/xx4PEhQ4bs3LnzpptukiswKMTYsWM//PDDDz/88LvvvsvPz7fZbCtWrOjYsaN4wtq1aydOnBgxq0+jHosXL163bp1/e/z48fPmzZM3HijN/fff7/uvn3/+OTY2tv7zn3766bi4OHF3zZo1zRwgoFDkegCag8fjefnllzt37rxo0aLAMk9GRsaXX3757LPPyhgblIBED35btmz529/+5t9OT09/44035I0HSkOWR4EQihCYNNrt9lBeEnQaSSMAqRUrVnTt2nXx4sUul0s8GBUVtWjRoh9++CErK0vG2KBMRqNx5syZBw4cmDZtmnhw48aNEXDPh/rt2LFjwYIF/u2UlJTly5cHdg4BGqFVq1bz588Xd3fu3FlcXCxjPIBcyPUANLnNmzcPGDDg3nvvDVxxUKPRzJkzZ+/evTSJgRSJnjpVVVVNnz7d/0RIo9G8/fbbSUlJcgeF8BZ5WR4FQihCYMoX2DK+HkEdfkkaAQQ6efLk6NGjZ82aVVRUJB40GAy//e1v8/LyHnjggcAGI0AQg8Hw6quvdujQQTyyaNEi+cJBs7PZbNOnT3c6nf7dN998MzU1Vd6QEBnGjx8vbvt8vsD2NYB6kOsBaEIOh2PevHn+fjCBx8eNG5eTk7N06dLAiR1AEBI9tbn33nuPHDni337ggQdGjx4tbzyIDBGW5enlDgAQBEHIyMgQtwsKCkJ5SX5+fuAuD/IAiNavXz9z5szAwaSCIEydOvWJJ57o3LmzXFEhvMTGxj7wwAP33nuvf3fr1q12u91sNssbFZrJ8ePHc3Nz/dtZWVmHDh1avHjx+U4OHB64cePGwGkuw4cPv/TSS5svToSd7t27B+4GjlkB1INcD0BTycvLmzJlSlBpcMCAAU8//fSoUaPkigrhhURPVdavX+/fMJvNycnJ9WR5O3bsELcPHjwYeGbHjh0nT57cfEEi7ERYlkeBEIrQtWtXcTsoGzyfwNwyOTk5OTm56cMCEIbeeeed22+/3e12i0f69u372muvXXbZZTJGhXDUu3fvwN0TJ07QllYNDh48+Mc//jHEkz/44IMPPvhA3F20aBEFQgSKiYkxGAxim+sQV18DIgy5HoAmsXv37nHjxp05c0Y8kpKSsnjx4unTp9MZHg1CoqdCdrv9wQcfDPHkHTt2BNYLr776agqECBRhWR4N1qAIgUnjvn37QnnJ/v37xe2guj0A1VqzZs2tt94qVgdNJtM//vGPrVu3Uh1UuY8++uiK/7r99ttDfFXQh8vJkyebPjIAEc3j8QQOWKHIAXUi1wNw8fLy8kaOHBlYHZwxY8b+/ftvueUWqoNqRqIHoOVFWJbHDEIoQq9evcTtM2fOHD16NDMzs/6XZGdn1/lyAKqVm5t7xx13+Hw+/25KSsoXX3wxYMAAeaOCEuj1+p9++sm/vX379jfeeEOn013wVadPnw7cjYmJaZbgAISDY8eOiVOakpKSQqxYnDlzRvxUEmiTCLUi1wNwkex2+4033lhWVubf1el0r7766pw5c+SNCkpAogfgYpDlCRQIoRB9+vRp3br1qVOn/Lv//ve/608a7Xb7zz//LO5OmDCheeMDEA7mzZtXVVXl387IyNi4cWOXLl3kDQkK0alTJ3Hbbrfn5ub26NHjgq8KmuWQlpbW9JFBGdq0abN69eoQT16wYMHx48f923PmzBkzZoz4pX79+jV9cFCGjRs3ig8iU1NT8/PzDQbDBV+1adMmcTsmJoaJUFAncj0AF2nx4sW7du3yb+v1+o8++mjSpEnyhgSFINFD/V599dUQ2z++/fbbX375pX978ODB9913n/ilNm3aNEtwUACyPIECIRRCo9FMnDjxjTfe8O8uX7589uzZ9Zy/Zs2a6upq/7bVah09enSzhwhA2X766Sdx9WlBEJYtW0Z1EKJu3bolJCSIg46/++67UPLGzZs3i9vp6enp6enNFR/kFhMTM23atBBPfuqpp8QC4YABA0J/IcLa2LFjxe0zZ86sXbv2xhtvvOCrXn31VXH7yiuv1OtJvqBG5HoALkZVVdXChQvF3QcffJDqIEQkeqjftddeG+KZmzdvFguE7dq1I8tTCbI8gTUIoRxTp04Vt3/44Yft27ef70yv1/viiy+Ku5MmTbJYLM0bHADFW758ubh9/fXXB37GAzqdLvAt8fe//728vLz+l/zyyy///Oc/xd2JEyeyugmgZm3bth00aJC4+8QTT9jt9vpf8u6773799dfi7syZM5srOEDxyPUANNpnn30mln/S0tIeeeQReeOBopDoAbgYZHkCBUIox/jx4y+77DL/ts/nu/vuu10uV51nvvTSS1u2bPFvazSahx56qIVCBKBUPp/vk08+EXevv/56GYOBMt16663idlFR0fz5871e7/lOrqysnD17ttPp9O9qNJq5c+c2e4gAlC2w0VBOTs6dd95Zz8m7du364x//KO5ecsklU6ZMacbgAGUj1wPQaB999JG4PXHiRJPJJGMwUCASPQAXgywvvOc/IsL87//+78SJE/3bOTk5kydPfv/994PWCl6yZMn8+fPF3WnTprFqPYAjR44UFxeLuytWrPj0008b+k1Wr14dSqtxhKlrrrmmf//+4pSFZcuW7d69+5VXXunfv3/QmatWrZo/f37gwvW33HILa8sBmDp16qJFi3bs2OHffeedd4qKip5++umg64Pdbn/00UcXLVrkdrv9R3Q63UsvvcTgdKgcuR6AxglclDQnJ6cRj2Iffvjh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+vbbb4UQ999//7PPPut8Dv1GAAAAAP0UHT06egDQ7/g0PwUAAPSUKVOm/OY3v5F26+rqHnroIdk5r7/+utRpFEKsWrXKl05jdXX1vHnzXnnlFc+dRiHEnj17LrjgAs8dwjNnzlx44YW+dBqFEE1NTbfeeus777zjy8lCiEceeUTWaQQAAACA/ouOnqCjBwD9DRmEAAD0tdbW1okTJ546dcqxq9Fodu3add555zl2GxsbMzIyqqqqHLuDBw/Oz8+Pjo72es9zzz338OHD0pHw8PArr7xy7ty5KSkpdXV1Bw4c+Pjjj+vr66UTIiMjt2/ffv7557u84RVXXCGtoiGE0Ov111577YQJExwLSJSWlh47dmzz5s1Go1E6JyEhoaioKDY2Vnk354mljzzyyOWXX+78C0Sv1yckJOzevXvkyJGe/zEBAAAAIDDR0aOjBwD9CwFCAAD8YPv27Zdddpm0O23atH379jlWnvjNb37zl7/8RfrTRx99dM0113i94apVq55//nlpd8aMGW+99ZaskEtNTc1dd9318ccfS0cmT5584MABnU4nu9uePXtmzZol7c6fP//NN98cMmSI7LSmpqZf//rXr7/+unTk7bffvvnmm5XNk/qNkydPrqmpKSsrc2zfc889F110UUZGhkaj8frPCAAAAACBjI6eoKMHAP0HJUYBAPCDSy+99NZbb5V2Dx48+NJLLwkh8vPz169fLx1fvHixL53GvLw856tuvfXW3bt3K5d5SExM/Oijj9auXSsdyc3NfeWVV5Q3/PDDD6XtESNGbN68WdlpFELExsZu2LDhggsukI7s37/fc1Nzc3PLyso0Gs3atWsPHTq0fPnysWPH0mkEAAAAEATo6NHRA4B+hAAhAAD+8cwzzzgvWb9mzZrq6uqVK1dKy9pHRkY69wY9eP7556WSAIMHD/7b3/6m1+vdnbx69eqLL75Y2n388ceVS1kcPHhQ2v7FL34RHx/v7m46nW7x4sXSrlQwx7M1a9asXr2a7iIAAACAIENHj44eAPQXBAgBAPCPxMRE5woz9fX1F1988VdffSUdeeyxx4YNG+b1PkajcdOmTdLu+vXrY2JiPF/y8ssvh4aGOrYrKyt37dolOyEuLu6c/1m4cKHnu40aNUraljq9HqSkpKxZs8braQAAAADQ79DRAwD0FwQIAQDwm1tuucV5gYq8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LZ0yZYpe3qgnLCxs0KBBb7zxhkajMX9ogHSR6wGwpLNnz37zzTfi7nPPPefm5mbFeGB1JHoQLVmyJCoqqmL75ZdfHjp0qHXjgUTYeZbHDEJIgvgMThAEE2/d9E4rLCys4ZgA1F579ux5+eWXxd1OnTo9+eSTVowHVrR58+YlS5ao1er8/HytVqv7J7lc/swzz3z++edyOQOq7Mtrr70WERFRsb1w4cKRI0daNx5IRHFxcWJiorhbVlYmbtepU8fPzy8vLy8tLa28vFz3VR988EFaWtpXX31luUABiSHXA2AxMTExTzzxRHFxccWuSqViJKjdItGDngMHDnzxxRcV2x06dFixYoV144FEkOXxPQhJ0E0anZ2dTXmJSqV60DsAwIOUlpa+/vrrkydPFkf6uLi4iPeIsEMFBQVpaWl5eXl6SWPDhg0vXry4YcMGBwcHa8UGqzh8+LDYdyg4OHj16tXWjQfSERcXpzdK1MvLa/Xq1YmJiVlZWdevX793715mZubu3bubNWume9rGjRv/+9//WjZYQELI9QBYxrZt27p3756eni4e+eijj/z9/a0YEqyIRA+6kpKS5syZU7Ht4uKyfft2Jycn64YEiSDLo0AISahC0qhUKnVXAyJpBPBQf/75Z9euXT/88EPxt9/R0XHv3r3du3e3bmCQoPj4+BkzZmzdulVvmBhqt9TU1NmzZ1c8RFAqldu2bdN7SA17ptt5RhCEXr16RUVFLVmyRLcXooeHx4QJEyIjI1944QXdO9XXXnstNzfXcrECUkKuB8Dcbt26NX78+OnTp+fk5IgH33rrrRdeeMGKUUGaSPTskEajmTlzZkZGRsXuxx9/zNKkEJHlUSCEJOgO29Eb2vMgGo1G90x+1wFU4ubNm+PGjevfv//ly5fFgyqVasuWLY899pgVA4PVNWvWbPz48ePHj+/Xr19QUJBuk5moqKgZM2aMGzdObFKE2k2r1c6aNSslJaVi98MPPwwNDbVuSJAU3bXru3XrdujQocDAQKNnuri4rFu3btasWeKRrKyszz77zOwhApJErgfAfHJycv75z3+2adNm3759usdffvnld99911pRQQpI9CBauXLlsWPHKrZHjx797LPPWjceSApZHgVCSIKrq6u4LS4XXDm901h0GoBR2dnZL730UnBw8A8//KB7vFevXpcuXZo0aZK1AoNE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MmLECHE3PT399ddff+ir1q5dq5s0Tps2jaQRAAAAACSCRA8AYLuYQQgAgIXcuXMnJCSkoKCgYlcul4eHh3ft2vVB5ycnJ7ds2TIvL69it06dOteuXfP397dErAAAAAAAE5DoAQBslMO///1va8cAAIBdqFOnjouLy5EjRyp2tVptRETEvHnzZDKZ0fOff/75s2fPiruffPLJgAEDTL+cVqu9efPm1atXz507l5aWplAo3N3dH3QtU+Tk5MTGxl68ePHixYt37tzJzMz09PSs5iIZpaWlf//996lTpxISEurXr69QKKrzbgAAAABgYSR6hkj0AMAmMIMQAADL0Wg03bt3P3/+vHhk/fr1CxYsMDwzPDy8V69e4s909+7dT58+LZeb1Bv88uXL69evP3DgwL1793SPK5XK4cOHL126tG/fviYGrNVq9+7du2nTphMnTohDXEUymaxNmzaTJk1auHChn59fJe+zaNGizMxMQRDatGnz5ptvVhzcunXrG2+8ER8fX7EbHR3dunVrEwMDAAAAAIkg0SPRAwBbRIEQAACLunz5cpcuXcrKyip2vb29Y2JifH19dc/RarXdu3c/d+5cxa6Dg8P58+c7dOjw0DfPzc195ZVXNm7cqNFoKjmtW7du33//fatWrSp/t1u3bk2bNi08PPyh1/Xw8Pj8889nzJjxoBOCgoLu3r0rCEL//v2PHz/+/9i788C2qjPh/+dKsiTL8u7Yjp19T0iABAh7gEKhDFAKndKh4cd0GZi+7dtSKJ32LbwznbbTTmGgHWA6XejQQqEdyj5tf0xhWiiENZCQhZDVcRzb8S7L2rf7/iEQ0j3XtrxeSef7+Us+luVj5+bI93nO8xwhxJe//OU777wz+zncNwIAAAAoUtzocaMHAEUnr/0pAABgupxwwgk33XRT5sPBwcGvfe1rhufcd999mZtGIcQNN9yQz01jX1/fueee+5Of/GTsm0YhxGuvvXbmmWeOfUPY3t6+adOmfG4ahRB+v//aa6996KGH8nmyEOKWW24x3DQCAAAAQPHiRk9wowcAxYYKQgAAZls4HF67du2hQ4fSH2qa9tJLL5122mnpD4eHh1esWNHb25v+cN68eXv27PF6veO+5saNG3ft2pUZcbvdF1988dlnn93U1DQ4OPjmm28+8cQTQ0NDmSd4PJ5nnnnmjDPOMH3BD33oQ5lTNIQQDofjiiuuOO6449IHSHR2du7bt+/RRx8NBoOZ59TV1bW1tVVVVcmvlr2x9JZbbrnooouy/wJxOBx1dXUvv/zykiVLxv4xAQAAAKAwcaPHjR4AFBcShAAAWOCZZ5658MILMx+uX79+69at6ZMnbrrppu9///uZTz3++OMf+chHxn3BG2644a677sp8ePLJJz/wwAOGRi79/f3XXXfdE088kRk5/vjj33zzTbvdbni111577dRTT818eN555/3iF7+YP3++4Wl+v/9LX/rSfffdlxn55S9/uXnzZnl6mfvG448/vr+/v6urK/3485///DnnnLNixQpN08b9GQEAAACgkHGjJ7jRA4DiQYtRAAAs8MEPfvDaa6/NfLht27Yf/ehHQog9e/bcfffdmfHLLrssn5vGnTt3Zn/Vtdde+/LLL8vHPDQ0NDz++OO33XZbZmTHjh0/+clP5Bd85JFHMo8XL1786KOPyjeNQoiqqqqf/vSnZ555ZmbkjTfeGHuqO3bs6Orq0jTttttu2759+/XXX79y5UpuGgEAAACUAG70uNEDgCJCghAAAGvccccd2UfW33rrrX19fV/84hczx9p7PJ7su8Ex3HXXXZmWAPPmzbvnnnscDsdoT/7KV75y/vnnZz78x3/8R/koi23btmUef+pTn6qtrR3t1ex2+2WXXZb5MNMwZ2y33nrrV77yFW4XAQAAAJQYbvS40QOAYkGCEAAAazQ0NGR3mBkaGjr//POfffbZzMg3vvGNhQsXjvs6wWDwwQcfzHx49913V1ZWjv0lP/7xj51OZ/pxT0/PSy+9ZHhCTU3NSe+55JJLxn61pUuXZh5nbnrH0NTUdOutt477NAAAAAAoOtzoAQCKBQlCAAAsc80112QfULFz587M43Xr1t144435vMgrr7wSDofTj71eb/Y2z9EsXbr03HPPzX4FwxN+85vfbH3Phg0bxn61gYGBfOaZcdVVV2XuWgEAAACgxHCjBwAoCiQIAQCw0r//+797PB7DoKZpP/rRj8boHpNty5YtmcennnqqfBC9qeyj6Xfv3p3Pl5iKRqP333//hL7k9NNPn/S3AwAAAIDCx40eAKDw5fWGBAAAZsiSJUu+8Y1v/N3f/V324N/8zd+cccYZeb5C9l3fggULtm/fns9XRaPRzOPu7u48v1dGb2/vzp07X3311Z/97GeHDh2a0NeuWrVqot8OAAAAAIoIN3oAgMJHghAAAIvdeOONDzzwQKbtTG1t7fe+9738vzy78ct999133333TXQCfX19Y3xW1/Vdu3a98cYbe/bs2b9//8GDB9va2kZGRib6XTKqq6sn/bUAAAAAUBS40QMAFDgShAAAWMzhcBx//PGZ+8YFCxbU1tbm/+WDg4NTnEDmZAuDvr6+7373uw8++GBvb+8Uv0W28vLyaXw1AAAAAChA3OgBAAocCUIAAIpbKpWa4ivEYjF58N5777355puHh4dH+yq3271u3boLLrigsrLy61//ev7fTtO0ycwSAAAAAJTBjR4AYKaRIAQAoLhl70L913/910984hMTfQX5uPuf/vSn119/ffaIpmkrV6489dRT169fv2zZsuXLly9dujT9hY888sikJg4AAAAAMMeNHgBgppEgBACguGXfN0YikYaGhim+4JEjRz73uc9lv/7nP//5L3zhC42NjVN8ZQAAAABAPrjRAwDMNBKEAAAUtxUrVmQe7927d+oveNdddyUSifTj6urqF1544bjjjpv6ywIAAAAA8sSNHgBgppEgBACguJ1++umZx88991yeX9XT05M5sr6xsdHj8WQ+9fzzz2cef/WrXx33prGnpyfPbwoAAAAAyAc3egCAmWazegIAAGBKzjzzzMzZEocOHfrTn/407pcMDw+vWrVq8Xva29uzP9vW1pZ5fMopp4z7ai+88MIEpwwAAAAAGAs3egCAmUaCEACA4tbQ0HD55ZdnPrzllluSyeTYX3LXXXf5fL7040WLFq1evTr7s5m2M0KIzObT0bzyyiuPP/74xGYMAAAAABgTN3oAgJlGghAAgKJ3ww03ZB6//PLLX/ziF3VdH+3JzzzzzHe+8x3Tr01rbW3NPH7ppZfG+L7vvPPOpZdeGovFMiPZ95wAAAAAgEnjRg8AMKNIEAIAUPQ2bdp09dVXZz784Q9/eOmll77zzjuGp4VCoXvuuefDH/5wJBJJj6xZs+b66683PO28887LPL7jjjv++Mc/yt8xGAzefvvtZ5999sDAQPb4a6+9FgqFpvKzAAAAAAAEN3oAgBmmjbHxBAAAzI5rrrnmwQcfTD8+4YQTtm/fPtFX8Pl869evP3z4cGbEZrOddNJJp5566pw5c3w+X3t7+3PPPTc4OJh5wty5c1955ZUFCxYYXmrXrl0nnnhidvuaCy+88KKLLmppabHZbPv379+3b9/vf//7/v7+9GfXrl27a9euzJNXrlx58cUXr1u37tOf/nRmcN68eZ2dnenH3d3dzc3NE/0BAQAAAKC4cKMHAChkJAgBALDe1O8bhRAdHR0XXnihvJ/UlNfrff755zds2GD62b//+7//1re+lc/rfOxjH7v//vs3bdr0+uuvZ49/9KMffeSRRzIfct8IAAAAQDXc6AEAChktRgEAKBHz58/fsmXLddddZ7fbx37mWWedtXXr1tFuGoUQ3/zmN2+//fbq6uoxXmTu3Ln33nvvf/7nf7rd7gceeKChoWGS8wYAAAAAjIIbPQDADKGCEAAA6z322GM7duxIP25ubv7sZz87lVfbvXv3z3/+89/+9reGTaatra3nnXfeZz7zmXPPPTef1+nv7//2t7/99NNPt7W1ZQ6odzqd55133pVXXrl58+aKiorMk/v6+m677baXX345HA4vWbLk6quvvvLKKzOfvfPOO/1+f/rxzTff7PV6p/IDAgAAAEDh40YPAFDISBACAFCyAoFAT0/PwMCAx+NpbGxsbGyc3OukUqn29vbBwcGmpqa5c+eOu3EVAAAAADBDuNEDAEwLEoQAAAAAAAAAAACAQjiDEAAAAAAAAAAAAFAICUIAAAAAAAAAAABAISQIAQAAAAAAAAAAAIWQIAQAAAAAAAAAAAAUQoIQAAAAAAAAAAAAUAgJQgAAAAAAAAAAAEAhJAgBAAAAAAAAAAAAhZAgBAAAAAAAAAAAABRCghAAAAAAAAAAAABQCAlCAAAAAAAAAAAAQCEkCAEAAAAAAAAAAACFkCAEAAAAAAAAAAAAFEKCEAAAAAAAAAAAAFAICUIAAAAAAAAAAABAISQIAQAAAAAAAAAAAIWQIAQAAAAAAAAAAAAUQoIQAAAAAAAAAAAAUAgJQgAAAAAAAAAAAEAhJAgBAAAAAAAAAAAAhZAgBAAAAAAAAAAAABRCghAAAAAAAAAAAABQCAlCAAAAAAAAAAAAQCEkCAEAAAAAAAAAAACFkCAEAAAAAAAAAAAAFEKCEAAAAAAAAAAAAFAICUIAAAAAAAAAAABAISQIAQAAAAAAAAAAAIWQIAQAAAAAAAAAAAAUQoIQAAAAAAAAAAAAUAgJQgAAAAAAAAAAAEAhJAgBAAAAAAAAAAAAhZAgBAAAAAAAAAAAABRCghAAAAAAAAAAAABQCAlCAAAAAAAAAAAAQCEkCAEAAAAAAAAAAACFkCAEAAAAAAAAAAAAFEKCEAAAAAAAAAAAAFAICUIAAAAAAAAAAABAISQIAQAAAAAAAAAAAIWQIAQAAAAAAAAAAAAUQoIQAAAAAAAAAAAAUIjD6gmgoGmaZvUUAAAAAORF13WrpwAAAAAAKA5UEAIAAAAAAAAAAAAKoYIQ47N8J7LP5/P7/TU1NVVVVdbOBIUpGo329PS4XK6mpiar54IC1dnZmUwmW1tb7Xa71XNBIRocHAwEAnV1dV6v1+q5oBBFIpHe3l63293Y2Gj1XFCgOjo6dF2fP3++VR046PwBAAAAAJgQKggBAAAAAAAAAAAAhZAgBAAAAAAAAAAAABRCghAAAAAAAAAAAABQCAlCAAAAAAAAAAAAQCEkCAEAAAAAAAAAAACFkCAEAAAAAAAAAAAAFEKCEAAAAAAAAAAAAFAICUIAAAAAAAAAAABAISQIAQAAAAAAAAAAAIWQIAQAAAAAAAAAAAAUQoIQAAAAAAAAAAAAUAgJQgAAAAAAAAAAAEAhJAgBAAAAAAAAAAAAhZAgBAAAAAAAAAAAABTisHoCAIyGwvG2gVB/MDYQig2G4gPBWCieHArFhRCRRDIcT2WeORJNJFK64cvLbJrXlfNf22nXKpzvjlS6HZ4ye6XLUV3uqHaXVboc6+ZWzq8pn+GfCdOj2x/p8EUGQrGBYGwwFB8IxYKx5EgkIXIvBl84brwscnnK7C5HzgYRr8teZrMJIWrKyzRNVLocHqe9udI1r7q8pdrVWl3udrChpAjEk6mjw5EjQ+H2ofBwJB6KJX3heDieCseTQ+F45mmmS0c2h02rzF1GPE67y24TQthsIr10eF32Spej0uWYW+U+saXKsOygMCVS+oH+YF8gNhh6/y0mGEtGE6mUrg9HEumnxZOpQCw59kvVuB2apmU+1DRR4y4TQjgdtgqn3a5pVW5Hpcsxr8bdUuVurXY3VbpsWc9HwfJHEh2+8OGhULc/OhyOh+OpQCwxHIlH4qnge1dF9tUyGvmNpqbcoQlNCOEus1U4HdVuR/oiqXQ5ljZUrGnycoUAAAAAADCbCOcB1js2Et3a4dvWObytc3hbp//wYGiWJ9Ba7T59Ye3pi+pOW1hz0rwaF6mggnF4MLT16PC2o8Nvdg5v6xzuGYlaNZP6Cuela5q+fM6SdXOrrJoDTO3s9j+5q+eZfX0H+oPHRqIpfezs8Iyw27S1zZVnLKo7bWHt6YtqlzdUzP4cYCqeTG3v8r/7/nLUv6PbH46Pk/mbIQ6btqjOc91pC/729IXV7jJL5gBT0UTqf/b3P7nr2CvtQ0d8YV/WZoLZVOV2nLqg9vRFtactrD1tYW1tORcJAAAAAAAzS9OtiCSiWKSLAyy/SHw+n9/vr6mpqaoqtczEvr7gt5/Z99C2zuSY1TyzqdLleOiaDZeuabJ6IhMQjUZ7enpcLldTUzFNe2wvHx765jP7nn6n1+qJ5NA0cdHKxpvPXXr+8gar5zIxnZ2dyWSytbXVbrdbPZdpkEzpL7YNPrnr2JO7jx0amO0tBePauKDmyU9vbK50WT2RCRgcHAwEAnV1dV6v1+q5TI9YMnXfax3f/Z/97UNhq+eSo9LluO60BTecvWRBbTEVr0cikd7eXrfb3djYaPVcpsdQOP77Pb1P7jr29Du9I9FxygFnmaaJr5+//FsfWlVcJYUdHR26rs+fP1+zaN4F8nc7AAAAAKBYkCDEWAok0FCSCcICTA1m2G3av1y25kubllg9kXyVWILwpcOD3/zDvv/e22f1RMayvrX65nOXXnVii8NWHOHbUkoQ7usLXnHf62/3jFg9kbEsqC1/6tMbT2gpmkW7lBKEsWTqP17t+O4f9x8psNRgtjK77aoT5t587rITW4vjIimxBOF9r3V87tEdkURq/Kda52MntPzi6hPLy4pm0SZBCAAAAAAoLrQYBWbbgf7gN/9QoKnBtGRKv/HJ3Xv7Andfsa5Y0j+l4eXDQ//w33uf2VfQqcG0bZ3Dmx98c0e3/58vWW31XNTyuz09m3+5bThiTQ/A/B0ZCp91z5ZfFVs5crGLJ1P3vnrkn/94oJBTg2nxZOrBNzt/81b3Kzectb612urpKCSeTN301Nv3vNhm9UTG95u3utqHQk986pS5VW6r5wIAAAAAQAnipDFgVnX4wmfc/eIDbxwt2Oxgxo9eav+Ln75q1VlECnrh0OA5P3ypKLKDGbf/6eDzBwesnoUqdF18+5n9H/7Z64WfHUwLRBMfue/17//5kNUTUciXntz9uUd3Fn52MCOWTG1+8E2rjkVUUG8gesGPXimK7GDaa0d8p/7ri291+a2eCAAAAAAAJYgKQmD2xJKpq+5/oy8QG/tpNk1bWu9prXbXVzgbKpz1HmeV21HldthtWpnN5nW932vL63KUSRV+saQejOUcJhRJpDLhV184HowlA9HESDThCyf29QV2HRsZLVv5zL6+M+5+8befOXVJvWfCPy0motsf+fgDb8ST43R7K7PbVsypmFvlbqhw1nnK6j3OCqe91lMmhPCU2V2Od/d8VLvl6yJHMJaM5X4vfySR1PVUSqSTT75wfCSa6PBFuv2RzuFITyBqepGkdP3aX21768vn1JSXTeTHxYSNRBN//attj+88Nu4zG72uBbXlC2rKW6rdFU57tdtRXmb3OO017rJM07sKp8NpH+sSiaf0QO6ZZIFoMp5KCSHiST0QTfjC8UAsORJNDIZibx4d7hyOmL5OMqXf9OTuvb2Bu69YW2ZnT9LMeuCNoz/ccnjcp9WUl61q9NZ7nPUVZXUeZ73HWeGyVzjtQojMReKw2Spd4/R1HMrdPpJM6f5oQggRjicj8VQ8qQdiiWMj0fQa0jkcGW27yZ6ewFf+6+17rlyX1w+JKXi9w/fRn2/t8I2TPy6z2+ZVu9PLyByvs7zMXulyVLoc5WX27L9Aasdb9g1vNLoufO9tbgjGksFociSaSL/XdPkjWzt8wZh5nrjDFz7rni0Pbd5w2XGUIwMAAAAAMJ1IEAKz58tPvf1K+5Dpp9wO21+e0LJxQc361uoTWqoqXbP3fzMQTbze4Xvp8NDdL7b1jEQNn93TEzj3hy/t/z8fyCSfMO3iydTHH3ij22+eYqnzlF11YstJ82rWt1avba605B+iNxD9ty2Hf7jlcH/QmN4+MhT+3KM7H7pmw+zPSh2HBkKX/ey10Q4d1DSxobX68rXNl6xuWt3kteS8rg5f+KXDQ8/s6/uP147Ip1/9+OV2r8vxL5etmf2JqWNHt/+zj+wY7bMb5lVfvKpxfWv1+tZqqzZ8vNI+dMdzBx/fdUzebfDDlw7/xeqmv1hdCmf7FaxfvnH0uoffGu3QQY/TfuGKOZevbf7AsoZ5NW7brB+hl0jpO7r8L7cP/eL1jtc7fIbPBqKJK37++ms3nL1hHt1oAQAAAACYNhrn2GMMmqYJISy/SHw+n9/vr6mpqaqqsnYmU/GrbZ2f+OWb8rjLYbvutIVf+8Cy1mqLj9hpHwpfeu+ru46ZJCF+9vETPr1xwexPKU/RaLSnp8flcjU1FWV5wU1P7jZtw1hf4bzpnCVfOGvxbCaMxxCKJX/+esc//PdeOU34y80bNm9otWRWeers7Ewmk62trXa7BfmzKbrk3ld/v6dXHnc5bP940crNJ82bZ/XqkfGrbZ2f/vV2OQnhdTmO/N8Lxi05stDg4GAgEKirq/N6vVbPZcJ84fgpP3jhQH9Q/tQp82v+/sIVl6xumvWMj7mDA8Hb/njwJ6+0G8abKl07bz53jtdpyazyEYlEent73W53Y2PxJTI7hyPLvvM/ptnBVY3e7126+oMr5liyt0AWSaQ+/evtv9rWKX/q4ye2/Pr/O2n2p5S/jo4OXdfnz5+vWfT/rUD+bgcAAAAAFAtKgoDZ8HbPyPW/Mant+NTG+Qe/fv7dV6y1PDsohFhYW77lC2ddvMok9Pkvzx0k3DRDHt7eJWcHbZr2rQ+tarvl/K+fv7xAsoNCCI/T/rkzF93/ifVy5PPzj+5sL55jz4rL1g6faXawpcr93OfO+OoHlhVOdlAIcfX61j/+rzMavS7DeCCayKf7JSZB18Vf/2q7nB1cUu/57d9sfO1LZ1+6plCyg0KIpfUVP/7Y8Z+Q9hP0jEQ/8/B2S6akgtv/dNA0O3jZcU2v3nD2h49rLpDsoBDC7bA9uHnDNy5aKV+0j+zobhsMWTEpAAAAAABKEwlCYMaNRBN/+YuthgO9hBAfWdv8s6tOLITUYEaV2/Ffn9n4v89abBjf0xP4r7fHP/wME7WnJ/CZh9+Sx79x0YpbP1hAqcFsF69q/NwZiwyDw5H4tQ9tG+0wS0zFt5/dLw+esahu641nn7awdvbnM67TF9W+esNZxzVXGsbvfrFttPaGmIrv/nH/U7uN63OF0/7kpzdesrpAi6r/7cp1C2rLDYP/tbvnxy8bKwsxdT0j0Z++avzFapr4hwtXPPGpU6rcBfdGk57bg5s3GFpqJ1P6nc+bVNsDAAAAAIDJIUEIzLjrHn5rT0/AMLi8oeLnV59YOFUdGXabdtdH1q5pMgb3b//TQUvmU8JGoomP/uJ1OXN8yeqmWy5YbsmU8nT7ZWtWNxnbMP750MBtfzpgyXxK2I5uv5z7ueakeX/63Olzqwpob4HBojrPz//qRMNgz0j0/q0dlsynhD27r+/vn94rj//0qhPWSjnawlFTXnb/1evlg+6+/NTuvb3Gt0tM0R3PHwzFktkjdpv22CdP+cZFK2f/rMH8Xb2+9W9PX2gY/I/Xjsg9rgEAAAAAwOSQIARm1m/e6vrP7V2GQY/T/sgnT652F+hxXJombj53qWHwxbbBlw8PWTKfUvXNP+yTM8dL6j0PbDaJmxeU8jL7g5s3OO3Gd5BvP7s/mBuGxhR9+5n9hu6+VW7HXVeslX/5hebk+TXnLWswDN7x3MEU3YqnTzKl//WvtsuVu184a/HV6wv6TFAhxDlL6//uPOMbTTCW/NYz+yyZT6nqD8b+/SVj+eBVJ7R8ZG2zJfOZkBs3LXHYct4NQ7Hkv9GsGAAAAACAaVLoEUag2D0sZQeFED+8ct3xc6tmfzL523xSa4tUn0R92PR6ZEe3YaS8zP7IX59cW16gmeNs61urv3XxShBR/1cAACAASURBVMNgKJb8/98xOS0Pk/N2z8ij0kXyv89cXBRXiBDiK1L6Z19f8IldNCueNi8dHuryRwyDZyyqu+PDayyZz0T944dWbphXbRj87du9sSStaKfN958/ZKhTt2lagRepZyyq83zshBbD4L9taQuxEwUAAAAAgOlAghCYQdFE6r/39hkGrz9t4V+fMt+S+eTPabfdsMl4EuFTu3to/jZd3uryHx4MGQb/7cp161uN4fKCdfO5S89eUmcYfExKaGHSvvPsfkO9XYXTfuM5S6yaz0R9aGXjOmknBM2Kp9GTUvvZpkrXw9eeVFbwBaZpTrvtl58wnjM3HIn/z/5+q6ZUYobC8Xu2tBkGr1zXLB8RWrDkfQZ9gdjPX6dZMQAAAAAA06A4QkhAkfrTgf6R3J37FU779y8/zqr5TMjfnr6wyu3IHknp+h3PE9yfHnId1cYFNZ/aWOiZ42w2TfvCWcYs8u/29EQTVP9Mg/39wV9L9cf/64xFDRVOS+YzCZpmEtx/pX3oz4cGLJlP6Xlip3EZufWC5a3VhXs4pWx1k/fClXMMg3LhLCbnrhfa/JGcP0I0Tdz6wRVWzWcS1rdWf3CF8Qq58/lDcmddAAAAAAAwUSQIgRkkJ4EuWtnocdotmcxEVbvL/vb0hYbB+7ce7ZY62mESnthljIAXxYlQBpesbjJcz/5I4pl9xqpZTMJ3nt1viIC7HbYiKh9M+6sTWxbUlhsGKSKcFju7/QcHgtkjmiYuL8Jl5KPr5hpGnth1LEH6Z8r8kcS//vmQYfDDxzWf0FLQHc5l8j6DgwNBssgAAAAAAEwdCUJgpui6+N3bPYbBDx/XZMlkJueGs5c4c1vVRROpe148bNF0Skf7UPitLr9h8CNrjVHywudx2i+Uajse20ncdqqODIUferPTMPi3py+STwYtcGV22w1nG5Oav9vTs/vYiCXzKSXyBpST59XMrzGmYwvf5WubDW80A8HYC5SZTtk9W9qGwnHDYLGcPpjtgyvmyGdV3v4c+wwAAAAAAJgqEoTATHnjqO/ocE6xnd2m/cXqYkoQtla7P7Gh1TD47y8dDuT2TcVEPbGrO/doObFiTsXqJq9F05mSK4835jWf2t1D9c8U/dOz+2PJnE6tLodNLqMpCtedtqC2vCx7RNcFzYqn7qnd8gaU4isfFELUlJeds7TeMPiY1D0VExKMJb//vLF88OJVjafMr7FkPlP05XOMq9/WDt+fDnBWJQAAAAAAU0KCEJgpT+42xjdPX1g7x1s054el3XzuUk3LGRkKx5/dT1RuSp7cZYzsF2NjwLTL1jTJ1T/PEbedAl0XD79lPH3w0xsXFNfZchmVLsdnz1hkGHxsxzGOEJuKo8ORN476DIMfWVesy8hHpX0Gj+/sTulcIZP3P/v7+oMxw+CtHyy+8sG0q05sWVTnMQw+QpdRAAAAAACmhgQhMFOeKokk0HHNlZdIVY9/Pkjzt8kz7Z5XjAcQptWUl31geYNhkOqfqTgwEPTlNgYss9u++oFlVs1n6r549mKXI+fvjeFIfEe3scsu8vfkrmOG9NnS+oq1zZUWTWeqLl/bbMvditI5HHm13ZgBRf62dgwbRs5f3nDGojpLJjN1Dpv2pU2LDYMvHBq0ZDIAAAAAAJQMEoTAjDg8GJLD30Xa/+0vpdqOF9qIyk3e7/b0GjpwNlW6TltYa9V8pu5KqW7piV3HqP6ZtK0dxrzISfOqF9YW39lyGc2VrrMWGzMTf+aQuSl4UjqAsHjLB4UQzZWuMxcb10BOM50KeRmRyzSLy18e32IY2X1sZECqkgQAAAAAAPkjQQjMiCek6O3qJu+KORWWTGaKzl5iPB1qW+fwCMcQTtYTu4xR78uPM1bPFJcr1s112HLm3+2PvHR4yKr5FDs5sr9xQVEeG5ZNXkZepPpnsnzh+PNSGXfxViGnXbnOmL56ZIfxrFbk742jxgrCIj19MKO12r20PuePqJSubznMMgIAAAAAwOSRIARmxFO7pf6ixVk+KIRYUu+ZX5NTvZRM6aR/JiccT/5hb59hsBh7z2ZrqHDK9WGPcTrUZMm9AU+aV9yRfSHEpiXGK+T5QwOkfybnt2/3xJKp7JFGr+v0Yq5CFkL85Qkthm0ShwdD27uM/xeQj/ahcG8gmj3itNvWza2yaj7TZdNS4zJCl1EAAAAAAKaCBCEw/Xzh+ItSE84i7S+adrYU3JdP0UM+/rC3LxhLZo94XQ75DL+ic6XUvI7qn8lJ6fq2TmNS5OT51ZZMZhqdtrDWcAxhXyC2ty9g1XyKmtxf9LLjmuy2Iq5CFkLMq3afLCXC6TI6OXIV8vEtVYb/gMXo7MXGQmQ6FQMAAAAAMBVFHywACtDv9vTGpfKOUxcWcQ0QUbnp8uRuY2T/4lWN7uKP2165bq6h+qfDF37jqDFIjXG90xsw9O/1uhwr53itms90KS+znyx1OGQZmYRoIvXfchVyMW9AyZD3GTy2w7hgIh9ygrAENhkIswrCN4/S8BwAAAAAgMkr+qg0UICekpJAlx3XVNSHzMlRudeO+MLxpOmTMZpkSv/t21Lv2SLvL5rWWu0+dYGxw+FjOwnuT5jcX3RDa3WxF4elbZKOIaQ94CQ8u7/PkBHxOO3nF38VshDio1KC8O2ekT09lJlO2FbpAMISaFMshFhaX2FoeJ5I6S/T8BwAAAAAgMkiQQhMs1gy9fQ7vYbBYi/vWN1Y2eh1ZY9EE6nXjlAfNjFbDg/2BWLZI2V221+sbrRqPtPrynVSl9G3uiyZSVGTyy5Lo/RHmHUqfu5AvyUzKWpyf9GLVzV6nHZLJjO9ljdUrG2uNAzSZXSidF28KS8jJZEgFEKcKZ13+0IbhcgAAAAAAEwSCUJgmj13YMAfKbXyDk0TZ0lROdoDTpQc2T9naX1teZklk5l2Vx5vzILv7w+2D4UtmUzxMqkgLJnI/qI6Qynk0eHI4cGQVfMpRild/6/dxirkoj7g1kAuInxmn7GfKsZ2aDA4GIpnj7gdtuOai75NcdomaZ/B8wf5UwQAAAAAgEkiQQhMsz9I0cwLls8pgfIOufrnz7QHnKAtbcZOaJcf12TJTGbC0vqKdXOrDIPbOo3pLowhkdK3dxl/YyfPK5EKwiq348QW4xXCMjIhB/pDx0ai2SMOm3ZJqVQhCyE+staYINzWOazrlsylWL0hbTI4vqWqzF4if/DLnYpfO+KLJFKmTwYAAAAAAGMrkXgBUDj29wUNI5euKYXorRyVe/nwYDxJVG4CDgwYr42LVpXCtZFx2kJjrRsJwgnZ0zMSiuUc7VntLls+p8Kq+Uy7s6VlhELkCTkorSEnzaupr3BaMpmZsG5uZUXufhp/JCH/1BjDVpM2xSVShSyEWNNU2ZB7wUcTqdeOcAwhAAAAAACTQYIQmGZyKHNts7Fophid0FJV7c5phhmMJd8k/ZM3Xzg+EMw5gNBh0xbVlls1n5mwvtVY6/bmUa6QCZDP9TxpXrVN00yfXIzkQuQXSBBOxIF+4/vLysbSyR8LIew27XipzJR9BhPyurSMnFJCCULzhucHKUQGAAAAAGAySBAC00nXRZt0pNaSeo8lk5ledpt2xqJawyBRufwdHDBeGIvqPCXT9i1tg9QMk8j+hLwh5VNLqfRHCLFpSb0h3bmvL9jtj1g0neJzsN+4jCytL6kEoTDbZ7Ct02/JTIqRrpv8ukpsGZELkV9oY58BAAAAAACTUVKxacByx0Yihg6BXpej0euyaj7Ty6T6h6hc3g5KpT9LSyJznO34uVUOW07+p3M40pN7ZBrGsLXDpILQkpnMkIYK5+rGSsPgi23sM8iXXKG+tEGFBCH7DPK1ty8wHIlnj3ic9lWNXqvmMxM2SX+KvHR4iIbnAAAAAABMAglCYDodkqrEltR5SqZBoHwM4YuHBlO6bslkio4Kkf3yMvtKKRK9vYvqn7zEkqkd3SVe+iOE2LRU7jJKgjBfJstIye0zoFPxVMibDDa0Vhv2bRS79a3VhobngWiCMlMAAAAAACaBBCEwnQ6VaH/RtFMW1Hic9uyRoXB817ERq+ZTXOQWo6XXG1BQ/TMFO7tHoomcIpg6T9niutJZQNLOXmzcZ/BnjiHMj66Lw4Nhw2DpLSPr5lY6c3sv9waiXfShzU/JtykWQtht2ulSw3NOMwUAAAAAYBJIEALTyaSCsIQShE677dQF8jGEROXyckBqMbqsoXSujQwShJMml/6cPL+mZOqPM85ZakwQ7uweGQzFTZ+MbEeHw+F4TgvrKrdjjtdp1XxmiNNuW91kLERmGclTybcpTjNreE4hMgAAAAAAE0aCEJhOh6T+byVWACSf/UNULk9mZxCWWumPEGJ9a5VhZBvtAfPzxlEpQTiv1Ep/hBCt1W7DtomUrm9hGcmDIlXIwnSfwVEaSI4vmdLlTGrpVRAKs4bnLxwaoOE5AAAAAAATRYIQmE5mFYQlFcA9W4rKUUGYj0gi1eWPZo9oWqklj9PWt1Ybit4ODASHI9SHjW9rhzGyf9L8Eiz9EabB/TaWkfGZbTIowTVEUIg8WXt6A8FYTo1ppcuxYk5J/RGStlFqeD4Yiu+m4TkAAAAAABNEghCYTqXdYlQIcfrCWsPpUMdGont7A1bNp1i0DYQMxQ1zK92G+GZpqCkvW1Sbc83rutjRRdx2HJFESj7OsyQrCIVZgvDPB6kgHJ9JBWFDCeZ+hBAbpK6YJAjz8YbUX3R9a7Wt9PoUC+G02zZKlZF/PsQyAgAAAADAxJAgBKZNOJ7sHolkj9g0bVFpVYl5nHa5qukNekiO56DUe3ZpKR5AmEb1zyTs6PLHk6nskUava0FtuVXzmVHy+WHbu4aTKdoDjsNkGSmtDSgZJ7RUGdJah4dCQ2EKkcexVXovPrlEq5CFEJuk00zlLs0AAAAAAGBsJAiBadM2GDKcgNNS5XI7Su1/2cb5tYaRPb3Uh43DLLJfmqU/ggThpGyVSn9OkoqoSsayhor6Cmf2SDSROjRoLI+DgUmL0RKtIKx0OZY1GAuRWUbGZXKOaSkeQJh2ivSj7emhmQEAAAAAABNTaqkLwEIH+5Xo/7a6yWsYeYeo3HgOSNfGslK8NtLWz6syjLxJjel4tkqR/Y0LSjayL4RY1WhcRvb0sM9gHHKL0WVK7TNgGRlTIqVv7/QbBuUsWslY01RpGHm7Z0SnDhkAAAAAgIkgQQhMm0ODxvKOEjuAME1OEL5NgnA8JqU/pXhtpG2QIvtv94xEEinTJyNta4cx+XFSiR5AmLbaJEHIMjKWgWDMl9tj0+WwtVa7rZrPTKMQeaJ2dY+E48nskWp3WQmXqi+qKzec4+uPJAxt3gEAAAAAwNhIEALTpm0gbBhZXFoHEKbJ2/b39wcNx6fBQG6fWJLVpWlzq9zNla7skURK39VtLG1Bhq6LfX3G9Jh82GcpWdNsUv1jyUyKhVw+uKjOY7dppk8uAWYJQtaQseyV15B51VrJXiDCpmkr5hjfRt8+xjICAAAAAMAEkCAEpo1ZBWEJJoEaKpxzvDnnh8WTKbmFJjKSKb1NCu6XcGGHMAvub+8iuD+qgVAsmlth6XU5WqpKtjhMUEE4cWbnmJbgBpQMeQ3Z2xcIxZKmT4YQottvLJ5bKf0vKzHydqU9vSwjAAAAAABMAAlCYNocMkkClWYAd3WjMSr3DlG50XX4wrHcCsua8rI6T5lV85kFcnCfYwjH0CVF9luqXKbPLBmrzSL7nB82hgNSm+ISPsdUCDHH65yX20A1mdJ3UIg8OrNlpJQ3GQjzo0z5UwQAAAAAgAkgQQhMD10XbVIbyZI8g1CYH0NIX69Ryb0BSzuyL4RYP4/zwyag2x81jMwt9cj+gppyr8uRPRKIJo4OG7s0I0NeRkq7ClmwjExQ17AxQTi31PcZmFQQ8qcIAAAAAAATQYIQmB7dIxFD9zOvy9HoLc3wnJwgJCo3BtV6Awoh1rdWGUZ2dPuTKQrEzMm9AUu+9EfTxErp/DCqf8ZwUKogXNpQ8ssICcIJUHCfgdleJdYQAAAAAAAmgAQhMD3k/qJL6ko2eiu3GOXgnzEclA5oLPkKwiV1FTXlOT1UQ7Hk3j4uEnNygrDkS3+EWfUPhchjULGC0CRBSIvRUXWPKLfPYHlDRZk950amNxDtD8asmg8AAAAAAEWHBCEwPUwShKVbJbam2eQMwhQHiI3CrIKwxCP7miZOaDEWERLcH42CpT/CvBCZFLK5UCx5LDf9Y9O0xaW7ByVtg5Qg3Nntj+ee54oMs2WkxPcZlNltcjk+JyIDAAAAAJA/EoTA9DgkJYFKOEHYWuWudhvrw44McX6YuQPq9QYUtAeciC6TCkIVEoRyITIVhOYODgQNGzDm1bhdjhL/E25BbXlDhTN7JJpIUa1uKhxP+sLx7BGHTTP89koSxxACAAAAADAVJR5dAmZN26BcQViyVWKaJlY2Gn86zv4ZjXxtlHwFoTBNEB4lQWhOLv1pKfXSHyHE6kbOD8uXgv1F00wKkVlGzMhrSFOly27TLJnMbKIQGQAAAACAqSBBCEwPOYBbwhWEwrT6h237ZnoDUX8kkT3idthKvvObEGJ9q9xidJg2tKbMziAs/QrCpQ0Vhhq4gWCsL8D5YSYOylXIJf3+krFhHscQ5kXNKmRh9qcIR5kCAAAAAJA/EoTA9GiTE4QlfUDUGmnbPtU/pg72m5SW2jQVCjsq3bnpn6Fw/OgwfWhNHBsxVv80V5Z+Ctlh05Y3yIXIBPdNmFQQSr+6kiQXIr/VRQWhCXkNUWEbiuBPEQAAAAAApoYEITANwvFk90jO/n2bpi0q6QTh6kbOD8vLQelwShUOIBRCOGzacc3Gi2S/VAgFXzgejiezR8rL7DXlZaM9v5SYFSIT3DdhsoyoUUF4/FxjITJriCmTKuRKJSoIV87xGjbcHB0Oj0QToz0fAAAAAABkI0EITINDAyFD78TWarehe16J4eCfPB2QwtnL1Dg8TAixTCpykn8bkHsDtqjRG1CYLiPsMzBjsoyoUUG4rMFYb93ljwRjydGer6yuYWkZqVZiGfE47Qtry7NHdF3s7eWvEQAAAAAA8lLKCQxg1hxS7ABCIcSSek95mT17xBeOy0UMULY3oBBi+RwShOOTI/uK9AYUQqxuZJ/B+BIpvcNnvEhK/i0mzeWwzavJSXTpujgk1VOiW9UWo8JsnwFdRgEAAAAAyBMJQmAaHBqU+7+VeBLIppmcH7aHbfsSZXsDCrNayf19RPaN5Mi+IqU/Qog1UhNaziCUtQ+F4slU9sgcr7ParUQTWmG2jByQDnaFyT4DNVqMCvNOxSwjAAAAAADkhQQhMA3kCsLFJX0AYZoc3Kf6R3ZQimUr0htQ0GI0P8oeHiaEWDHHa7flNJDsHI4MR+JWzacwyWtIyW9AySYXIu/v543GSF5G1NlnYFKIzF4lAAAAAADyQ4IQmAYKthgV5u0B2bafIxBN9AZy6sPsNm1B7oFJJUyO7B8cCKUMx3Uqr9uvbm9At8Mm76V4h+B+Ljmtrk4VsmCfQX5UbjG6hgpCAAAAAAAmiwQhMA0UTRBy8M945FZ4C2rKnXZVFt5Gr8vQCDEcT3ZJ+TDFdckVhFWqlP4Is2WEQmQDkzbFylQhC/MEIS1Gc8SSqcFQLHvEpmmNXlUShPIacnAgFE2kTJ8MAAAAAACyqRKnBmaOrovDQ2omCNm2Pw7FI/tCiKUNxv8I+/tI/+Qw6Q2oTOmPEGJ1I52Kx3FQ2oCiVotRac1kDTHo9kcNhdmNXqcjt3lvCaspLzNsqkim9H1cJAAAAAAA5IEEITBV3SORUCyZPeJ1OVTYvL9iToUhBHlsJDoY4vyw98kJwmVSwqy00R5wXGYtRpWuIHybfQa5DqrdYnRpQ4VNyz2o0h8Jx5OjPV9BJueYqrSGCPOG5yQIAQAAAAAYHwlCYKrk/qKKRG+ddptcD/dOL8H99x2UWuEpVfojzKp/aA9ocMzk8DCFgvtm54cR2X+frou2QeN/GTnvXsLcDltrdc7/CF03qapUmdymuEWlNUQIsaZZWkY4yhQAAAAAgDyQIASmSk4QLq5TIkEohFjDMYRjOiRF9lXoPZvNpD1gP1fI+0aiiUA0kT3icthqy8tGe37pWdXozS0PE22DIerDMo6NRIJKVqhnM+sySiHy+45JVcjNKrUpFmYVhBQiAwAAAACQDxKEwFQdktpIqpMEks8Pe/sYUbn3HZMKOxbVqnJtpMmlTkT2s3UNG6+Q5kqXpsrZYUIIUeV2tOZWO6V0fW8vF8m7ekZihpGFteVKXSGCTsXj6R6RW4yqlSA0qSBkrxIAAAAAAHkgQQhM1VEpxL9EmTaS8vlh9PXK1h80BvfneJ2WzMQqcmT/4EBI1y2ZSyHqlvqLtlSr1RtQmLcHZJ/Bu/qDxiukoUKtNUQIsXwOhchjMTnHtFKtZUSuINzXF0ikeKcBAAAAAGAcJAiBqeoLGJNAzZWqbN5fbXJ+GJH9d+m6GAjFDYOqBfebKl1Vbkf2SDie7JQKK5UlVxCqdniYEGKVFNyn+iejV3p/Ua2/qDDdZ8BRplk65WVEsX0GTZWu+tz31mgiJR/eCQAAAAAADEgQAlM1GDIGcOuVSQKtbvTacrvdHfGFDWeqKcsXiceTqewRr8tRXma3aj5WWSoV1NIeMKNbypXOVS9BKHcqZp9BhlyFrNomA2HaqZg1JIu8jLDPQLCMAAAAAACQBxKEwFQNyAlCT5klM5l9Hqd9fk1OIFLXxV4OmRNCENl/j9wekARhhtxiVLXDw4QQa5rpVDwq+f1FwWVkab3HsBPl6HA4HE9aNZ9CY9JiVL1lRO4y+jaFyAAAAAAAjIcEITBVg1IbyVqPQgHcNVKX0X19ROWEMCstrVMmc5xtmVRBuJ8U8nuOSaU/6jQozpArCA/0B1OcVCmEEGJA2meg4DJSXmZvrTbuRDk4QANJIYRIpHTDZhRNE00KLiP8KQIAAAAAwMSRIASmRNdNEoTqVBAKIZZKzd84+Cetd4TDw4Qwaw9IBWGGfHhYa3W5JTOx0Byvs9qds2ZGE6kuqShKTX1SgnAOy4gQgmXkPcdGooZsekOF02lX7s/7ZQ0ew0gbKWQAAAAAAMajXAQBmF7+qPGcOY/TrtQ5c4vriMqZo8VoGpH9MdBiNG1xvTEtemiAi0QIIfoDLCNCmKV/WEbSTM4xrVTuAEJh+qcIe5UAAAAAABgPCUJgSgaCcvmgWtHbJfXGqNwhEoRCCBKE7zE5g3AgSP/INIL7aewzGA3LSBr7DEbTJVUht1SruIYskXpZHx2OxHL3bwEAAAAAAAMShMCUDEjnzNVXKNRfVLBtf3Qm14ZiyeO05kpXpcuRPRKKJbukxJiCQrGkP5LIHimz21RbQNLk4D7LSBoJwrTlDV7DCEeZpnVLzXjVrEKucNoNTbyTKf3IUNiq+QAAAAAAUBRIEAJTMiBFb1VLAskVhB2+cJxt+0T2syylPaAZOUvaXOmyaZolk7GWvM+AQuQ0eZ+BmsuISYtRmtAKIYToHqEK+V1sVwIAAAAAYKJIEAJTMhiSWowqFr2tdDkMAetESj8qNT1TkEnyWMniMGFW/UOCUFD6k4XIvil/JBFN5Gy2cDtsFU6FzrjNWNZQYcidH/VFwvGkVfMpHCZtilVdRmh4DgAAAADARJEgBKaENpKC6p9RUEGYwflhpuQKwpYqRUt/iOybkteQOV5Fcz/lZfaW3LxXSte5SIT5PgNFlxH2GQAAAAAAMFEkCIEpkavE6jzKVYktloL7ROUECcIscnvA/SQIzUt/FI3sL6rzGOrDukeoD2MNycE+A1PsM8jgTxEAAAAAACaKBCEwJQPKtxgVQiyRt+1T2EFwPwuRfVO0GM1wO2zNlTk/u66L9qGwVfMpEKwh2ZbPMS4j7DMQLCNZKEQGAAAAAGCiSBACU2JyzpyCLUblqJzy2/ZTuj4UJnn8ruVmCUJdt2QuBYQKwmwmy4jywX0ShNnkfQYHB1RPECZTem8gJ0GoaaJZ1WWEFqMAAAAAAEwUCUJgSgblMwgr1GsxSgWhZDAUT6ZyMmDV7jKnXdEld26Vu9LlyB4JxpLdI8b0mGroDZjNpBBZ+eA+CcJscoJwf5/qCcLeQNTwRlNbXuZ2KPpGM7+mvCz3TXYgGBuOGHfqAAAAAACADEWDCMB0MWkxql4FoUlfr0HV47ZE9g3ki4Quo/QGzMb5YTKTCnWFlxHTQmRLZlI4zNYQdTcZOGzavGrjj982oHqnYgAAAAAAxkCCEJgSArhCiAU15Xablj3SF4iNRBNWzacQkCA0kIP7VP/QYjSbXIh8SPkGkiwj2ZbWV2g57zOiwxcJx5MWTacgyHXYKlchC7OdKOwzAAAAAABgDCQIgSkZkFqM1pUr12K0zG6Tt+0fVjsqR2TfwOz8MKWvkEgi5cvtfWe3aXMUvkiI7MtYRrJ5nHZD9iul64pfJF3D8iYDdauQBccQAgAAAAAwQSQIgcmLJ1OGOjmbptWolyAUQiypN6Z/FI/KmUT2vepG9oX5+WEBS2ZSILr9ET3n7DDR5HUZKnGVYlZBqPQaIkgQSugyakCLUQM6FQMAAAAAMCEkCIHJGwzFDSH+mnKHmiF+gvsGRPYNls+RIvtqN5CU+4u2SGW4SmmtdrscOX+T+COJQemQV6WwjBiY7TNQexmRWowqXkG4hE7FAAAAAABMBAlCYPLk/qL1HkWjt/T1MjA5nNKjYmlphhzZP9AfMuTXldJlUvqjdGTfpmkLa8sNg4oH90kQGpgsI2pfIXIFoeJnEFJBCAAAAADAhJAgBCZPrm6pUzVBKJ8fRgWhYaRe7cj+3Ep3hdOePRKIJo5J5S/qOCZVEDZXKp0gFGadilVeRnRdDMp7UNReRkwKkfvVvUKEEMekBGFzpdIJwiV1UrfzAaV3ogAAAAAAMDYShCUiGo1Gc55hCAAAIABJREFUIpFIJKITCJlFJlViFYpWiVFBaEDpj4GmiaVS+ufwYNiSyRQCDg+TsYxk80XiiVTOG7rX5XA7lP6zTV5D2hROIQshuqR9BooXIs/xOitdjuyRSCIlN2IFAAAAAABpSkeaSsbDDz/sdrvLy8vLy8v37t1r9XQUIrcYVTYJZNrXS+VstZwgnFOhdNxWCLGwzthA8vCQusF9ObKveG9AQYIwV1+A9xejRdIa0uELp1R9p9F1cWyEfQZGi+RlRO0sMgAAAAAAYyBBWPTa29uvv/56q2ehqIGgscWosmcQNnldntwGkqFYsjdgjF2qgwpC2aJaY9y2fUjlCkIShEacH5atP2hcP1lDqt1lNeU5ZfqxZEouxlVEXzAaT6ayR6rdZYZOzgoyaXiu8DICAAAAAMDYSBAWt2QyuXnz5uHhYasnoii5glDZMwg1jeqfHCQIZQtrjdU/7UpXEMqlP6rXmC6R1hCVzyBkDTElFxEeVvWNxqxNsepriDAtRFZ4GQEAAAAAYGwkCIvbN7/5zS1btlg9C3UNmiQIFT2DUJhF5ZQN7idS+nAkp7rUpmm1Cl8baXR+y3ZMOharmQpCqfTnyFA4mVK0geRgSK5QV30NEWaFyIdVLUSmv6gpKggBAAAAAMgfCcIi9sILL/zTP/2T1bNQmkkAV+EKD5OonKrpn4FgzHAqVk25w2HTLJpOoZAThMq2GE3pumH10DTR5FV39UirLS+rlRpIHh02ZlIVYVZBSH2YWCgnCFVN//RJTbybKrlCqCAEAAAAAGACSBAWK5/Pd8011ySTSasnojRawGWT0z+HVW0g2SddGHO8xG1NW4yGdSXLw3zhhKEwrspVVmbnHdmszFTd9A/vLyYWSi1Gle1ULDc55woRpglCVdcQAAAAAADGRTiyWF133XVHjhyxehaqG5DyQPWqnkEoOD8sC5ljUw0VzkqXI3skHE/2SkUwKhgKG68QOtCmyYXIylb/sIyYkluMKluIPCT1MFC5yXnG4jqPlluu3zkciSZSFk0HAAAAAICCRoKwKN17772PPPJI+vGmTZusnYzKBkxajKobnpPPD1N22z6R/dEskIoI1SwzlbsTE9lPo/onw2QZUb4JrRBikVRBqGyLUXkZMXToVZPHaW/MLdlP6foRn6JZZAAAAAAAxkaCsPjs3bv3hhtuSD9ubm6+9957rZ2PygalBl91VBBm6fCF40kVt+330xtwFHL1z+FBFeO2ZglCrhAhSBBmYZ+BKfkMwvahcErJVsVDYRKE5jgRGQAAAACAPJEgLDKxWOyv/uqvQqGQEELTtF/84hdz5syxelKKCkQThqZVLoetwmm3aj6W87occ3ILXJIpvcMXsWo+FiKyPxq5+kfN88PM9hYQ2ReCyH6W/qCx+y7LiBCizlNW7c75zxJNpHpGVOxUzBal0ZjsM1B1GQEAAAAAYGwkCIvM1772te3bt6cf33jjjRdeeKG181GZSX9R5WNzclTu0EDQkplYa0CK23JtpJlW/1gyE2vRYnQ0VBBmsM9gNAvlTsUUIgshWEbeY3KUqarLCAAAAAAAYyNBWEyefvrpH/zgB+nHJ5544ne/+11r56O4ASl6W6989JbgfhqR/dFwfliaSelPOVeIEEIsqvPYNC175NhIJBRLWjUfqyRTui+cyB7RNFFP+kcIIcRCeRmhEFkIQQXhe9irBAAAAABAnkgQFo2enp5PfvKTuq4LIcrLyx966CGnk0iQlcyqxFSP3i6przCMtClZ2EGCcDRyBaGapT9DUulPrfKrR5rLYWupcmWP6LqK6Z+BUMxwrl61u6zMzt9sQpgfZarcFSKoIBwde5UAAAAAAMgTwabioOv6Jz/5yZ6envSHd9555+rVq62dEuTYHBWEi6XCDjW37ZMgHI1JBaF6uR8hxFBYShCWE9l/12LaA7KGjEluMapgp2JdFz55GSFBKIQw26uk7FGmAAAAAACMjQRhcfjBD37w9NNPpx9ffvnln/3sZ62dD4Rpi1Hlu3uxbT/NJLjvVf3aSGv0uiqc9uyRUCzZFzD+ukqeWekPV8i7CO4LEoRjWiS90SiYIPRH44lUTo2p1+VwUmMqhBBiXrXb8KsYCsflfCoAAAAAAHBYPQGMb9u2bV/72tfSj+fOnXvvvfdO44tnXnkMPp9vGr/jJAwPD4+MjGialkqlrJ1Jts5Bv2Gkwp6y/HdlrYYy41FhB/uDs/A7iUajfr/f6XS6XK7xnz3z+gJRw0hZIuzzEZ0UQojWKue+/pxo/s4jPRtaKmf6+/r9/mQyWVFRYbfbx3/2DOv1GzNezlRU8dUjY67HmOR4p2vI56ud6e87PDwcDAbtdnsikRj/2TOsvXfIMFLt1LhC0urlN5q+kVl7o4lGo4XQ4L3dFzGM1LjtXCEZrVWutty08Y72nuObvTP9ff1+v67rPp9Pyz1LFQAAAACAwkSCsNCFQqGrr746FosJITRNu//++xsaGqbx9b/3ve+N+xy/35gJm2UjIyOBQMBms+m5ZzJZ65jPGOL32JKW/66sVaXpDpuWXdYwEIp39fu8zpkta4jFYoFAwOl0ut3uGf1G+Ygm9WAsJ37tsGlaNORXrkzOXEuFY19/zsje7qFl3hn/rz0yMpJKpfx+fyEkCOX647JkxO8noCyEEI0u48VwsD8wC0vryMhIKBSy2+3JpDH/NPs6B0cMI1Vl1r8XF4gamzGD2zEcHR72z3RGJhqNBgKBeDxeCDtRjvYbiyarnBpXSEZrpaMtN8m+p2tokWfGN5mNjIwIIfx+PwlCAAAAAEBRIEFY6L74xS/u3bs3/fimm2664IILpvf1//mf/3mMz6brC2tqaqb3m06Upmk2m626urqycsbLjPIXTB0zjLTUVlr+u7JcS5XrSG5lw7Bwzasx9gycXtFoNBaLOZ3OQvj9d40Ycz91nrLaWusnViCWzql8rj0n+TEQt8/CP1woFEqlUjU1NYWQIPTHjHHqBY11NVXWZx0KweoWTYgj2SNHRxKzcIXouu5wOGpqaioqZna9ykdYGDM9c2sqCmF9KwQ1NcLrtAey9mFEEql4madxhjs5RyKRdHawEP4hEoPGPHpDhbsQJlYgljV4XzyS80bTF7PNwu8nGAzqul5TU0OCEAAAAABQFEgQFrTf/OY3P/vZz9KP169f/53vfGfav8VXv/rVMT6bThBWVVVN+/edkFQqpet6ZWWl5TPJFpAaRrbWVxXUDC2xrMFrSBD2RrTTZ/jXEo1Gw+Gwy+UqhN9/W8AY2W+oKIiJFYgVzdVCdGWPHAulZuH3MzIykkwmq6qqCiFBOBwxlkAtaKzzOK2fWCFYt8CY5unwR2fhCkkkEpqmVVZWer0z3odwXMGksep6bq2XZSRjUZ1n17HcfQYJ+7IZ/v04nc5IJOJ2uwvhHyKmBQwjDZXlhTCxArFqbo0Q3dkjs/NGMzw8rOt6VVUVCUIAAAAAQFGY2b5/mIojR45cf/316ccej+ehhx4qhGNvkDEQMhaK1VfwDyQW13sMI0d8xk5opa1f6h5ZX1FmyUwK08Ja4xVyeFCtKyQUS0YSORWELoeN7GBGS5Xb7cj548QfSQyF1TrCU15GGnh/ybKoTvVlZDBk/B9R5+GN5n2LpSukfUitKwQAAAAAgHyQICxQyWRy8+bNPp8v/eH3v//9VatWWTslGBDANbWgptwwolpUri8QNYw0emkd+b6FtfIVYjzOs7SZ7C3wsHS8T9PEfGkZOaL8MsL7SzZ5GTk8qPwywhWSZYHJG41aawgAAAAAAPkgQVigfv3rX7/44ovpx1dccUWmlBCFY0AuFCPKb5r+USxuS+Z4bCalP4rFbSn9GZdZcJ9lhGXkfXIhsmrpnyFpGaktZxl5HztRAAAAAADIB2cQFqiRkfcP1/nDH/5QU1Mz2jN1Xc/+cOPGjTbb+3nf55577sQTT5yJGSoumdINp4hpmqglyi/EQuX7ehHZH1uT1+Vx2kOxZGYkEE0MBGPqlL8MSqU/dewtyEX6h2VkbIvqVE//sM9gbM2VbrfDlt3M2R9J+MLxGtKoAAAAAABkIUFYBILBYP5Pzs4sCiESicRoz8RUDIXjqdzUbLW7zGHTrJpP4TDbtq9WZH9Aituqk/rKR7qB5N7eQPbg4aGwOr8lIvvjYhkhQTg2ziBkn8HYNE3Mqyk/0J/z93P7UJgEIQAAAAAA2WgxCkyG3F+UEH/avGq3PTdR2heMZpeLlTw5sk/vWYNFap8fNhSWegOyeuRSvFNxLJkaieZs7rFpGg0ks5mcQTgUyt20U+LYZzAu+SJR7ShTAAAAAADGRQVhgaqtrV25cmU+z0ylUvv37898uHjxYqfz/WxEebkxPoJpMSBt3icJlFZmt82tdB0djmRGdF10+MIrG70Wzmo2UfozLrn6R6n6MEp/xqV4p+L+YMyQ66rzlNmpUM/S6HVVOO3BrK0noViyPxib41XlvxLLyLjMOhUrtM8AAAAAAIB8kCAsUB//+Mc//vGP5/NMn89XW1ub+fD3v//9qlWrZmxeeJe8eV+dBonjWljnyU4QCiHah5RKEEYNIyQIDcwaSCoUtx2SVg+KwwwUbzEqV6izhsgW1nre7snpqX54KKRSgpBlZByKLyMAAAAAAOSDFqPAZMgB3Hq6e71H8fRPf4Dg/jgUPz+M3oDjUrxTMVXI+TDpMqpSH1q5UzHLiAEJQgAAAAAAxkWCEJiMASoIRyf39TriUygqJ18bBPcNFI/s0xtwXOlOxdkj6U7FVs1nlpEgzIfK+wwiiVQ4npMvd9ptXhdNQXKYdSpW6I0GAAAAAIB8kCAEJsOsgpAA7rtMtu0rE7cNRBNy3LaSuG0uk8i+SnFbKgjzIQf31dlnQIIwHyqXqst/gbCGyKggBAAAAABgXCQIgckYMKkBIjz3LpWjcqaRfU0zfa665la63Y6cdx9/JCF3zCtVg2HjRcLhYTKWkWwkCGXyPgN1rhCqkPMhdyruDUQNO3gAAAAAAFAcCUJgMkwqCAngvkduMapOYQeR/Xxomphfo26X0SGTCkIuEiOVl5GBIC2sx7eoTt01hCrkfIzSqThi1XwAAAAAAChAJAiByZDDc7QYzZBLfzqHI4mUbslkZhkJwjypfH4Ywf18qNypuD8YNYywjMjkFPJhhSoIjWtILWuIGY4hBAAAAABgbCQIgcmQW4xS4ZHhcdoN4exESu8aVmLbvkmC0MuFYUKu/lEkbhtPpgKxRPaI3aZVuTml0ogWo9lIEMqavC6P0549Eogm5OL+kjQktSmmCtmUyssIAAAAAAD5IEFY9GpqavQsq1atsnpGSjBpMcr+/SzKRuWI7OfJrIGkElfIYCiu5xbT1paX2TimUqJyi1GWkXxomlggdypWZhkxjNRxjqkZlZcRAAAAAADyQYIQmIwBucUoAdwsykbl5NJSIvumzFqMKnGFmPQGJLJvhk7F2VhGTMkXiSLLiHyOKS1GTancqRgAAADA/2PvzqMkrerD/z9P7dXd1fs2PUv3bAwMzICACDqyiiQQFWXTxBzjEVCJeFBjzAk6Xz3g8ZCYY4iIRoLJSc5RhjUuB6Oj4AgygsCwDgzM0tOz9PRSXdVL7dvvj+HXU/XcO0MtTz3r+/VHTvdjU30Z7tyqfD738/kAqAYJQqBmqVwhlSuUP/F7PW0BmgQeQwXhIoZTSkki++5IIdMbsEp0Ki5HglDKvfcMOEaq49qPIgAAAAAAVIkEIVAzSflgi58egeWG3TphLprQ7g0i+1KyyL4r4raS3oCU/hyHO4P7qVwhkdVeQOkIsUkk3LlDFI6Rqq2Q7BBXfBQBAAAAAKBKJAiBms0IbSS5vK/h2glzkgpCEoQyQ+3BgLfiDSieysVT2qi388SEf0d6Ax6PJIvsguC+eAGlmwsox+HOHaJIW4zSqVhG/Cjink7FAAAAAABUgwQhULOokATi8r6Gaws7xAaSVBBKeVRVrO0Yizt/k4jXC4jsH8+KTjfODxN3CGfI8YyIN1FcsEMUbilVrdXFnYoBAAAAAKgGCUKgZmKFBwFcDfHa/lgsVXLBrX2xxWgPyePjENM/Yy7IIou9ATk9jkfsVDwWd359GBdQqifbIc4/QxRajNZC1mXUFZsEAAAAAIBqkCAEaiYGcGkjqdHd4o8EfeVPUrnCVCJj1noMI6kPI257HLJBlc6P24qRfXbI8bizU7HYhJbisOMZjASDPm2n4tm08zsVyxKEbBI5WT8D598zAAAAAACgSiQIgZpFhSRQD7E5gQuv7WcLxUS2UP7E51Hbg6R/5GTpH+fHbWUtRjk95NzZqZjisOp5VHVZh+sKkfPF0lymYpN4VLUj5Dvez7ucpJ+BO8pMAQAAAACoBglCoGayCkICuFouDO6Lkf3OsF9VTVmLDbhwhyiKEiP9UzV3dipmSmVNXHiMxJI5zd+CzrDP6+GdRk6yQ9wxqBIAAAAAgGqQIARqFk/lNU8I4IrE4P7ojMPrw+JCb0A2xgm4M24rNpBkkxyPtFPx5ILDOxXL3l+oMT0usVOx499oxDOkkzPk+CQfRVxQqg4AAAAAQJVIEAI1k7QYZQahQEz/OL7zG8Mpa+LOFqNskpqInYod3x5QrCCkxvQEXNhAUnKG0OT8+Fz4UQQAAAAAgOqRIARqJjYJpAZI5MLOb2KLUTbGCSzrDHkqG7BOLGTS+aJZ6zHGjFD9Q/rnBDhGFHbICa3odN0OESsI2SEnID1DHN+pGAAAAACAKpEgBGomaxLI/X0tF9aHEbetScDrWdIeLH9SKikHHF39UyrRh7Y2kmPEfQ0ku6gPOz6xxajjOxXLakzZIcfV0xoQOxVPC1WYAAAAAAC4EwlCoGYxITzXRR5IIInbOr2wg7htrdyW/plN5wrFitKVSNDn9/JGfFyurCCkxWgNJA0kHX3JQKHGtHbLJWWmTn6jAQAAAACgesQlgZrJKggJz2kNRoJBX8UJE0/lZtPaPzonkZX+sDFORJww5+z0D5H9WrkyQcj7Sw2Wd4Y1nYqPzKed3amYmyi1cuExAgAAAABAlUgQArXJFoqJbKH8idejahpYQVEUj6ou6xBqOxwdlSOyXyu3xW2J7NfKjZ2KJVlkNslxBbyewYi2U/FBRxcRchOlVi7sZwAAAAAAQJVIEAK1kY4QqyxgwFvclv4Re88S2T8xt7UHpIKwVm6rMc0XS3OZik3iUdWOEBdQTsRt6R9uotTKhfcMAAAAAACokruiTmNjYz/84Q8N+EUrV6781Kc+ZcAvgvHE8g5ic8fjtuA+cdtauW0GoVhByA45sSXtwYDXky0c6xh5tFNxR8iZf27xVK5UMaRS6Qj5vB5uoJzIcFfL9tFY+RNnp3+YUlkrt91VAgAAAACgeq5LEH7zm9804BddcMEFJAidSpIEIjZ3HLKonJPjtmLnN+K2J+a2uK2sgpAa0xPxqOqyztDeaMW5MRZLbVjizL9Z7JA6uO0Ykb3RsElOxG0fRQAAAAAAqB4tRoHaSMb/UAN0HLK+Xk6O2zJhrlZi3PbgbLpQLEl/2AFIIdfBVcdILCXUmLJD3o7bEoR0Kq6VrFTdyTsEAAAAAIDqkSAEaiNJEJIEOg7JaChHR+WoLq1VW9CnCW3nCsXx+YxZ62k22enBDnkbrkr/kPupg6SXtcs6FXMT5cSOdioufxJL5ebSebPWAwAAAACAdbirxaiovb393e9+t9fr1fdlN2zYoO8LwjpiTBGrmqv6epVKSpzq0toNd7XMJGfLn+yfSS7rCJm1nqYisl8HVx0jzDGtg6tqTEslBiHXzKOqSztC+yrTxmPx1GmDEbOWBAAAAACARbg9QTg3N/fcc89dddVV11577fnnn697phDOQ4vR6i3vDHtUtVg61jFyYiGTzhdDPgfWLs9lcvnK3pitAW/Qif+m+hruCu84VJkgjKXes9Ks5TQX9WF1cFX6R7yAQgr5bR2vU7HXo5qynqbijaY+w11hTYJwfyxJghAAAAAAAHfFFLq7uwcGBjQPp6amfvCDH1x88cVDQ0Of/exnH3/88WKxaMryYAuSy/uE+I8j4PUMRoLlT0ol5UDcmcF9cWMQ2a+GLP3j4Pow0j81c1WnYlLIdYgEfZprOrlC8YhDOxXLdghnyNsb7mYMIQAAAAAAEu5KEK5fv/7w4cOPP/74Zz/72f7+fs3/Ojk5uZgp/Nu//dtt27aRKYQontaG5zqpIDy+EUlUzpnpH0pL6yNJ/zi5PoxNUjNXtRgV2xTz/lIN8Y1m1KFvNDSyrs+Im0aZAgAAAABQPXclCBVF8Xg8F1544d1333348OHHHnvsM5/5jJgpnJiYuPvuuy+88MJly5bdfPPNTzzxRKlUkr4aXIgQf03E4P6oQ6NykuFhlP5UQZb+ceYOUZgwV5ejnYrLnxztVGzWeppqhvRPXdxzjFBjWh+xVH3UufcMAAAAAAConusShIu8Xu9FF130/e9///Dhw7/97W8//elPi5nC8fHxu+666/zzz1+2bNnnP//5J598kkwhxPBcTysNvo5LjNuOOTZuq+0e2UPntyqs6HRRfZhkk3B6vJ2A17OkXdup2EXHCDukCivENxqH9rKOJtgh9ZDsEIeeIQAAAAAA1MS9CcJFXq/34osv/sEPfnA0UyitKTx8+PB3v/vd9773vcuXL7/lllueeuopMoWuRSfJmkiu7Tu08xuFHfWRzSB0Ztw2mS1o6t4CXk9rwGvWemzEPYMqOUbqww7BiY0Ivayd+lEEAAAAAICakCA85mimcLGmUJopPHTo0J133vme97xneHj4i1/84tNPP23KUmGimFDhQYLwBNwzYU6SOSZuW4W+toAmSZbMFsQqGQcQu0dS+lMl9wT3xQpC3l+qIWkxOuPMN5qZlLhDOEbenrRTcSpXMGs9AAAAAABYBAlCCU2m8NOf/nRfX5/mZw4cOPCd73zn3HPPHRkZ+fKXv/ynP/3JlKXCeJIZUeSBjm/ENYN/GE5Zt+WSLqMODO6T+6mbe8pMxWOkm07FVRAbSLpnh/AJpBrSTsUH4mmz1gMAAAAAgEWQIDyRxe6j4+Pjv/nNb6SZwv3793/7298+55xzVq1a9ZWvfOW5554zZakwRrZQTGYrrpz7PGpbwGfWeqxvuCtceWtfOTSbzhWKx/lxGxPTP0T2qySp/nFicJ/egHVzyQ5RaGFdL8mwW4fOIOQYqdtIt1sangMAAAAAUD0ShFXxer2XXHLJiTOF+/bt+6d/+qezzz571apV//Zv/2bKOtFs4uX9zrBfkwBDuZaAt7eyj2KhWDo068Br+2Lclsh+lVwyP4zisLrJEoQO3CGJbCFTOaUy6PO0MKWyCv1tQc0f1EIm78hOxTGhxSjHSJVccowAAAAAAFATEoS10WQKb7zxRmmm8OGHHzZleWg2yjvqIKZ/Rp1Y/SPuDQo7quSSQZWyGlN2SFVkpT8u2SHkfqoldip2ZBEhFYR1c0+nYgAAAAAAqkeCsE5HM4X//u//Pj4+vnXr1uuvv97vJ0bjfIz/qcOIeG3fiX29CO7XzSUVhET26yZ2Kj4858BOxVwyaIRL+tBKjpEwbzRVEXcILUYBAAAAACBB2Khnn3320Ucf/b//+79cThu1gfPIArjE5t7GsFD945K4LcnjKrkksi+rP+b0qErY7+1rDZY/KRRLBx3XqZgUciNc0kCSQuS6iYXIjnyjAQAAAACgJj6zF2BXzz///JYtW+6///7R0VGz1wLj0GK0Dq5N/xC3rZJLdgiR/UaMdIcnFzLlT0ZnkiuFiL+tiTuEFHL1JIXIzuxDy02UOrnkjQYAAAAAgJqQIKzNK6+8smXLlvvuu2/37t3SHwiFQpdffvkNN9xg8MJgjJgYwCU293ZGxBmEjuvrlSsUFzL58idej9oeZG9UZag95Pd6yjtGRhPZ+Uw+EnTUOxSR/UYMd7U8MxYvf+K84L7YwpoUcvXckP5J54upXKH8id/raQs46pxsnqOdikulY0+Odir2e2mmAgAAAABwL8IKVdm1a9eWLVu2bNmyc+dO6Q8Eg8HLLrvs2muv/dCHPtTW1mbw8mAYSYifCsK3M9zt/LitdGNopqbheLwedag9qNkVB+Kp9QMRs5bUDEypbIQb0j+8vzTCDaNMpVXIvNFUKez39rcFJ+aPFSIXiqUD8fSqHkcVIgMAAAAAUBMShCeyZ8+e+++/f8uWLS+++KL0B/x+/6WXXnrttddeeeWVHR0dBi8PxqPFaB3ECsKxeKpQLHk9zolrMjysQcNdLZp8z/6Y0xKENKFthBsmzEneX9ghVVvhyhQyZ0hNhrvC5QlCRVH2x5IkCAEAAAAAbkaCUGJsbOxoXvDZZ5+V/oDP57v44ouvu+66D3/4w11dXQYvDyYigFuH9pCvK+wv/6PLFYrj85llHSETV6Uvhoc1SJL+cdz8MIL7jRgRxg2OOm6HxFLUmNZvaUfI51HzxWMdJKcT2US20BrwmrgqfVGF3KCRbm2nYucdIwAAAAAA1IQE4THj4+MPPPDAli1btm/fXiqfUvL/83q9F1xwwbXXXnvVVVf19vYav0KYLi4kCDupIKzCSHdL7NBs+ZPRmaSTEoTxNJnjhojpHwfWh0kaSBLcr5YsQeiGHcIxUi2fR13aEdJUDY7FUqcMOKfru7hDOkPskBq4oRAZAAAAAICakCBUpqamHnroofvuu++JJ54oFoviD6iqumnTpuuuu+7qq68eGBgwfoWwDu7v12e4K7yjMkG4P5batNKs5egvmtDGbXtIENZCbA84FndUYUe+WJrLVGwSj6p2hnkLrpYY2T84m3ZYp+IoNaaNWdEV1iYI445KEEaFTyA9reyQGsgGVTrqjQYAAAAAgFq5Nzo5MzPz8MMPb9my5fHHHy8UCuIPqKp67rnnXnvttddee+3Q0JDxK4QFUeFRH1lUzlHX9sXegF1kjmtlqQG8AAAgAElEQVQhK+xwVNx2JpnV1KV3tfg9qnOSW80WCfq6W/zlbVpzheLhufTyTu3Osa8YF1AaM9zV8oQyU/7EYW80YpviHnZILUa6tceF8wqRAQAAAACoiesShLOzsz/96U+3bNmydevWXE4bajnq7LPPvu6666699toVK1YYvDxYnGQGIQnCKgwLUTmHTZgTM8eU/tREkkJ2VtxWrDHt5uio0XBXy0xSW4jspAQhUyob5PhRpuIOoZd1TaggBAAAAABAw10Jwh07dpx33nmZTEb6v55xxhlH84KrVq0yeGGwCzFBSAC3GmLcdtTphR1kjmuyoiusqkp5jd34fCZXKPq9HvMWpSe6EzfO8Z2KOUYa5PgJcxwjDXJDp2IAAAAAAGrirgRhIpEQs4OnnXbaddddd911161du9aUVcEusoViMlvRjdbnUVsD7vpLVJ8Rp1/bp7S0QSGfZ6AteGT+2PlcKJbG4qnVPa0mrkpHkh3C3YIajXRrjxEntQcsFEvzmXz5E1VVOjlGaiHWh406642GGtMGRYK+ntZANHEsz5orFA/NpsUhuAAAAAAAuITbcxvt7e1er/fBBx988MEHdXzZs88++z/+4z90fEFYgWQAYYufIWLVEK/tj8VSpZLimD89Cjsat6IrXJ4gVBRldMY5CcLykPRRva3skNo4uz4snsoVK8dUdoT8FDbVRFKq7qAUsiI7RphBWKvhrrDmj3F/LEWCEAAAAADgWm5PEM7Nzb344ou6v2xnZ6furwnT0f+tbj2tgUjQV14fk8oVJhcyA5GgiavSEYUdjVvZ3fLMWLz8iZOC+1F2SMOcPT9shv7VDRvubtF0Kj48l07niyGfUzoVp8SbKGyS2gx3hZ8/qOlUnHyv0m3WegAAAAAAMJdDgiaAAWJCbK4rzOX9ajl7DKFYQUgDyVpJGkg6aIfITg92SG1Gup1cHyY5Q9ghNQr5PIORUPmTUkkZc1IWWXLPgA8htREbno/OOGeHAAAAAABQKxKEQLWYItYISfWPg6Jy4t4gblsrMW67L+qk9A87pFHiGXK0U7EziC2s2SF1WOnoQZWUqjduWLhn4KROxQAAAAAA1MpdLUbXrFnz/e9/34BfNDQ0ZMBvgcEkMwip8KiapPrHKVG5Uom9oYOVPWIFoXNSyJLhYcwgrFF3i7895JtLH+tUnM4XJxYyg47oVEzuRxcj3eGnRiue7HNKgjBbKC6UtelWFMXnUTtCbJLaOLtTMQAAAAAAtXJXgnBwcPAzn/mM2auAXVFB2AgHR+XmM/l8saKOqTXgDTpl6pVhRoQmtE6vIOT0qNmKzvArR+bLn+yPJZ2SIKRNsQ4cXEEoXjLoavGrqilrsTFZi1GH7BAAAAAAAOpACBuolqwFHAHcaokzCB3TYlSM7NMbsA7D3S2eymj3+Hw6nS+atR59yTYJp0fNJIMqnXKMSNoUM+O2duIOcUwFIW2KdSG2GB2Lp4qOaVUMAAAAAECNSBAC1ZJUEBLArZoYlXNMi1Exbkt/0TqEfB5NKVippIw5pcyU4L4uJPcMnHKMSNoUk0KunViI7JgUMlXIuugK+zV9WTP54sR8xqz1AAAAAABgLhKEQLVkCULCc9US+3o5psWopPSHuG1dXFX900OCsHYO7lQ8wzGiB3GUqYPOEKEKmStKdVkhuWfgkGMEAAAAAIBauWsGYfVyudzk5GQ0Gp2eno5Go6FQqL+/v6+vb3BwsKVFG36CS1Dh0Yj+tmBLwJvMFhafLGTy0US2p9X2IU6Gh+llZXf4qdGKJ86YDpUvluYyFaeHR1U7Qrz/1mxELER2xA5RpO8vpH9qt6Iz7PWohbKhsJMLmUS20BrwmrgqXUguGbTyRlOPke7wy+Nz5U9GZ5LnDneZtR4AAAAAAExEgPKYQqHwxBNPbNu2bdu2bX/84x9TKcmFYo/Hc+aZZ15yySWXXHLJRRdd5PPxB+gisZSQB6KCsGqqqizvDO+aXCh/uD+WckCCUFZBaPt/KVPIJsw5If0zk8xqRlx1hn1ej3qcH8dxObmCkCmVevB7PUPtoQPxil2xP5ZcPxAxa0l6iTLsVicOPkYAAAAAAKgVLUYVRVEWFhbuvPPONWvWXHTRRV//+tcff/xxaXZQUZRisfjss8/ecccd73//+0866aTvf//7mQyTS9xCMmqOAG4tJNOhHDE/jNFQenFqi1EGEOrFwRWEvL/oZaVDjxFZjSk7pB6yUaYkCAEAAAAALuX2BGGpVLrzzjuXL19+yy23jI6O1vTP7tu376abbhoZGfnpT3/anNXBWgjPNcip1/bZGHoRI/ujM07YIRSH6aWvNdhS2SsykS1EE9o/XjuiEFkv4hhChxwjQg8DB9Tfm8KppeoAAAAAANTB1QnCiYmJyy+//JZbbonH43W/yJEjR6688sovfOELuZw2ugeHEQO45IFqMixU/+x3RtxWnEHI8LC6iPVhzij9kQwPI/dTF1VVVnSKhchOOEZiYhaZ95e6SErVHXGMRBOUquuDCkIAAAAAABa5d4Tea6+9dtFFF01MTGiee73ejRs3vuc973nXu941MDDQ3d3d3d2dSCSmp6enp6efffbZ3//+988++6wmHfiv//qvO3bs+NWvfhUMBg38l4BxMvliKlcof+L3eloD7v0bVIcRoYLQGS1GZaU/xG3rsaIz7PWoheKxeX2TC5lEttBaWTRmO2KJGzukbsNd4de1o0yTZy3rMGs9ukhmC+l8sfxJ0Odpsfm2N4tzOxUzg1AfTv0oAgAAAABAHVya3jh48OBll12myQ4uX77805/+9A033NDf33+8f/Dqq69WFGVmZubuu+++6667yl9h27Ztn/jEJ37yk5+oqtq8lcMsYhKoM+zjP3VNZNf2nRCVYwahXvxez9KO0FhlMcf+WHL9QMSsJelihu6R+pG1B7R99Q87REeyTsW80eCYvrZAa8CbyB678pXMFqYWsn1t/KUDAAAAALiOG1uMzs/P/9mf/dmBAwcWnwQCgW9+85t79+699dZbT5AdXNTd3f3Vr351dHT085//fHk6cMuWLV/72teasmiYTZwzRwC3Vo6M7CvSFqPsjXqJtR0OqP6RnR5E9uvkyHsGYn9R+lfXzT0VhHQqrtsKJx4jAAAAAADUwY0Jwttvv/3VV19d/Hb16tXPP//8P/7jP/p8tdVThkKhO++88xe/+EVLy7Fo1B133PH666/rtlZYRixFALdRS9qDAW/FmRNP5WbTth/eSYtRHa3scWAWOUpvQP0MCylkB8wPozhMR8s6Qv7KN5qZpBPeaKJsEv2Ix4gzRpkCAAAAAFAr1yUI9+3bd+eddy5+OzIy8thjj5166ql1v+Dll19+//33LyYX8/n83//93ze6SliPmAQiQVgrj6ou7xSv7ds+KkdwX0cjQmGHA9oDskN0NNLtih3SxQ6pl9ejLu8MaR7a/Y0mVyguZPLlT7wetT3k0jEBjROPkf32P0YAAAAAAKiD6xKEt956ayaTOfp1OBzeunXrihUrGnzNK6644o477lj89uc///n27dsbfE1YjdgksJMEYe3EqNy+qL2jcrlCMZHVxm0jQeK2dRLnhzmgPaCkgSTpn3pJSn/sX2Ma5wKKriTHiM3faMQUcmfY72EMcr3EXtZUEAIAAAAA3MldCcJkMvm///u/i99+9atfXbNmjS6v/PnPf/7kk09e/HbLli26vCysgxogXThvOtRMMlcqVTzpIm7bANmgSnvvEEXWG5DhYXVb0h4M+So+usymc+L5bC9iE1p2SCMkx4jNJ8zJdgifQOon+Shi8xQyAAAAAAD1cVeC8Ne//nUq9dYd4WXLlv3d3/2dXq/s8/luu+22xW9//vOf6/XKsAhJi1HCc7VbJUyY22vzqBy9Z/XlvBSyoijRhBDcbyX9UyePqoqbZG80Ycpi9CJWqPP+0ghJfZjNy0xlV5Q4Q+onfhTZY/MzBAAAAACA+rgrQfizn/1s8etrrrkmENAzvHLFFVe0tLwVcdi7d+/OnTt1fHGYThLADROeq9kqSWTf3umfGaGwg7htI5Z1hPzeijemmWRuNm3v+jBJcJ8scgNkwX2bHyMpoQktO6QBkl7WNr9nILlkwBtNA8SPIqMzyaKmGwAAAAAAAC7grgThCy+8sPj11Vdfre+Lh8PhSy+9dPHbV155Rd/Xh7liBHD1sKqnVfNk74y9r+2LuR9Kfxrh9ajLO0Oah/vtPB0qXyzNZSo2iUdVmWDaCMkxYvPqH/ECCvcMGuGGGYQ0OW9ET2tAcwin88XDcxmz1gMAAAAAgFnclSA8cuTI4tdnnHGG7q+/YcMG6e+CA9BiVBdi6c++qL2v7Ysbg7htg8T2gLYO7seEKZUdIZ/Xw5TK+knSPzavDyP9oy/ndSqmVF134jFi93sGAAAAAADUwUUJwmKxODU1dfTrjo6OxXagOlqyZMni1yQIHUbWYpQAbs16WwPtIV/5k3S+OG7na/vEbXW3Usgij8ZsHNxnh+jOFaNMSRA2YKg9FPJVfL6dz+TFLKyNcBNFd847RgAAAAAAqIOLEoSzs7P5fP7o1/39/c34Fb29vYtfR6PRZvwKmIXwnF4cFpUjc6w7sYJwdMbGLUbFtERPKzukIQ47QxSyyHpTVWVFl6PGEEYlO4RjpCGSfgZ23iEAAAAAANTHRQnC9vZ2j+etf9+ZmZlm/Iryl+3q6mrGr4BZJHkgArh1WdXtqPlhzCDU3Ui34yP7HB0NWSX0BhyLp3KFoimL0YXkGOGeQWPELqOjdj5GZE1oOUYaImsxauMdAgAAAABAfVyUIPR6vYsVftFoNJPRv6vh+Pj44tcDAwO6vz5MJGkBRwC3Lg67ti8pLWVjNEaM2zouss8OaUhb0NffFix/UiiWxuJ2LTMtFEtz6Xz5E1VVOjlGGuOwQZUcI7pb3SPeVbLxDgEAAAAAoD4uShAqlTMCX331Vd1f/7XXXlv8mgShk6TzxVSuUP7E7/W0BrxmrcfWHHZtn96AuhNLf9gh0Fjd65xNEk/liqVS+ZP2oN/nUc1ajzM4roJQe4z0tHKMNES8q7THzs0MAAAAAACoj7sShKeddtri1w888IC+L57NZn/1q18tfrt+/Xp9Xx8milM+qJ/Vvdpr+3tsG9lXZBWElP40aEl7MOSreG+az+SjCW183C4oPm4Gscvonmm7HiOSHUJxWMMcX0HIMdKg4a6wtzINPzGfWcjkj/fzAAAAAAA4krsShB/84AcXv77//vsLhcIJfrhWW7dunZubO/r10NDQGWecoeOLw1zi5X0CuHUTr+3begbh9IJ2b/RS2NEYj6qu6NKOIdwfs2sDSTG12dPK6dGoVUJ7QPumf8QplT28vzRMHGU6OmPXM0SRHyO80TTE7/Us73TUvFsAAAAAAOrgrgThn//5nweDbw0u2rt371133aXXK5dKpc2bNy9+e8UVV+j1yrCCGJf39TMiXttfyCSyembrjSQJ7pP+aZjYHtC+cVvZ8DAi+42SdSq26z2DaEK7Q8j9NE5aQVjZydU2coXiQraiss3rUTtCPrPW4xhiIbJ9OxUDAAAAAFAfdyUII5HIBz7wgcVvN2/efPDgQV1e+Uc/+tHzzz+/+O0111yjy8vCImgSqCO/17OsI1T+pFSya/qnWCrFUxVxW1Vlb+hADO7bd36YZHgYCcKGSQqRbbtDZBWE7JBG9bcFNXOCU7nCVCJj1noaMZPMaVKbnWG/R2VKZaOcdIwAAAAAAFAfdyUIFUX55je/6fe/Fb6fm5u77LLLpqamGnzNJ5988nOf+9zit+eff/6ll17a4GvCUsQEYTct4Bogtge0afVPLJkrVgZu24N+v9d156ruxArCUfu2GJVUEHJ6NEqM7Nt3BiHdI5tkuMshhchiFTJNaHWxUjhG9lFBCAAAAABwGdcFsk866aSbbrpp8dudO3e+733v279/f90vuH379g984APpdHrxyR133NHQEmE9khajVHg0QDaG0JZROXI/TTIizCC0b9xWrCCkxWjjlnaEQr6KDzCz6ZyYR7EFWRNajhEdyAqRbXnPQKwx5QzRBS1GAQAAAABwXYJQUZSvf/3ra9euXfz2pZde2rhx47333lvr6xQKhdtuu+3888+Px+OLD2+44YZzzz1Xn4XCMmgxqi/pdChTVtIgSfdISn/0IBZ2jMZsuUMU0j/N4VHVYaeMIaTFaJOMdAv3DJzyRsMZoovVvUIzgxlbniEAAAAAANTNjQnCzs7OX/3qV4ODg4tP5ubmrr/++jPOOOPee+9Npd7+gnkikbj77rtPOeWUzZs35/PHJpBdfPHF3/ve95qyaJgqLiQIO0kQNmC1U9oDkvtpEmkKWTOFyxYKxdJcWjulktNDF5JjxJ7VPxwjTSI5Ruy5QyQ9DDhD9CBWEO6LJot2fKcBAAAAAKBePrMXYI6VK1f+8pe/vPjii2Ox2OLDF1988frrr//iF7+4adOmTZs2vfOd7xwYGOjp6Wlvb5+fn49Go5OTk88888zvf//7J598cn5+XvOap5566kMPPbQ44BBOMrWQ0TwhgNsIyQxCe17bp/SnSfpag60BbyJbWHySzBYmFzIDkaCJq6pDPCWZUunzqGatx0kcM8qUGYRNIhtlassE4YxkCjI7RAc9rYGOkH82feyPN50vHp7LLOsImbgqAAAAAACM5NIEoaIoZ5xxxo4dO/7yL//yqaeeKn8+Nzf36KOPPvroozW92nXXXXfPPfdEIhFd1wirmBICuP1tNktUWIo4g3B0JlUqKard8iZE9ptEVZWV3S2vHKm4h7EnmrBdglCcUtnTyt0CfTholCkNJJtC3CG7p22ZQqbFaPOs6mnZcWi2/MneaIIEIQAAAADAPdzYYnTR8PDwtm3bvvrVrwaD9QedI5HI9773vfvuu4/soINNzGsrCPvbyAPVr7c10B6quJ2QyhXG59Nmradu02KCkLitTtYI06F227APrSSFTOmPThwzylQ8Rnq5Z6CHtcIZsj+WyhaKpiymEdGEeM+AHaIPx9wzAAAAAACgPq5OECqK4vP5brvtttHR0X/4h3/o7Oys6Z/t6en5xje+sX///ptuuqlJy4NFTC5QQagzZ0TlxOFhxG31IksQ2q/6ZyZF6U+zOOMMUaTHCFlkPbQFfZqa40KxtD/29nOmrUZWQcgO0Yd4jNj0ngEAAAAAAPVxe4LwqMHBwW9961tjY2M/+clPbrzxxrVr157gh9esWXPjjTdu2bJlbGxs8+bNXV1dhq0TpiiVJBUefVQQNmZVtzg/zH5ROWYQNs9qYcKcLROEQu6HyL5eVgkVhGPxVM5u9WHZQnEhky9/4vOoHSGyyPoQ7xm8OeWEY4RSdb2Ihch2/CgCAAAAAEDd3DuDUBSJRD760Y9+9KMfVRRlYmLi4MGD09PT09PT8Xi8o6Ojt7e3t7d32bJlg4ODZq8UhoqlcpqgcyToC/u9Zq3HGWTVP/aL2zKDsHnW9DphfphY+sMO0Utb0NffFpxcONb/uVAsjcVTYmrZysQzpKvFb7tprJa1prf1D/tmyp/Y8RiRTankGNHHKuG4IEEIAAAAAHAVEoRyAwMDAwMDZq8CljC1IA4gpL9oo5xxbV9WQUhhhz7W9rVpnrxpw8i+rIKQHaKbVT0tk5Xn895o0mYJQvqLNtMaYTPsseFNFI6R5lntiLtKAAAAAADUjRajwNsQBxDSX7RxkgpCGw7+iSZoINksyztDIV/FO1Q8lRPLrSxOjOx3hYns60YW3LfZMUIVclOJhcj2bDFKBWGzDHeFvZ6Kit0j8xlN118AAAAAAByMBCHwNiapIGwCZ/T1klQQtpL+0YdHVVcK6R/bFRHSYrSpHHCMyLpHcoboRpxBaLsWo/liab4yX+VR1c4w/T/04fd6lneGNQ/32fC6EgAAAAAA9SFBCLyNKaGCsJ8KwoaNdIvX9tPJbMGs9dQhky9qFuzzqO1Bgvu6cUBwX6wPI/2jI1mnYtvvEFqM6mhtn/YM2TeT1AwVtriZZLZUqnjS1eL3MKZSP6sc0fAcAAAAAID6cAf5mFKp9MYbbzz99NPPPPPMiy++GI1GY7FYPB7PZrMdHR1dXV1dXV3Dw8PnnHPOOeecc/bZZ0ciEbOXDCOIFYR9VBA2LOD1LO0IjcVSi09KJWXfTPLUQdv8tZKV/gQI2+pInB9muwShZHhYmPSPbhzQqVjcIdSY6qgj5O9tDUyXZWHzxdJYPGWjQZWSRta0KdbVqp6Wx3ZXPLHdMQIAAAAAQN1IECqKokxOTv7Xf/3XPffcs3v3bukPxGKxWCymKMpzzz338MMPK4oSCAQ+8pGP3HjjjRdeeKFKTsDRpoQKD2YQ6mJVd0t5glBRlL1RWyUIJcPDiNvqSawg3GO3wg5JgpAKQv2ICcI90zbbIZI2xewQXa3ta52uPKt3TydtlCBkAGGzib2s99ntjQYAAAAAgLq5vcVoMpn84he/uGzZsq985SvHyw5KZbPZ++677+KLL96wYcMf/vCH5q0QpmMGYZNI5ofN2Kk+LCqW/hC31ZWYIHxzyk47RGEGYZMt7QiFfBUfY2bTOTEpa2VifRg7RF92L0TmkkGz0WIUAAAAAOBmrk4Qbtu2bcOGDd/5zndyufrjia+++up73/vem2++OZVKvf1Pw4aYQdgkYvXPvqid/hLJKgjZGHqSzCC01YS5QrE0m86XP1FVpZP2gPrxqOqwzccQSjsVm7ISp1pt81GmXDJoNrvfVQIAAAAAoBHubTH66KOPfvjDH85mtZEXRVG6u7tPP/301atXt7e3t7e3B4PBubm5ubm5aDT60ksv7dq1q1AolP98qVS66667du3a9bOf/SwUChn1bwCDSGYQtlJBqANJe0DbR/bJ/ehpuCsc8HqyheLik2giG0vlumySY4ulcsVSqfxJR8jv89CSWk+rult2TS6UP9kbTZ69vNOs9dRKkv7hGNHVWpsnCMVSdd5o9LVa1mK0WCp5GB8AAAAAAHABlyYIt27d+pGPfESTHdy4cePHP/7xa665ZmRk5AT/bDqdfuKJJ/7nf/7n4YcfTiSOhZmOvuZPf/pTv5/YjaNIWoxGuL+vAzFBaK++XmLnN1qM6svrUVf2aNM/u6cT77RJ+ofegAYQ68P2ztjpGKHFaLNJCpFtlSCMpbQpZLvckLCLntZAZ9gfTx37m5jOF8fnMks7uPAHAAAAAHA+N7YYnZ2d/eu//utM5ljWZ/ny5Q899NCLL7745S9/+cTZQUVRQqHQpZde+t///d/79u37m7/5G7XsivEvf/nLf/mXf2nSsmGKQrGkifKrqtJHAFcPq7qFyH40UVlwZWm0GDWAreeHicVhdI/U3UrHtRjlnoG+1vaJbzTJQtE27zSyewbsEJ2Jx4i9+hkAAAAAAFA3NyYIv/a1r01MTCx+e9FFF+3cufMjH/lIra/T19f3n//5n4888kggcCxYc/vttx84cECfhcICosmsJpLYGfL7vW78i6O7vrZAe6iiiDmdL47Pp81aT61kkX0KO3QmVv+8OWWbuC0VhAaweyFyjE3SZF1hv+aPNFsojsVtM++WmygGsPsxAgAAAABA3VyX5zh06NDdd9+9+O273/3uX/ziF21tbXW/4Ic+9KEHHnhgsY4wkUjcfvvtja4SljG1oI3N9bURm9ONrPrHNlE5Mf3TRWGH3tb0aneIjSoIYylhh9AbUG/i/LA99jlD5jP58hGbiqKE/d6w32vWepxqba/2Mx7HCMqRIAQAAAAAuJbrEoQPP/xwoVA4+rXf7//Rj37U0qKNC9Tqgx/84Cc+8YnFbx955JHFXwG7mxIu7/e1BU1ZiSOtFhpIvjG1IP1JCxIbSFJBqDvJ/DD7dH6T7BBKf/S2srulrM+3oijKgXgqnS8e58etRVIcxhnSBLa+Z0AhsgFs/VEEAAAAAIBGuC5B+Mgjjyx+feONN65bt06Xl73jjjv8/rdCNlNTU08++aQuLwvTTcxnNE8GSBDqR5wO9YZ9GkhOC8H9XtI/epMkCO0T2Zelf9ghOmsL+pZEQuVPCsXSHptsEvEMIYXcDE47RtgkerP1RxEAAAAAABrhe/sfcZbt27cvfn3NNdfo9bL9/f0XXnjh1q1bj377hz/84YILLtDrxTXefPPNZ599dnJyMhaLBQKB/v7+tWvXnnfeeeWjEKGXyQVtgrA/wp+zbtb1aTu/7Zq0zbX9aEJb2EHcVncj3S1+rydX1oZxaiE7m851hGxQQ0PpjzHW9bcdnquYXbprauHUwYhZ66meuENIITfDakmC0DYNJNkkBhA/irwxtVAqKZrqZAAAAAAAnMddCcJYLJZOvxVGjEQimzZt0vHFL7/88sUE4fj4uI6vfNTU1NR3v/vde+6558iRI+L/2tLScsUVV/zDP/zDmWeeqfuvdjPJDMJWKgh1s65fG7fdZZO+XqWSZDRUN3Fbvfk86nBXWFPus3s6edayDrOWVL2o0GKUHdIM6/pbH989Xf7ELvcMxB3CJYNmWCM0kLRLBWG+WJrLVLzReFS1I+Suj+4GGGoPRYK++Ux+8UkiWzg0l17WETrBPwUAAAAAgAO4q8Voed5u+fLlXq9XxxcfGRmR/iJdPPzww6tXr77tttuk2UFFUZLJ5AMPPHDWWWd96lOfSiZtczXe+qYS2grCvjYCuLo5uV9b5bNnOpkvlkxZTE3mMrnysjZFUVoD3pDPXSeqMezbHpAKQmNICpFt0h5Q1j2SHaI/sYHknmiiWLLBG81MMqtZZmfY5/VQ16YzVZVsErvcMwAAAAAAoBHuCmfHYrHFr/v7+/V98cHBwcWvo9Gojq989913X3XVVfPz89X88I9+9KN3v/vd8XhcxwW42eS8NoDbzwxC/XS3+DUVM9lCcXTGBhlu+osaZq2NE4RiBSHpH/2t67drp+Io3SMN0dsa6ApX/NXL5O/yXksAACAASURBVIsH4+nj/bx1yC4ZsEOawtYNzwEAAAAAqJu7+hSVym5it7Zqg84Nams7Flwo6Xcz/amnnrrlllvKn6xdu/aDH/zgqaeeevLJJ09MTLz00kuPPfbYtm3bFn/gxRdfvPLKK3/zm9/4fO7679sMkhmEVBDqal1f21OJmfInu6YWxKIxq5H0BiRu2xyre1s0T+yTICT9YwT7RvbFCkLSP02yurf12QMVF6fenE6s6AqbtZ4qccnAMJJ7BjZpeA4AAAAAQCPcVUFoR5/73OdyuWNR5ltvvXXnzp3f/va3P/nJT5533nlXXnnl5s2bf/e73/34xz8eGBhY/LFt27b94Ac/MGO9TjMtBHB7KRTTlWQM4aQN0j9i7kdToQK9rO3Vxm3ftE2CUHt6dBHcb4LhrnCwsrtvLJUT73ZYkGyOKTukKWzaqVjcIbzRNMk6WowCAAAAAFyJBKGlbd26dceOHYvf3nzzzbfffru0LvBjH/vYtm3bwuFj1+G/8Y1vZDI2iJBanKyCkBajerJp9Y9seBiZ46awaWS/UCzFU/nyJ6pKcL8pvB5V3CRv2GEMoeQYoYKwOWzaqZhe1oaRVRDaYIcAAAAAANAgEoSW9uMf/3jx656enjvuuOMEP7xu3bp//ud/Xvx2enr6sccea+LiXCBXKGru73tUlQpCfZ0kJAjfsENfL7HFKBujSVZ2h30etfzJxHxmPpM/3s9bxEwyV6zsNd0R8vu9vOc2xUlC9Y8tjhEq1A2zukfbqXhP1AbpnynhihI7pElO6mtTK95nlLFYKp0vmrQcAAAAAAAMQrDS0n73u98tfv3JT36yvEBQ6qabbhocHFz8duvWrU1amEtMJbKaaZI9rX5vZa4CDZK0GLXDtX1ZBSHFYU3h93rEUWF7ppOmLKZ6pJCNJCtEtsMxIo4yZZM0h1hj+qYt3miYY2qU1oB3qD1U/qRYKtmizBQAAAAAgEaQILSuiYmJ0dHRxW/f//73v+0/oqrqBRdcsPjtgQMHmrEw95ic10Zv6S+quzW9rZr6sPG59Fza6vVhYty2m7ht00iC+9NWrw8Ti8OI7DePrD2g1XeIImsgyQzCJhHPkD3RpKbG14LEmyjcM2gemzY8BwAAAACgESQIrevgwYPl355zzjnV/FO9vb2LX8fjcZ3X5DJTCW13rz5ic3oLeD3DXdrmb9ZvD8jwMCPZcQwhNaZGsmNkP18szWW0LayZUtkkA5FgR6jizzaVKxyes/qcZsk9Az6ENI1N7xkAAAAAANAIEoTWNTExsfh1e3t7R0dHNf9UedXgypUr9V+Wm0wuCBWEESoI9WfHLqMzkt6ARPabRVr9Y8pKqkeLUSOJkf090WSuYOn5YTNJbQvrjpCPFtbNs7pXexPFBvcMxDcaakybRvJRxPL3DAAAAAAAaJDP7AWY5umnn37f+96n4wsmEjpHmt7xjnf88pe/PPp1S4s2sCVVLBZfeOGFxW9POukkfZfkNpML2vICWow2w7q+tkdfmyx/Yv2oHKOhjLSmx37zw2gxaqTuFn9va6D8zzxXKI7GUmuF1LJ1zIhnCCnkZlrT2/r8wdnyJ7unExeu7jFrPdWQtRjlQ0iz2HSUKQAAAAAAjXBvgnB6evq3v/2t2as4kSVLlixZsqSmf+TBBx8cGxtb/Pass87Se1HuMiVUENJitBns2NdL1kCSvdEs9mwxSvrHUOv626b3zZQ/2TW5YOUEIW2KDSbeM7D+MSJrMUoFYbPY8aMIAAAAAAANosWoc0Sj0VtvvXXx27PPPvuiiy4ycT0OMCVUEPa1EcDVnyQqZ/kKwlhKm/5heFjzrOpp0bReHJ9PL2TyZq2nGpImtKR/msl2YwjFCsJuukc2k3jPwPqFyOIbTTfHSNMMd4VDvor/tyieyk3MW31QJQAAAAAAjSBB6BCJROIv/uIvdu/evfhk8+bNJq7HGaaEy/t9tBhtgnV9Qtx2OlHUjOeyknyxNJuuiNt6VJUEYfMEfZ7lneHyJ6WS8rq10z+U/hhMNsrU0jtEMl6OGtNmWiu80bw2OW/KSqo0n8ln8hVzNEM+T2vAa9Z6HM+jqmIW+Q3LZ5EBAAAAAGiEu1qMdnZ2XnLJJQb8otNPP92A37Loueee+/jHP/76668vPrnqqqs+8IEPVPPPrl69+m1/5vDhw/UvTg9zc3Pz8/OpVGphwdCA74GoNnroTc8fPmzdxJV9RYLe+Uxh8dtktvD8G/uHItWGy7PZ7NTUVCAQKBQKb//TDZtK5DTpy/agZ+LIuAG/2rVWdvhHK/pHKk/tOjDkTVb/ChMTE4VCQVVVr9eICPvhmPawUtPzpp+lDtbr1ebbXjkUq+kPPB6PJxKJTCbT2mpEY9K949OaJ6FSjh3SPJ1Fbc3xm1OJ/QcP+Surk08gk8lMT08Hg8F83ojy5bFZbe1aV8jLDmmqFRHfK0cqnjzz5sHVoXT1rzAxMVEqlbxer6pWu68AAAAAADCRuxKEp5122m9+8xuzV6Gn+fn5b33rW9/+9rdzuWP1TO973/t+/OMfV/kKe/fufdufMSYWduIFFAqFQqFg8EqiSe2v6wqqpv9pONJIR+DlyVT5kzemEv3hakucDd4h4vCwrpCPjdFUa7oCj++reLJrKpnPd1T/Cvl8vlgs5vP5kiHFqTNCb8B2v/lnqYONtGsLNHdHUzX9gR89RvL5vDH/mcQWox28vzRTu1/pafGVv63ni6U3pxIn9YSqfAWD32jEJuddYS87pKlWdmqvJb0ZTdZ6jBz9vyQIAQAAAAC24K4EoZMUCoV777138+bNExMT5c8vuOCCRx55JBCotvRqz549J/hfj9YXDg0N1b1OXbS0tMzNzXV2dra3txv5e2fSr2qerF+5jDFRzXDa0ilNgjBaCle/8TKZjMfjCQaDAwMDTVid1r5sTPOkv72G1aIO71xVvOf5qfInB5JqTX/mpVKpUCgMDQ0ZU0E4m31N8+TkkaVD7dWmIlCr3oGiz7MrXzyW/Z1K5lu6+jqr7v0bCoUWFha6u7vb2rTjDJsho85onowM9HCMNNVpgwe27a34Y58uhS8cWlLlP55Op71ebygU6u/vb8LqtF6en9I8GexoZYc01ZkjReVPFR+qD6c8Nf2ZFwqFUqk0NDREghAAAAAAYAskCG3p17/+9Ze+9KVXXnml/GEoFLr99tu/8IUveDw1jJZctWrV2/6Mz2fyPvGVMeyXpvPF+UzFtXGfR+2LhIn5NMPJ/RHNkzenk9X/5y4UCkbukHha28i0tzVo+l8TZzttibZY8LXJhZr+zH0+n6qqPp/PgARhqaTEhPqw/vYWn4+5v83i8ykj3S27pysGhu2LZ94ZCR/vHxFewdA3mlhaW5bUFwlxjDTVqUvaNQnCXdOp6v/MDd4h8UxR86S3jTea5lovvNG8MZ2o9Y2mVCodfbvRdWkAAAAAADQFwUqbOXjw4DXXXHPZZZdpsoObNm164YUXvvSlL9WUHcQJTM5ru3v1tQUJ+DTJun5tyc6uKUPnTdYkmtS2GO1ppa60uU4djGj+9u2NJlM5I0ZO1iGezpWXsimK0hb0hcgONtm6PuEYmbTwMSJ0Ku6hPL3JThHeaF6b0E4ato7phPZDSG9rtc0hUB/xo8jeaDJX0GZqAQAAAABwDOKVdnLvvfeecsopDz74YPnDk08++ZFHHnniiSfWrVtn1sIcaVIY/9PfRmyuWewW2dcWh/W0sDeaqz3k0/TnLJZKuyYTx/t5c5H7McW6/lbNE2vfM9AeI90cI022flBbqr5zwsI7hDcaw3WF/X2Vn/RyheK+mdTxfh4AAAAAALsjQWgPiUTiYx/72PXXX7+wcCyYNTQ09MMf/vCVV1658sorTVybU00uaEP8/W1BU1biBmv7WjX1YQfi6WTWovVhM0IFIZF9A6wfEIP7Fq3+mRYShJT+GEBSiGzVFLIiO0Z62CRNJp4huyYXNMW+1kGpuinsdV0JAAAAAIAGkSC0gXg8fumll953332LT/x+/+bNm3fv3n3DDTcYME/LnaaECsI+KgibpjXgXdZRMSqsWCrtjlo0uE/c1hQ2ShDKdginR9OJkf03LFxBOCNUEFJm2myDkaDmb2K2UNwzbdU3Gsk9A24pNZ29Gp4DAAAAANAgEoRWl8lkLrvssu3bty8+eec73/ncc8994xvfCIfDJ/gH0SAqCA0mRuXemLJs3JbObyZYP6jdIdZNEAo7hApCA5zUp20x+sZUoliyYn1YMlvQTNAMeD1tQZ9Z63EPcQzhq1Y9RsRCZFLIBpAdIyQIAQAAAACORYLQ6m6++eZnnnlm8dvrr79++/btGzZsMHFJLjGVoILQUGJUzrJ9vagPM4WsgtCiO0QW2WeHNN2S9lBHqCKDksoVDsbTZq3nBDhDzHKqOIbwiEWPETaJKWQtRi16VwkAAAAAgMaRILS0P/7xj/fcc8/it1/5ylfuueceeooagwpCg9lo8I/Y+Y30jwHEyP6e6UQmXzRlMScm2SFE9g2xVrxnYMnqH1kVMsVhRjhlQPtG89qkRSsIKUQ2BS1GAQAAAACuQoLQ0r72ta8tfr1p06ZvfetbJi7GbSQzCInNNZONonJRYXhYN8H95usK+wcjFUn6fLFkzeZvktIfdogh1tmkEJniMLPYaJQphcimWN3T4vdW/D9HE/OZeEr7pg8AAAAAgDOQILSuQ4cO/fa3v1389nvf+56qqiaux22oIDSYLLJv0b5eMwT3TWKXLqNiBSGlP8aQ3TOw4jEi7hAuGRhDPENen1goFC03qDKV006p9Hs9EaZUNp/f6xnp0k74tuxEZAAAAAAAGkSC0LoeeeSRUumtoNWqVas2btxo7nrcZlKoIOyPEOJvohVd4bC/on3ubDo3Ma/9r2C6RLagaWsZ9HlaAzT+NcJ6ocvoa5as/pGU/pAgNIRdOhXPCFXIFIcZY2lHqCtckYtN54v7ZpJmred4ZOWDfi6JGcNG/QwAAAAAAGgQl5Gt6+mnn178OpPJXH311bW+woc//OG/+qu/0nVRLiKG56gBaiqPqq7tbX1pfK784euTCwMRaxVuiuWD3UT2jbJemB/26hErJgjF9A+bxBhiZP91ayYIUxwjpjllIPLU6Ez5k1ePzK/p1Zawm0uSQuYTiFHW9bf9YudE+ZPXLVmqDgAAAABA40gQWtcLL7yw+PWhQ4ceeuihWl9hzZo1uq7IRRYy+WS2ortX0OfpCNECrrnW9bdpEoQvjc9dsLrHrPVIRRNi6Q8bwyC2aTEqZJG5XmCMtb2tHlUtlo51jDwQT8VSOU3RmOnEFqM9rdZaoYOtH2jTJAh3Tsx/6LRBs9YjxQBCE50s3DN4+cic9CcBAAAAALA7Woxa1759+8xegnsxgNAUpwkNJF8et1xUbjqh7XpK7scwpwo75M3pRLZQlP6wiag/NktLwLu6p0Xz0JLHCOkf05wi3DN4zXr3DDhDTCR+FHnpsOXOEAAAAAAAdEGC0KJSqVQikTB7Fe4lGUDYRmyu6TYOtWuevHTYcg0ko3SPNE9va6Cv8m9irlDcPW2to3I+k9dMqQwxpdJAsmPEcsF9SSEy6R+jiJ2Kd1pvlKlYY0qC0DAblrR7Kuc9jsVT8ZT27ywAAAAAAA5Ai1GLyufz/+///b8GX2TTpk26LMaFZAlCKgibbuMSbWT/lSNzxVJJE6ozF70BzbV+ILJtIVr+ZOfEgth61ESyHUJk3zgblrQ/9NJ4+ZOXxy2X/hFnEFJBaBjxuHhtcsFqbzSSGlOOEaO0BryrelrKr56USsrL4/PvXdVt4qoAAAAAAGgGEoQWFYlEvv71r5u9CveaElqM9lFB2Hwru1vaQ765dH7xSSJb2BNNru1tNXFVGjNCBSGRfSOtH4hs21OZIDwyr2xcYtZ6RGKNKaU/RhLvGbxkvRaj3DMw0fLOcCTom88ce6NJZgv7Y6mV3drmtCYS55gy7NZIG5e0a2rTXxqfI0EIAAAAAHAeWowCElQQmkJVldMGrd4eUBK3Jf1joFOE9oCvTVprfhjj5cx1utBi9OXxuWKpZMpijkfMIrNJDKOqkmPEal1GKUQ214YlNpiIDAAAAABA40gQAhJiBSE1QMbYOKSNylmt+mdGSBB2U9hhoFMHtTvk1SPWiuyzQ8y1srslEqzojpDIFvZGk2atR1QslcR5Zl1sEgOJXUZ3HrHWPQNK1c11+lCH5onVPooAAAAAAKALEoSAxOG5tObJQIQKQiNI2gNarYIwoY3bdhO3NZAY2X9jaiFftFB9mFj600uDYgOpqnKaUP1jqeD+bDpfqNyxkaAv4OXzmHEkCUKLVRDKZhCSQjaOrIJw3mqFyAAAAAAANI6AFCBxaFabIFzaETJlJW5j/flhMykaSJppMBLUFORl8sU9lcOizEWLUdNZ/J4B3SNNt37Q8i1GJTMI2STGWdXT0lZZiLyQye+bsVAhMgAAAAAAuiBBCEgciKc0T5Z1hE1ZidtsHGpX1Yon+2aSc+m8ScuRmJzXxm37qQ8zlqz6x0LtAcUEIQ2KDWbxewZiC+s+doixpGeIpcrDxGOkj0HIBvKo6mlCO+uXDlsriwwAAAAAQONIEAJaxVJpfC6jebiskwpCI0SCvpGulvInpZLyyhErBfcT2r1B3NZgFm8PGBWGh5EgNNjGIbGC0EI7RHaGsEMMNdwVbg14y58sZPLixSCz5ArF+UzFtRiPqnaGfcf7eTSDxe8ZAAAAAACgCxKEgNbUQjZbKJY/iQR9kSCxOYNYObifFeK2Xg9xW6OdMqBtD/ialRKEsuFhpH8MtXGJthB570zCOoXIkgpCLhkYy6OqJ/dbt8vodCKrKWfsbvF7NHsaTSYbQ0iCEAAAAADgNCQIAa2DwgBCygeNJF7bf9kyFYRTC9q4bW9rgLitwSzeYlQyYY7hYcZqD/mGhULkV49YJf0zJXaPJIVsOCsfI2IVMpcMjCe7q2SVjyIAAAAAAOiFBCGgdVhIEC5lAKGBxGv71onKRZPkfsx3qjAa6vXJhULRKgPEZsRN0uo3ZSVuZuV7BpIUMukfw60XjhHrVBBKzhDeaAwnFiLviSYT2YJJywEAAAAAoClIEAJaB2e1g4iWdlBBaBxJZH98vmSN7I+sNyBxW6Mt7Qh1hCpSbqlcYfd0wqz1aEhajBLcN9zGIeveM6CC0ArWC52KrbNDZG2KuWRgtM6wf3lnxeWwYqlkqYnIAAAAAAA0jgQhoHVIrCBsJ0FonDW9rS0Bb/mT2XRufyxp1nrKTS1kNE+I7JtCTP88d3DWlJVopPNFTYmJz6Nq0pkwwIZBoT2gZeaHTQv3DHo5Rgwnu4kyl6scP2wW2hRbhLhJrJNFBgAAAABAFyQIAS1mEJrL61FPFaZDWSS4Lyn9aQuashKXO2tZp+bJ84cskSCUlf4EGFJpPNn8MKsUIk8K9wz6OUYMN9LdosnLpvNFi4whFI8RStVNcbpwjLw8bpU+tAAAAAAA6IIEIaAlVhAuYwahsaTBfVNWokGLUYs4c1mH5slzB+KmrERDLP2hOMwUa2WFyGNxbftoU8juGbBJTPCOpcIxctAax0gyp3lCBaEpNogVhNa4qwQAAAAAgF5IEAJaB4UgMjMIDbZhibaC8GVrDP6ZSmhLf0j/mOIsIUH4/KHZogUKxBhAaBFej7peLES2RntAsVMxx4gpJMeINToVSwuRTVmJy4ktRl88PGeB9xkAAAAAAHRDghDQklQQ0mLUWJYd/CMOD2MGoSlO7m9rC/rKn8yl83ui5g+qlAwPa2UAoTkkx4gFqn/EKZV+r4cplaaQFCJbI0HIDEKLOKmvNeyvKESOp3IHZy1RiAwAAAAAgC5IEAIV5tL5+Uy+/EnA66G8w2CnD2njtm9OJ5KVUXVTMIPQIjyqKqZ/rFD9E03SYtQqJIXIFkgQSssHmVJpCnGU6YuH5/JF8wvEOEYswutR1w+0aR5a4Z4BAAAAAAB6IUEIVBDvhg91hDyEb43V3eLXtHUtFEs7J8wfQ8gMQusQ2wNaYX4YLUatQzLK1AKRfckZQu7HJCu7W7pbKmo3U7nCaxZ4oxFL1SlENotsIrL5xwgAAAAAAHohQQhUEPuLMoDQFNZsDyimfyjsMIs154dFEznNE4aHmeV04Qx5YyqRyplciCyrQmaHmENVlXcsteQxIlQQcs/ALBuEY+TlcfNTyAAAAAAA6IUEIVBBMoCQBKEZTheu7ZselSuWSjN0frMMcX7Y8wdnS2Z3BySybx09rQFZIfKCWes5iksGlmLBMYSFYimequhzrqqKptIRhrHmXSUAAAAAAPRCghCocDBOBaEliNf2Te/rFUvmNOOpOkL+gJdT1BzrByItAW/5k1gqt28madZ6jiL9YymS4L7Zx4g4g5A5piYSxxA+f8jkBGEslStW3nRoD/r9vNGYRLyrtGtyIZ0vmrIYAAAAAAB0R8QBqHBoTjuDcGlH2JSVuJw4+OdFs6/t0xvQUrweVUz/mD6GMCrOIGR4mHnEY+Rls48RUsiWIlYQ7jg0WyiaWYnMDrGU3tbAkvaKW2L5YskKgyoBAAAAANAFCUKgAi1GLeLk/ragr+KAiiayh+e0/3WMRNzWaiw4hlBsMdrbSn2YaSSFyGYnCKcWhHsGHCPmWdPT2hmuSOEns4VdU2b2oeWSgdVsXBLRPDG9EBkAAAAAAL2QIAQqiAnCIRKEZvB51FMG2jQPd5ja/I0EodVYcH7YTDKnecLwMBOJkf0dh0weVMkxYimqqpwhlJmae4yIZwhzTM0l3jPYcYgEIQAAAADAIUgQAhXEBCEzCM1yxpA2/fPH/TFTVnKUbHgYcVszWW1+WK5QnE1XBPc9qtoVJkFompP720KVhcgzydyb0wmz1qMoylRCe4z0coyYSrxnYG4hsphC7iGFbKozllrrowgAAAAAADoiQQgcky0UJyuTQKqqDLWTIDTHu1Z0aZ78cb+ZE+YmJb0B6R5pplMHI2G/t/xJNJEdnUmatZ5oMqepTutq8Xs9qknLgeL3es4Usshm3zPQHiP9bRwjZhLvGZg7ypQaU6s5d1i7Q144PJvOF01ZDAAAAAAA+iJBCBxzeDatie/3twU1k/BgmHOHtQnCp/fHCkXT+gOKcVsqCM3l86gbhB6SJhYRSoaH0V/UbOeNiPcMTE0QiscI6R9TiaNMdxyaK5rXiFacY0qLUXOt7mkdiFRk8TP54g6z21kDAAAAAKALMh/AMQfpL2olG5ZE2oK+8ifzmfxrkwtmrUfSYpTIvtkkYwgPmBa3lZX+UBxmsnetsFAFYaFYilVOmFNVGkiabG1fa6TyjWYhk39zyrQ+tOI9AyoITXeOeIyM0WUUAAAAAOAEJAiBY8QBhMs6wqasBIqieD3q2UL6x8TgviT9QwWh2Sw1hlBS+tNKBaHJxELkl8bnFjJ5UxYTTWY1pWldYb+PJrSm8qjqGUvbNQ+fM68+TDaDkGPEZGLD86cZQwgAAAAAcAQShMAxB+MpzRMqCM0lBvdNTBDKegNSH2ayM5dqU8jPHjBtfhilPxa0vDOsOcYLxZJZ6R/Gy1mT5e8ZsElMJn4U2U6CEAAAAADgCCQIgWPECkIShOayVoJwgRmElnPakohmSuh0IntAyPQbQ1L6w/AwC7DOMSI7Q7hkYD5Zp2IT7xnkNE/IIpvunBWd3spK37FYSvzECAAAAACA7ZAgBI45NCe2GCVBaKbzRrSR/Z0T8/GUNn5qDKp/LCjg9Zw2GNE8NKs+LJrU7kxKf6xAbA9oWoJQUoXMDjHfWUKC8PlDs5pmsIbhnoEFRYK+Uwe0bzRPM4YQAAAAAGB/JAiBYw7GqSC0lv624MrulvInpZLyJzNqOxYy+VSuUP4k6PNEgj7jVwINSXtAsxKEksg+w8PMJ94zeGrUrArCjOYJlwys4OT+trbKw3wund8TTRq/klJJiQk3YLo5RixALER+er9pZaYAAAAAAOiFBCFwzKFZcQZh2JSVYJFF2gOKVR2U/liEpD3gQXPituLwsF6mVFrAWcs6At6KTzuTC5nRGRPSP5JjhBajFuBR1dOH2jUPTblnMJvO5QrF8ietAW/Y7zV+JdB417D2JoqJDc8BAAAAANALCULgLcVSaXxOW96xrJMKQpNZJCon6Q1IZN8axPaAZrUYlfQGbKX0x3xhv3ejkP4x5xhhjqlVnbnUEvcMxEsGtCm2CPGu0p8OxDXZXAAAAAAAbIcEIfCWqYVstjLWEwn66CFpuvOGuzVPnh6LGz8cigGElrVhSbumPmxi3pz6sBlhBmE3w8OsQVaIbI30DzvEGsR7BqY0kIwmhDmm7BBrOLm/rTNcceEjlSu8PD5v1noAAAAAANAFCULgLYdmGUBoRWcsbQ/5Kk6qaCL75nTC4GWQILSsoM9z2pKI5uHv984YvxJxBiGbxCLetUJbiPz0GBWEOObs5dod8sxYLJ03uj6MCkLL8qjqOcIxQpdRAAAAAIDdkSAE3iImCJd1MoDQfAGv58xl5kfliOxb2fmrejRPtu2JGryGXKGoqSD0qGpPCy1GLeG8EW0F4Y5DsxnD0z9TCW0Xa0aZWsT6gYgmFZfOF582/I1mYl67Q/p5o7EMi0xEBgAAAABARyQIgbcciKc0T5ZRQWgN5wpjCI2v/plcECP7zCC0CjFB+Pu9RicIj8xnipWtb/vaAn4vb7KWsLqndSBS8Rc2ky/uOGT0rMrJeUaZWpSqKu9dqW1nbfwxcnhOe1FpqJ3PIVZBghAAAAAA4DzELoG3yCoICcxZwrtWaKNy20eNjsqJLUapILSOC1b3eFS1/Mnu6YQYam+q8TltCnlJO7kfCxHbA243PLgvNpCkgtA6zl9tfiGy7Bjhc4hVnDfcVfk+o+yOJsTuAgAAAAAA2AgJQuAth4R0wtJ2Woxagtge8KXxuYVM3sg10GLUyrpb/KcMtGke/t7Y0N3svQAAIABJREFU4P64cIAsiRDZtxDxnoHBDSTn0nlNU9OWgLcl4DVyDTiBC4RC5O37Y9mCoX1oxWNkMMI9A6voDPtP6qt4oymVzJlmCgAAAACAXkgQAm85KLQYXUqLUWtY3hnW/LcoFEvPHTS0PaA4PKyX0h8ruUCs/jG2PaBY+jNIBaGVmN4ekAGEFnf6UHtnuGJoaDJbeO6AoW80FCJb3HnCMUKCEAAAAABgayQIgbeILUZJEFqH6cH9abGCkBmEViIZQ7hnxsgFjM9TQWhp56zo9Hoq+gPuj6WM7EMrViFzycBSvB71PSPaMYSG3zMQjhFajFqJWIj8x/1xU1YCAAAAAIAuSBACb2EGoZVJ2gMae21/ihmE1iZWEL42OT+5oC3HaZ4jlP5YWyToWz8Q0Tx82sDgvmyOKTvEWs5frU0QGtypeEI4sjhGLEW8q/T0/lihWDJlMQAAAAAANI4EIaAoijKXzs9XzrQLeD2Ud1iHGJV7atS4BGGuUJxN58qfeD1qV2UzOphrMBI8qa+1/EmppDyx17giQkkFIaU/FnPucKfmiZGFyJI5przFWIx4z+DJfTN5o9I/s+lcMlsofxL2eztCvNFYyIYlkbagr/zJfCb/2uSCWesBAAAAAKBBJAgBRZGVDy5pD3pUVfrDMN7Zyzv83orzamI+MzqTNOa3R5O5UmWIuCvs17QrhOkkYwgNrP4RKwgHI5T+WIu5nYrFCsIeEoQWc+bSDjH9s+OQQWMIJXNMOUMsxutRz17WoXm4fdTQdtYAAAAAAOiIBCGgKIpyaDalebKsM2zKSiAV9ns3LtG2B3x8t0Hpnymh7RvVpRYkGUNo4PwwcXjYIL0BLUbSHnAslqis2WoeWYtRjhFr8Xs97x7RbhLDuowemRf7i1KFbDniMWLYRxEAAAAAAHRHghBQFFkF4dIOAnPWsmmlNv3z6zemjPnVRPZtQUwQvjw+P5PMSX9YX8VSaUJoILkkwhliLSf3t2mK9jL5omFlplMJbfqHFqMWJB4j24y6ZyBeMmAAoQVtWqUdVPmbN6eKJcYQAgAAAABsiQQhoCiKciCuDcwtI0FoMZeu69U82fqGQVG5SSH3099G3NZyVnSFR7pbyp8US6Un9xkR3J9OZHOFYvmTzrC/JeA14Fejeh5VvWSt5Bgx5rdPzov3DDhGLEdMED65d8aYN5rDwkWlISoIrefC1b1BX8X/9zS1kN1xaM6s9QAAAAAA0AgShICiKMqhOW2L0aUdtBi1FjEqF01knz9oxHQoyfCwFkp/rEgcQ/j7vUZMhxJ7AzI8zJouW9enefKrXZPG/OpoUnuM0KnYgs5Z0Rn2V6T2Y6ncS4fnDfjV4jEywDFiPa0B73lCl9FfG3WMAAAAAACgLxKEgKIoyt5oUvNkuIsEobW0BrzvHtG29jKmy6g4g7A/QmTfis4Xmr8Z00BSLP1heJg1vX9dv+bJaxMLYzHtBZFmmBSPESoIrSfo87xrRafmoTHTTA8LLUapILSmS4V7Br/eZVAhMgAAAAAA+iJBCCiKLEG4qqdF+pMw0ftNispNCRWElP5Yk1hBuOPQ7Fw63+zfOz6nzf0wPMyalnWEThlo0zw0psvolNCpmGPEmmSFyEYkCDlG7OIy4Z7BU6OxhUzT32gAAAAAANAdCUJAKRRLYgXJym4ShJbz/pO0CcKnRmMGpH/EFqN9rcRtrWh1T+vyzora30Kx9NRo07uMjs9TQWgbYnDfgARhJl+cr8wf+DxqZ9jX7N+LOpwvSxAaMIXwCMeITbxjabum/DdbKP7OkGp1AAAAAAD0RYIQUA7OprOFYvmT7hZ/Z9hv1npwPO9Y2qGJyuUKRQN6SIqlP31tlP5Y1KaV2i6jBowhPCKW/jA8zKouFe4Z/HrXVKHY3PyPZI5pa8Cjqk39pajPecNdmnm3UwvZ1yabPoaQCkK78KjqJWt7NQ/pMgoAAAAAsCMShICyN5rQPFnV02rKSnBiqqq87yQhKtf86h9xBiEVhJZ1/ipt9Y8BKeRxYXgYpT+WdeHqHk36J5bKPXdwtqm/VHLJgP6iVhX2e89eLowh3NPcewbpfDGeypU/8XlUmtBalqThuSGdigEAAAAA0BcJQkDZN6MdQEh/UcsSu4z+etdks39pNJnTPOlppcDUosT5Yc8eiDe7D+2ReW0KeZDSH6tqCXjFMtNmV/9MJ7Q7hNyPlV0g3DP47ZvN3SHiJYP+tiA1ppb1/nV9mv84uyYXRoUPkwAAAAAAWBwJQuD/Y+++A6Mo88ePz2422fTeSEILkISE3kKC9CoCIkUBsSFyHhZU9MST+/48uyIeYgEV5TgQUMCCDQSRntAJxRBCAoEQ0nvZtN3fH/u9+S4zISwkm53Nvl9/PfPkmdmP5zrJzWc+n0dIL5A+0wn3I0GoUPKncufzKjJkW0g2I4OhoT0I3Un/KFRUoHuQh3R3qG3nLJtFlvcGDKbFqII1VP1j2W9InuweQoJQyeTbEG5Pyauu0ze4uFk00KaYlwwULMTTuVuwp2SSIkIAAAAAgM0hQQiQILQlbRp6KrfzggV7SBbramuv36LSQ6tx1nDzVCiVqoEy0x/OZlv0Q6+VSat/Qr1oMapcYyICJTMJl4pKqy1YZipvMRpIClnBhoT7ujk5mM6UVdfttuRuplmyCsIQ7iHKNlrW8HwH2xACAAAAAGwNz7iBBlqMhtNiVMHk1T87Uy2YIGxg8zB3Sn8U7e5uwZKZn//MrdUbLPRxJbraypp60xkXRwcvZ5rQKlfPEE/JJpF1esOBjFLLfWKerMUoexAqmYujwyjZewY/JVsw/dPAPqYeJAgVbUyk9D2Dnan59Rb7RQMAAAAAgCWQIAQarCB0s0okMIe8PuyPtMI6iz2Vyytn8zAbMzYyQFLiWaKrTbxSZqGPk/cXpTegwqlUwsgu0uqfPy4WW+4T5W2KuY0o3N0x0vcMfkrOM1gs+8NtxOYM7eTn4nhdmWlxVW1SDtsQAgAAAABsCQlC2Lvy6rrc6zNADmpVW2/e3FeuIQ09lTuVY6ltCBvYgNCN57aK5q7VjOwi22Qu3VL1YfLSn2BKfxRPXoi8K63Ich/XUCEytxFFmxQTpFFft+Ftdlm15dI/8jbF3EYUzlmjvqOjr2RyT4al3kQBAAAAAMASSBDC3qXL+ou283ZxdOA/DeVy1qgHh0ufyu29bKmncnnyBCEtRhXv7m5BkplfU4ssVP1D6Y8tGhMRoLou+yNcLNJdLpH+x95c6FRsc/zcnOI6+Egmd1jsPYNsbiM2SP6ewT6L/SkCAAAAAIAlkAWBvWuovygbECqdvMvoXou9ti9vMcqTfeWbFBOsvj7/k11eezbPImWm2WXyJ/uU/ihdkIe2RxtPyaQFbyOyPQhpMap88i6j29NKLPRZ8gpCbiPKJ08QnsiuLKmub3AxAAAAAAAKRIIQ9u6SrIKwoy8JQqWTP5VLyqks0dVZ4rMKKmslM36uPNlXuiAPbWx7b8nkb+kWebif3UBvQEp/bMDYyEDJjOUKkQsqpLcREoTKd3c3aYIwtVB3sUj633uzkFcQchtRvu7BniHX53Hr9YbEzHJrxQMAAAAAwK0iQQh7RwWhLeomeypXpzdsu1Bsic+igtBGTZJV//xmmeofWozaKPl7Bnsvl5XXNH/1j95gKKi8rsWoSkWC0AZ09neLCfaQTG5Lbf69Kuv1Bkkva5VKCCJBqHgqlTA6MkAQBK1GPaKz/9t3df31/sgx4V7WjgsAAAAAAHORIIS9kycIqSBUPpVKGBslfbj/XXKBJT5LvnkYT/Ztgrw9YHK+Tl4x3HTXSukNaJPu6Ojr5uRgOlNVq/8pOa/ZP6iosrZef90GmJ5aRyd2urUF8tvItgvNnyDMKa+WfEN8XZ20Gr4hNuCpOzr+8lhs4Wvjfv9r3IsjOscEuEg2NwUAAAAAQMl4+gB7l15YIZkJ93OzSiS4JdN7hkhm9meU5sh2g2u6y8XSjesC3SnssAFdg9wjAqT/LW/9M6fZP6iBCkIPEoQ2QKtRy3tIbj6T2+wflFEkv4fwkoFtkH9Djlwtl7810kTy/qJtKB+0EX3DvO6MCnS9/lUDAAAAAABsBQlC2DWDQbhUKH10S4tRmzA6IkDSga1Ob/gmKat5P0VvMKTlS1PInUgh2wj5w/2tZ5s//ZMlqyAM8eLhvm2Y2TtUMvP7hcJcWVfhJkqV30P8uYfYhv5tvcO8pJvM/dTc7xk0dA/hJQMAAAAAAGBxJAhh166V6apqr9txykOroYGkTdCoVdN6tJFMbjhxtXk/5UqxTlenN53xcnZkD0JbIW8PuO9iYX5Fc1b/6Or0xVW1pjMatYp7iK0YGxkg+ZdVpzdsTrrWvJ+SmidNEHYmQWgjVCphQkyQZPKHs9nN+ym0KQYAAAAAAFZBghB2Tb4BYSd/ygdthrz6J+FS0QVZsU5TpOaVS2a6yLpWQrHiOvgEX19mWq83/HquOYsI5U/2A921ajahshGODuppPS3+nkFqvuw2QoLQdsjfM/gtJa+ipr7BxbdH3qY4mBajAAAAAADA8kgQwq7JE4QdfUkQ2oz4Dr4dZP++mrfLqLw3IE/2bYhapborWlb9c6Y5q38aKv3hyb4tkb9ncOBS4aVC6a+GpriQL70a7xnYkOGd/T2dNaYzVbX1O8/nNeNHZMt2z+U2AgAAAAAAWgAJQti1i7KnwCQIbYhKJczoFSKZ3HC8Oat/5PWI9Aa0LfLqn+0peWXVdc11ffmT/WAPegPakjs6+rb1djGdMRiEr08253sG3EZsmlajHhcVKJncfKo5+9Bml0nfM+A2AgAAAAAAWgAJQti19ALpc9twP57b2pKZfaTVP2eyy05dK22u61P6Y+tGRfi7OTmYzpRX1zVjD8lsWW9ASn9si1qlmtFb9p5B831DSnS1ueXXfUk0alUHH5cbrYcCyd8z2HLqWtH1m482hbzFKLcRAAAAAADQAkgQwq7JKwjD/aggtCU92nh2C/aQTDZjEaF887DOpJBtioujwwRZl9HPEy831/WvyUp/2nhS+mNj5F1Gk7JKz2aXNcvFU/Okr6F08HV1dOCvL1tyV3Sg6/XvGVTV1q89mtlc12+oUzG3EQAAAAAAYHE8ooJdk+9BGE6LUVsjLyJcf+KqwdAMV9YbDPJvSAQVhLZmbmw7yczRK8XHM0ua5eJZJdLSnxCe7Nua3qFeMfL3DJqpiJB9TFsBL2fHe3tKy0xXJlxqlosbDA3tQehBBSEAAAAAALA4EoSwX7o6vaSvl0oltCdBaGvu7xOmUl03c7mo6uClwqZf+XJRVXWd3nTGx8XRz82p6VdGSxrZJUCekvn8UEazXLyh0h+e7Nue+2S7ma47ltks7xnIKwhpU2yLHhsofc8gOae8WX7RFFbWSH7ReGg17lpN068MAAAAAADQOBKEsF8XCyr11z8ADvV0dtbwH4WNae/jMqCtl2SyWap/Gij94cm+DVKphDmyIsJ1x66WVdc1/eK0GG0dZvUJlbxnkFFUdehyUdOvfIEKwlYhvoNvjzbSMtNmaVZ8TV4+yEsGAAAAAACgRZALgf2Sb0DYkQ0IbdN9PdtIZr5Jyqqt1ze42Hzy0p/OPNm3TY/0b+uovi7/U15dt7E5ssg5ZTWSmSB6A9qgTn5uvdu4SybXN8duphcKuI20Eg/1lZaZfn0yq7iqtomXzZZVIQd78JIBAAAAAABoCSQIYb/SZc9tw/14bmuTpnUP1lyf/skrr9mUdK2Jl6X0p9UI8tCO7ewtmWx69U+93pBbLm1THEyC0DZNjQmQzKw9ltn0MlNajLYas3qHSHoMVNXWrz2W2cTLUkEIAAAAAACshQQh7Fd6gbSCMJwNCG1ToLtTfFtp9c87uy40cQuxhlqMSj8FtmJWdz/JzJErxcczS5pyzZzy6nr9dV8yX1cnLW2KbdOUmACH698zKK6qXXWoSVnkoqra/IrrakwdHdTtffhFY5O8nTV3dZG2s276ewZZJbQpBgAAAAAA1sFzTNgvWoy2JjNifCUzp66V/p6a15RryisIO/vzDbFVg9t5tveS1uV8fiijKdfMLpWW/lA+aLsC3RxHdvSUTC7bm96UZsXye0hHXxdJuTNsyKxu0vcMTl8rTbjUpL0qc2QVhNxGAAAAAABAyyBBCPslryDsRILQZo3r5NXRR1p18d7utNu+YL3eIP+GdPGngtBWqVTCfTE+ksmvjl1tSg/Ja2XS0p8QSn9s2bw+0i6jl4uqvmlCs+Lz8v6i3ENsWb8Qt0h/F8lkE98zyJLtQRjixW0EAAAAAAC0BBKEsF8NVBDSYtRmOahV8/oFSya3p+SdvFp6exfMKKqqub5yyM/NydfV8TbjgwLcF+Pn6HDdb72y6rpvTmbd9gWvySoI2TzMpvUPcRvQVlpE+G4TmhU3sI8pGxDauAd6BUpmNp7IKqqqve0LNnAboYIQAAAAAAC0CBKEsFN55TWSyiFXJ4dgD17bt2Ezuvn7uTlJJt/fc5tFhA30F/Xjyb5t83fVTIqWPtxfcfDSbV+woRaj3ENs29Px7SQzTWlW3FCbYm4jtm16TICLo4PpTFVt/dqjmbd9wWxZIXIwhcgAAAAAAKBFkCCEnUovlD637eDjqmJnKFvm4qieH99BMrnxZFZmifTxqzlSKf1pjebGStM/xzJLtp7Nvr2ryVuMUkFo6yZE+ctzeLfdrDi1gRaj3EZsm7ezw7QebSSTb++6UFlTf3sXlFcQsgchAAAAAABoGSQIYaca2IDQn/6iNu/JOzpIajtq6/Uf7E2/jUvxZL9VGtWlgfTPy7+c099WE8ksWe6ZPQhtnYNa9eyQcMnkbTcrTs0vl8zwnkEr8NjA9pKZa6W6jw5cvI1LlVfXSZoZODmo/VylpfAAAAAAAACWQIIQdooNCFulQHftg/3CJJOfJWaU6G55gyh6A7ZKKpWwYHBHyeSZ7LKvb2snwuwyaelPEKU/tu/h/m39Zc2K/7X3losICytrCyuvu/M4Oajbebs0KTgowOBw3wHtvCWT7/6Rdhu/aOT3kGBPLc0MAAAAAABAyyBBCDslLwchQdg6PDe0k/r6x6ulurrPEy/f6nUo/Wmt5sW17yD7j/3/bUup099yEWFWqbzFKBWENs/VyeGJQR0kkxtO3HKzYvk9JNzP1UFN8qc1eOPOKMlMQUXN+3tuuVq9gXsI+5gCAAAAAICWQoIQdirhUqFkpkeIp1UiQfOKCHCbFBMkmVy2N72q9hY2iKrTGy4WVkkmqSBsHZwc1P8zOkIymZpfsfrwrWWRM0t0l4ukXxL2IGwdnhjUUd6seOkt7kQob1PMPaTVGBURMLyzv2TyX3vS88prbuk6By8VSWa4hwAAAAAAgBZDghD2KLNEJ6kFcVCrBrSVdgyDjXpheCfJzNUS3Vu/XzD/ChlFlbX1etMZfzcnHxfHZggOCvBgv7CoQHfJ5Gs7UnV1+gbXN+i3lFzJTNcgdw+tpqnBQQEC3J0e6i9tVvzxgUt/5pSZfxF5m2L2MW1N5EWEZdV1b+9KvaWLbD8nvY3Im5cCAAAAAABYCAlC2CN5+WD3Nh7uPNlvLeI7+MZ38JVMvvvHhfOygp4bkZf+0F+0NXFQq/45NlIyeaW4auXBS+ZfZNu5PMnM2MjAJgYG5XhhWGdJO9Daev1fN582mN2JVn7D4TbSmsR18Jkoq1b/5MClK8XSwuIbqaipT8iQVhByGwEAAAAAAC2GBCHsUaLskVxsOx+rRAIL+cfoLpKZ6jr9M9+fMfN0eelPZz+e7Lcq03uG9A71kky+9fuF8uo6c06v1xt+T5UmCMdEBjRPcFCAcD/X+3qFSCb3phdsPHnVzCs0cBuhgrB1ef3OKMmWt7o6/es7zC0i/D01r/r6quVAd22vULqdAwAAAACAFkKCEPYoMaNYMhPXngRhqzIuKnByt2DJ5K/ncr87nW3O6any3oCU/rQuKpXwuqxDYG559bK9F805/ciV4sLKWtMZZ416aLhfs8UHBXh3QrS8Z+zzW/8sMy+LTIvRVq9HG095Fnn1kSvyf/UN2p4ifclgdIS/JOMIAAAAAABgOSQIYXdq6vXHM2UJQllHSti6DyZ3c3NykEwu+P5MRU39Tc9toMUoT/ZbnfFdA4d2kqb03th5/vS10pueK3+yPzjcz1X2fYNNC/Vy/p8xEZLJrFLdP387f9Nz8ytqiqquSyFrNeq23i7NGR8U4J/jIjWyVrSPbDxZr795L9rtsjbF46LoLwoAAAAAAFoOCULYnZNXS3XXN/XydXUk/dP6tPNxeWmktNHoleKqN3fevP8bvQHtxKvjpDsR6ur0D204WVOvb3C96DdZgnAs/UVbowWDO8YEe0gmP9ibfia7rPET5S8ZhPu5SjY1RCvQxd/t4f5tJZP7Lxa+tzut8RPTCirSCq77kqhUwugIbiMAAAAAAKDlkCCE3UnIKJTMDGzvQ0+vVun5YZ0iZK1Bl+5JS8ktb+Ss2nr9paIqySQtRlulIeF+8sTeiasl/29bSiNnFVfVHr4s3ceUDQhbJUcH9UdTukt+QdTpDU9sOW1otEKsgTbF/u7NHR0U4X/GRDhrpH9O/8+2lBNXSxo5S14+2CvEK8hD28zBAQAAAAAA3BgJQtgd+QaEA9mAsJXSatTL7+kumayu0/91y+lG+r9dKqqqvb6ALMDdycvZ0SIhwto+mtLdXbbP3JLdafvSpW8SiHam5tdd//0J9XLuFuxpkfhgbcM6+c3qHSqZ3Jte8MXhy42c1cAGhLxk0Eq19XZ5dZx0Q9Oaev3sr05U1d6wo7W8TTEvGQAAAAAAgBZGghB25+Al6XP/OBKErdfYyICpPdpIJv+4kP/Cj3/e6JSGNiCk9KfV6uzv9v6kaMlkvd4wa90xyR5you3nciUzYyIDqEJuxZZOipG/IvDUt6cTM6SFpKKGKghJELZaC4eFD+/sL5n8M6ds0c/JDa6vrdfvTsuXTLIBIQAAAAAAaGEkCGFfrpXqLl/fPVKtUvVv522teNAC/nV3jJuTg3Ryb/qXNygAovTH3jw2sP2kmGDJZGaJ7pnvzzS4/rfz8g0IebLfmgV5aF8ZGyGZ1NXp71l95EqxtB2xEfuY2hW1SvXvGb3kWeQP91+U71cqCMLBS0WlujrTGXetJr4D7yoBAAAAAIAWRYIQ9kXeXzQ6yJ3uka1bW2+Xf4yWPtwXBOGvm0/vv9hAG8k/c8okM539eLLfyn1+bw/57l//OZq57limZDI5p1z+ksGoLtLiIbQyT97RsXsbaRfZ7LLqyauPVNZI20jW1usbKkTmNtKatfNx+WhKN8mkwSDM+fpkVqlOMi/vLzq8s5+TA3+TAwAAAACAFsXDCNgXeUc4NiC0BwuHdRodId3eqaZeP/XfRzOuT/Yculy0+vAVyUoqCFu9QHftqnt7ytuEPrLx5PrjV01ntqdI+4v2a+vl5+Zk0fBgdRq1asPsPp7O0u0qj2eWPLzxpOH6LU3/9lNyie66/rTOGnWYt7Olg4R1ze4bdl+vEMnk1RLd0I8PSipN5bcRqpABAAAAAEDLI0EI+5KQIa0YI0FoDzRq1dcP9o2Q5flyy6vv/vJwefX/tnrLr6iZvuZYTb1esozSH3swITpo3sD2ksk6veHBDSfWHPm/nLG8YSBP9u1ETLDHV/f3UcvSyJuSsl7dcV48/OZk1rK96ZI1nfzd5Cei9VkxrUeYlzQTfCG/YujHBy8VVhoPc8urT14tlawZGyl9hQUAAAAAAMDSSBDCjtTW649llkgm49j1xz74uDhunTPA20XaTjYpq7T/sn170wvq9YZZ647LdxTrHerVrY1HS4UJa1o6KUaeDK7XG+Z8nbTq0GVBEHR1+j3pBZIFY3iybzcmRAe9fVdX+fwr21MeWH8it7z6XG753G+S5Atm9w2zfHSwPh8Xx9UzeslzwRcLK4d+ctC4M+VvKXn662tOw/1c2aISAAAAAAC0PGmzLKAVO3WtTLJZlLeLY1Sgu7XiQQuLDHTf+EDfu1Ydqtdf93D2XG75sE8O9g3zPnpFukWlj4vj5of6sTWUnXBzctjwQN8RKw6W6upM5/UGw7xNST+ezdHV1UvuIV7OjlQh25UXhnc6k136n6PSzSnXHcv89Vyul7OmrLpO8qMJ0UEvDu/cUgHCykZFBCweFfGaSVGp0eWiqiEfH7yjo++pa/LyQaqQAQAAAACAFfDUG3Yk4ZK0v+iAdt60fbMrYyMD3psYLZ83GAR5dlClEtbM7B3u59oioUER+oZ5bZ83UF5pajAIW89my/uLjuzir1FzD7Evn03v2WDpeUFFTXpBpWQy3M/1P7N683vGrrw6LvLvI7vI56+V6jYlZaXklkvm6S8KAAAAAACsggQh7EhiRpFkJo7SH/vzzJDwR2PbmbPypRFdJsYEWToeKM3A9j47/jLQ11WaI2zQ2Cie7NsdrUb97cP923q73HSls0a96cF+PrJ8M1q9N8ZH/XNspDkrHR3UI7r4WzoeAAAAAAAAOVqM2pjy8vJvv/326NGjV69eLSgoCAwMDA0NjY+PnzhxorOzs7WjU7rEDGmJGL0B7dMnU7sXVtZ8dzq7kTUju/i/Os6sx7toffq19f798fjRnybkV9Q0vnJMBAlCexTsod06Z8CkLw/Ldy019dGU7n3CvFosKijK/4yJcNKoX/o5ufFl8R18PLT8NQ4AAAAAAKyARxI2o7KyctGiRV9++WVFRYXkR8uWLfPy8nriiSdeeeUVR0cqFRqWW16dVnDd/3QqlRBLgtAuOTmov324/6akrAXfn71WqpMvCPNyXj+7jwOtI+1Yr1DPP+bHj1qZkFNWfaM1kYHuHXzpQGuneoV6nv3bsMW/nvv4wCXJtqZGcwa0M7NYGa3VohGdnRzUz/941tDAF+R/0V8UAAAAAABYCy1GbUNycnK/fv0+/PCjcoZYAAAgAElEQVRDeXbQqKSk5M033xw0aNDly5dbODZbIe8vGhXoTuc3eza9Z8iffxv2l7j2ku3BnBzU3zzYL9Bda6W4oBTdgj12z48P8bxhcTZP9u2ch1bzweRuCU/f0SvUU/Kj3qFeH03pZpWooCjPDQ1fPrlbI5tQjokMbMFwAAAAAAAA/g8VhDYgLy/vzjvvzMjIkMyrVCrD9S+lHzlyZOLEiQcPHnRzc2vBAG2AwSAs+SNNMkl/UXi7OK6c1uOBvmHzNp36M6fMOPnepOi4Dnw3IAiCEBXovvfJ+N9T8wVB8HJ2NNaUqlQqb2eNIAhdgzysGx6UoH9b7yPPDPnXnvRXfkuprKkXBMHbxXHzQ/1cHB2sHRoU4ck7Onb2d7tcXKVRq8RuolqN2tXRQRCE3rLsMgAAAAAAQMsgQah0BoNh+vTpptnBvn37vvjii0OGDAkICMjKytq+ffs777yTmppq/OmpU6ceffTRjRs3Wilehfry8OX9Fwslk3EkCCEIgiAM6uh7cuGQ9/ekv7I9ZXL3Nk/d0dHaEUFBOvm5dfLjlQs0RqNWvTC807SebeZvOb09JffL+3qF+9F7Fv9nXBRlggAAAAAAQHGkJWhQmm+//Xbq1Kni4cyZM9esWSPZaLC0tHTy5Ml//PGHOHPo0KEBAwY0/dNVKpUgCFb/khQXF5eWlnp7e3t63s6L9vkVNV3f+SO/osZ00tNZc+7F4W1u3DwQNqS6ujonJ0er1QYFBTXlOufzKkI8te5a3pxoha5evVpfXx8aGurgQF0XGlBYWFheXu7r6+vu7t6U6xzLLOkb5tVcUUE5dDpdbm6us7NzYCDZPjTsypUrBoOhbdu2qka6ylqSQv5uBwAAAADYCvYgVDSDwfDqq6+KhzExMf/+978l2UFBEDw9PTdv3hwcHCzOvPbaay0Uoi148adkSXZQEITXxkWRHYRERIAb2UEATUF2EAAAAAAAADaBBKGiHTx4MCkpSTz84IMPnJycGlzp6+v75ptvioc//fTTlStXLB6fLdh/sXD1kcuSyR5tPOcP6mCNcAAAAAAAAAAAAKyMBKGi/fTTT+K4c+fOI0aMaGTxjBkzvLz+r3Dhl19+sWBkNqJOb3jy29OSTktqlerT6T00aut0fwIAAAAAAAAAALAuEoSK9vPPP4vje++9t/EdTVxcXCZNmiQekiAUBGHJHxeSskolk4/Htx/Y3scq8QAAAAAAAAAAAFgdCULlKisrO336tHg4aNCgm55iumb//v0WCctGnLpWOvGLw3//5ZxkPthD+8adUVYJCQAAAAAAAAAAQAk01g4AN5SSkmJ6OHDgwJueEhcXJ44LCwsLCgr8/PyaPzJlu5Bf8cr2lA0nsvSS1qKCIAjC0kkx3i6OLR8VAAAAAAAAAACAQpAgVK7z58+LYy8vL19f35ue0rFjR9PD1NRUe0gQVtbUn8kuO3S5KDGj6FBGcVpBxY1WjooImNUntCVjAwAAAAAAAAAAUBoShMp14cIFcRwWFmbOKR4eHl5eXiUlJeIVzKk7tAmncirzr9bWqIqKKmtLdHWFlTWZxbrLxVVXS6oKK2vNuYJWo/54SndLxwkAAAAAAAAAAKBwJAiVS8zzCYLQpk0bM89q06aNeGJhYWHzh2UlHx/J3ZZWcvN1NxDg7vT+pJiIALdmDAkAAAAAAAAAAMAWkSBUrvLycnHs6upq5lkuLi7iuKLihs02RTt37rzpGp1OZ+anW0h1dbXb7e4b6KHVLLij/dOD2nloNVb/B4GFVFdXV1dXCwr4rkKxqqur6+vrdTqdg4ODtWOBEhlvIzqdTqPhTyM0QKfTVVdXq1QqftHgRqqrqw0Gg06nU6lU1o4FAAAAAICb4ymYcpmm95ydnc0861YThKNHj77pmtzcXDM/3UJKS0s19TW3epbWQfVAD/8n+gf6umiqSgqrLBEZlKGmpqagoMDJycnagUC58vPz9Xq9RqMhQYgGFRcXV1ZW1tXVVVZWWjsWKFF1dXVBQYFWqzUYDNaOBQqVn58vCIKTkxMJQgAAAACATSBBqFxVVf+X0jI/QajVasWxOQnCUaNGNfJTY32h+Z9uIdXV1d4ujoJgVo5PrVJ19nUe3MHriQHBoZ7am58A26dWq7VarZOTk9W/q1AsrVar1+udnZ1JEKJBzs7O9fX1zs7O3EbQIJVKpdVqtVot3xDciLOzs8FgcHZ2JkEIAAAAALAJJAiVyzTVV1tba+ZZxkaLRuY8B9+xY0cjPzU+4AgMDDTz0y3Eyckp0LtUEEob/KlGrWrj6dy9jUdsO5+B7X1i23t7Od9uQ1LYpurqar1er9Vqrf5dhWLV1tbW19cHBgaSIESDNBqNs7Ozr6+vu7u7tWOBEul0OmPuh180uBFji9HAwEAShAAAAAAAm0CCULnc3NzEsWk1YeNMt8ZpTU85O/s6T44O8Pdw8XJx9HLWeDk7hno5h3o5t/NxCXLXOqh5EAMAAAAAAAAAAGAWEoTKZZogNE37Nc60grA1JQiHtfeY3LOtp6entQMBAAAAAAAAAACwbWprB4Ab8vDwEMf5+flmnpWXlyeOW1OCEAAAAAAAAAAAAM2CBKFydezYURxfuXLFnFNqampME4Tt27dv/rAAAAAAAAAAAABgy0gQKldkZKQ4zs3NNe0deiNXr141GAziYVRUlEUiAwAAAAAAAAAAgM0iQahcpglCg8GQlJR001NOnDghjl1cXKggBAAAAAAAAAAAgAQJQuXy9/fv0KGDeJiQkHDTU0zX9OrVS63m3y8AAAAAAAAAAACuQwJJ0caPHy+Ot23bdtP1v/32mzieOHGiRWICAAAAAAAAAACALSNBqGgTJkwQx7/99ltmZmYji48ePXrq1CnxcNKkSRaMDAAAAAAAAAAAALaJBKGijRw5MiwszDjW6/VvvPFGI4tff/11cdy3b9+YmBjLBgcAAAAAAAAAAAAbRIJQ0ZycnF566SXx8NNPPzVtImpq9erVP/zwg3j46quvWjw4AAAAAAAAAAAA2CAShEo3d+7cTp06GccGg+Huu+/+97//rdfrxQVVVVVvvfXW3LlzxZmhQ4eabl4IAAAAAAAAAAAAiDTWDgA34eTk9P3338fFxZWXlwuCoNPpHnnkkddeey0uLs7f3z8zM3P37t0FBQXi+rZt227cuNF68QIAAAAAAAAAAEDRSBDagG7dun399dczZswoKyszzqSnp6enp8tXhoSE/Pjjj8HBwS0bIAAAAAAAAAAAAGwGLUZtw/jx40+ePBkfH9/ImilTppw6dapnz54tFhUAAAAAAAAAAABsDhWENiM8PPzAgQOHDx9eu3bt0aNHMzMzCwsLAwMDw8LChgwZ8tBDD0VERFg7RgAAAAAAAAAAACidymAwWDsGKJdKpbJ2CAAAAADMwv+5AwAAAACYiRajAAAAAAAAAAAAgB2hghA24IUXXnjvvfeWLFny/PPPWzsWKNHBgwcHDRoUHx9/4MABa8cChQoODs7JycnOzg4KCrJ2LFCiv/71rytXrlyxYsXjjz9u7VigRL/99tvYsWPHjBmzfft2a8cChXJ3d6+oqCgvL3dzc7N2LAAAAAAA3BwVhAAAAAAAAAAAAIAdIUEIAAAAAAAAAAAA2BEShAAAAAAAAAAAAIAdIUEIAAAAAAAAAAAA2BEShAAAAAAAAAAAAIAdIUEIAAAAAAAAAAAA2BEShAAAAAAAAAAAAIAdIUEIAAAAAAAAAAAA2BEShAAAAAAAAAAAAIAdURkMBmvHAAAAAAAAAAAAAKCFUEEIAAAAAAAAAAAA2BEShAAAAAAAAAAAAIAdIUEIAAAAAAAAAAAA2BEShAAAAAAAAAAAAIAdIUEIAAAAAAAAAAAA2BEShAAAAAAAAAAAAIAdIUEIAAAAAAAAAAAA2BEShAAAAAAAAAAAAIAdIUEIAAAAAAAAAAAA2BEShAAAAAAAAAAAAIAdIUEIAAAAAAAAAAAA2BEShAAAAAAAAAAAAIAdIUEIAAAAAAAAAAAA2BEShAAAAAAAAAAAAIAdIUEIAAAAAAAAAAAA2BGNtQMAGnPixImUlJTMzMzKysrQ0NCwsLDBgwe7urpaOy4o0Zdffnn+/HlBEBYuXBgQEGDtcKAIFRUViYmJaWlphYWFlZWVfn5+wcHBcXFx7dq1s3ZoUITMzMyEhITs7OyCggIHBwc/P7/27dvHxcX5+vpaOzQol8FgeOedd4qLiwVBuOeee2JjY60dEQAAAAAAwC1TGQwGa8cASNXW1n7wwQerVq1KSUmR/Mjd3X3KlCkvv/xyRESEVWKDMtXW1gYEBJSUlAiCkJycHBUVZe2IYGXbt29/7733du/eXVdXJ/9pRETE/PnzH3vsMV44sE86nW716tXLli0zvlUgoVKpBg4cuGDBgmnTpjk4OLR8eFC4pUuXPv/888bxihUrHn/8cevGgxZWVVUVHx9/q/8favr06S+//LKFQgIAAAAA4DaQIITipKWlzZo16/Dhw42scXNzW758+Zw5c1osKijcTz/9NHHiROOYBKGdKy4unj179s8//3zTlSEhIevWrRs+fHgLRAXlSE5Ovvvuu1NTU2+68o477li3bl379u1bICrYiuPHj8fFxdXU1BgPSRDaoTNnznTv3v1Wz/rLX/6ycuVKS8QDAAAAAMDtYQ9CKEtWVtbgwYMbzw4KglBRUfHoo4+uWLGiZaKC8n388cfWDgGKUFRUNHDgQHOyg4IgZGVljRo1atWqVZaOCspx5syZgQMHmpMdFARh//79d9xxR2ZmpqWjgq2oqKiYOXOmmB2Efbpw4YK1QwAAAAAAoBmwByEUpLq6evLkydeuXRNnQkND582b17NnTzc3t/T09PXr1+/Zs0f86YIFC6Kjo4cOHWqNYKEgW7du3bZtm7WjgPUZDIYHHnjAtDWxRqOZMmVK3759o6OjfXx8zpw5k5SUtGHDBuPmYYIg6PX6xx9/PCwsbNy4cVaKGi2noqJi2rRppaWl4oyvr+/DDz8cFRUVGRlZV1eXnJyckJCwYcMGvV5vXJCZmTl16tTExESVSmWlqKEgTz/9dINtaWFXzHzDAAAAAAAAhaPFKBTk/fffX7hwoXg4ffr0tWvXarVa0zXr169/5JFHxJf3o6Ojz5w5w3Nbe7Zx48ZHH320srJSnKHFqN364YcfJk+eLB6Gh4f/+OOP0dHRkmXZ2dkLFiz45ptvxJmwsLDz58+7uLi0UKCwEtOt4wRBmDx58ooVK4KDgyXLDh8+/PDDDycnJ4sz69evnzlzZgtFCaX65ptv7rvvPskkLUbt0Lx58z7//HPj+JFHHhkyZIg5Z0VGRsbFxVkyLgAAAAAAbg0JQihFVVVVeHh4dna28XDw4MG7d+9Wqxvogrtq1arHHntMPNy0adO0adNaKEooQ3Fx8YkTJw4cOLBp06ZTp05JfkqC0G4NGjTo4MGDxrGnp2dSUlKHDh1utHjOnDmrV68WD9977z3TFxTQ+uj1+g4dOly5csV42LNnzxMnTtzo/ZI///yzd+/e4ssoI0aM+P3331soUChSRkZGr169xOJjEQlCOzRixIg//vjDON65c+fIkSOtGw8AAAAAALeHPQihFGvXrhWzgw4ODqtWrWowOygIwty5c01f1l66dGlLxAdleO211wICAnx8fEaMGPGPf/xDnh2E3bp8+bKYHRQEYfHixY1kBwVB+OCDDzp27CgemhYUolVKSkoSs4OCILz11luNVJ9HR0cvWLBAPNy/f39FRYVl44OC1dfX33///WJ2kGpjO2faYjQyMtKKkQAAAAAA0BQkCKEUW7duFcdjx46NiIhoZPHTTz8tjg8dOpSbm2vByKAkGRkZ+fn51o4CSiTWcwiC4OTkNHfu3MbXe3h4/O1vfxMPjxw5UlJSYqngoAD79u0Tx507d77zzjsbX2/6JkpNTc3ly5ctFRkU79VXXz1w4IBx/Je//KXxP1HQuul0uqtXrxrHbm5uoaGh1o0HAAAAAIDbRoIQiqDT6Xbt2iUePvjgg42vnzRpkre3t3FsMBi2bdtmweAA2ILExERx3K9fPx8fn5ueMmzYMHFsMBgyMzMtERgU4ty5c+I4Njb2putjYmJMD3kTxW7t37//jTfeMI67du36r3/9y7rxwLrS0tLEDRoiIyPZBhsAAAAAYLs01g4AEARBSEhIqKqqEg+HDh3a+HpHR8f4+PhffvnFePj777/fNKeI1mHhwoUzZsyQTJaWlk6dOtUq8UA5TNN7AwYMMOcUf39/00P57mJoTfLy8sSxOUU/kuf+np6ezR8TFK+4uPj++++vr68XBMHJyWnDhg30F7VzaWlp4pj+ogAAAAAAm0aCEIqQnJwsjjt06BAcHHzTU0wThKZ1IWjdunbt2rVrV8kkTUchCEJOTo44bteunTmnmO5IJwiC6ZaEaH2mTZvWt29f49i0feiNpKSkmB7y9bBP8+bNE7vLvv322z179rRuPLA6NiAEAAAAALQaJAihCOfPnxfHZj5tMV1m+rAGgH1aunRpRUWFcdyjRw9zTjl+/Lg4dnd3DwkJsUhkUIb77rvvltbv2bNHHPfo0UPsaw37sWrVqk2bNhnHY8aMeeaZZ6wbD5TA9G/OqKgoQRDOnDnz9ddfJyQkZGZmVlZW+vv7BwcHDxo0aNy4ceJLCQAAAAAAKBAJQiiCaYKwbdu25pxiuqyoqCg/P1/SLRCAXRk8ePAtrTcYDKZ7ifXp06e5I4IN2759+7Jly8TDF1980YrBwCpSUlLEjKC/v/+aNWvYbQ6CIFy4cEEcazSau+66S2xoYWSsTf/1118XL14cFxf3xhtvDB8+vKWjBAAAAADADGprBwAIwvVbQ4WFhZlzimQHqezs7GaOCUCrtnz58rNnz4qHL7zwghWDgRLodLrz58+vW7du8uTJd955p7gz7owZM+Rbn6J1q6mpmTlzpliU/OWXX5rT/Bz2wLSCcMaMGZLsoERCQsKIESP+/ve/6/V6y4cGAAAAAMCtoYIQiiA+gxMEwd3d3ZxTJMsqKyubOSYArdfmzZufe+458bBPnz4TJkywYjyworVr1y5cuFCn05WXlxsMBtMfqdXqxx577OOPP1areaHKvixatOjEiRPG8fz58ydOnGjdeKAQ1dXVmZmZ4mFdXZ049vb2DggIKCsry8vLq6+vNz3rrbfeysvL+/zzz1suUAAAAAAAzMADLyiCaYLQ2dnZnFNcXFxudAUAuJHa2tqXXnrpvvvuE+s5XF1dP/nkE+tGBSuqqKjIy8srKyuTZAfbtWt3/PjxlStXOjg4WCs2WMW2bdvEBrPR0dHvvfeedeOBcqSnp0tqAX18fN57773MzMyioqLz589fu3atsLBw06ZNnTp1Ml22atWqzz77rGWDBQAAAADgJkgQQhFuI0Go1WpNdwMiQQjgpvbu3du/f/+3335bfMLr6Oi4ZcuW2NhY6wYGBbp8+fLs2bO/+uorSTEQWrfc3NyHH37YmC3WarXr16+XvJAEe2baX1QQhPj4+DNnzixcuNC0772np+e0adNOnTr11FNPmf6lumjRotLS0paLFQAAAACAmyFBCEUwrc+Q1HDciF6vN13JA1wAjbhw4cKUKVOGDh2alJQkTrq4uKxbt27cuHFWDAxW16lTp6lTp06dOnXIkCFhYWGm3UTPnDkze/bsKVOmVFdXWzFCtBiDwfDQQw/l5OQYD99+++2ePXtaNyQoyoULF8TxgAEDfv3115CQkAZXurq6Ll++/KGHHhJnioqKPvzwQ4uHCAAAAACA2UgQQhHc3NzEcVVVlTmnSJaZuXMhAHtTXFz87LPPRkdHf/fdd6bz8fHxJ0+evPfee60VGBRi9OjRmzdv3rx58549e65cuVJVVbV27drw8HBxwdatW8ePHy/pK4hWadmyZdu2bTOOx44du2DBAuvGA6V57rnnDP916NAhT0/Pxte/8847Xl5e4uGWLVssHCAAAAAAALeABCEUwTRBqNPpzDlFsowEIQC5tWvXRkZGLlu2rLa2Vpx0c3NbsmTJvn37IiIirBgblMnJyWn27Nnnzp2bMWOGOLlr1y6e7Ld6J06cWLRokXEcEBCwZs0a0/6QwG0IDAxcuHCheHjy5Mm8vDwrxgMAAAAAgCkShFAE0/ReSUmJOadI9nEhQQjAVFZW1siRIx988MHc3Fxx0tHR8a9//WtaWtrzzz9v2kkSkHB0dPz00087dOggzixZssR64cDiqqqqZs6cWVNTYzxcvXp1UFCQdUNC6zB27FhxbDAYTJuUAgAAAABgXRprBwAIgiCEhYWJ48zMTHNOuXLliukhD/IAiLZv3z579uz8/HzTyenTp7/55pudO3e2VlSwLZ6ens8///yTTz5pPDxy5IhOp3N2drZuVLCQjIyMlJQU4zgiIiI1NXXZsmU3WmxaBLZr1y7TlgZDhgzp06eP5eKEzenatavpoek7KwAAAAAAWBcJQihCZGSkOJZk/m7ENI/o7+/v7+/f/GEBsEFfffXVww8/XFdXJ8706tXrs88+69+/vxWjgi3q0aOH6eHly5dpS2sPzp8//+yzz5q5eNOmTZs2bRIPlyxZQoIQpjw8PBwdHcU212butA0AAAAAQAugwRoUwTRBePbsWXNOSU5OFseSt7MB2K0tW7Y88MADYnZQq9W+/vrrR44cITto57799ts7/uvhhx828yzJL5esrKzmjwxAq1ZfX2/6wgovtAEAAAAAlIMKQihC9+7dxXFOTs7Fixc7duzY+CkJCQkNng7AbqWkpDzyyCMGg8F4GBAQ8Msvv/Tr18+6UUEJNBrNgQMHjONjx4598cUXDg4ONz0rOzvb9NDDw8MiwQGwBZcuXRLbV/j5+Zn5dlpOTo74W0mgJT4AAAAAQElIEEIRevbs2aZNm2vXrhkP//jjj8YThDqd7tChQ+LhnXfeadn4ANiCBQsWlJWVGcdhYWG7du3q0qWLdUOCQnTq1Ekc63S6lJSU6Ojom54lqWgPDg5u/sigDKGhoRs2bDBz8aJFizIyMozjRx99dNSoUeKPevfu3fzBQRl27dr16KOPGsdBQUFXrlxxdHS86VkHDx4Uxx4eHjS9AAAAAAAoBwlCKIJKpRo/fvwXX3xhPFyzZs2cOXMaWb9ly5by8nLj2NXVdeTIkRYPEYCyHThwYPv27eLhl19+SXYQoqioKB8fn6KiIuPhnj17zEkQJiYmiuOQkJCQkBBLxQdr8/DwmDFjhpmL3377bTFB2K9fP/NPhE0bPXq0OM7Jydm6devUqVNvetann34qjocPH67R8H++AAAAAABKwR6EUIrp06eL43379h07duxGK/V6/fLly8XDiRMnuri4WDY4AIq3Zs0acXzPPfeYPskFHBwcTL8Sr7zySnFxceOn/Pnnn5988ol4OH78eJVKZan4AChe27ZtBw4cKB6++eabOp2u8VM2bty4c+dO8XD27NmWCg4AAAAAgFtHghBKMXbs2P79+xvHBoNh3rx5tbW1Da788MMPDx8+bByrVKqXX365hUIEoFQGg+H7778XD++55x4rBgNleuCBB8Rxbm7uwoUL9Xr9jRaXlpbOmTOnpqbGeKhSqebPn2/xEAEo29NPPy2Ojx8/Pnfu3EYWJyUlPfvss+Jht27dpk2bZsHgAAAAAAC4RSqDwWDtGID/9euvv44fP148HDdu3DfffOPh4WG6ZsWKFU899VR9fb3xcObMmevXr2/RKKE8+fn5AQEB4mFycnJUVJQV40HLS0tL69y5s3g4evRoT0/PW73Ihg0bzNlQCrarX79+puXp/fr1W7lyZd++fSXL1q9fv3DhwuzsbHHm/vvvX7duXQtFCcXr1atXUlKScbxixYrHH3/cuvGgxdTV1Q0YMODEiRPizOjRo9955x3J3pM6ne7VV19dsmRJXV2dccbBwWHnzp3Dhg1ryWgBAAAAAGgcCUIoyxNPPGHa0s3Pz2/OnDk9evRwdnZOT09fv369+EhOEITw8PDDhw/7+flZI1IoCAlCbNmypemVGVVVVc7Ozs0SD5TpxIkTd9xxR2VlpTijVqs7duzYpUuXzp0763S6c+fOnTt3Lj8/3/Ss7t2779+//zZSzmitSBDas1OnTsXGxpo2F1WpVD179uzcuXOHDh0qKysvXry4f//+srIy07OWLl363HPPtXiwAAAAAAA0RmPtAIDrfPDBB6mpqTt27DAeFhQULFmypMGVvr6+P/74I9lBAIIgXLx40dohwAb07t173bp1M2fOrK6uNs7o9fq0tLS0tLQbndK3b98ffviB7CAAox49emzduvXuu++uqqoyzhgMhpMnT548ebLB9Q4ODkuXLl2wYEELxggAAAAAgFnYgxDKotFofvnll8WLF6vVjX05hw0blpSUFB0d3WKBAVCy3Nxca4cA23DPPfckJCSY8+vDzc3txRdfPHjwYGhoaAsEBsBWjB49OjExUd6dWK5Pnz6///472UEAAAAAgDLRYhQKdfbs2S+//HLDhg3Xrl0TJ7Va7fjx4x966KGJEyc2nkGEXamsrHz33XfFwyeffNLf39+K8aDl/fjjj6Z7y92exYsXazQU1tsFg8Hw888/r1279sCBA1evXjX9kYuLS1xc3Lhx4x599FFfX19rRQglW7lypbhF5YQJE/r162fdeGAVer1+27Zta9as2bdvn+kfq4IgBAQEjB07dtq0aZMmTVKpVNaKEAAAAACAxpEghNKVlpZevXq1qqoqJCQkKCiI5ywAgGaUn59fUFBQUlLi7Ozs7+8fGBhInhjALcnNzc3Pzy8rK/Pw8AgKCvL19eXvVQAAAACA8pEgBAAAAAAAAAAAAOwITRoBAAAAAAAAAAAAO0KCEAAAAAAAAAAAALAjJAgBAAAAAAAAAAAAO0KCEAAAAAAAAAAAALAjJAgBAAAAAAAAAAAAO0KCENfoZy8AAA9NSURBVAAAAAAAAAAAALAjJAgBAAAAAAAAAAAAO0KCEAAAAAAAAAAAALAjJAgBAAAAAAAAAAAAO0KCEAAAAAAAAAAAALAjJAgBAAAAAAAAAAAAO0KCEAAAAAAAAAAAALAjJAgBAAAAAAAAAAAAO0KCEAAAAAAAAAAAALAjJAgBAAAAAAAAAAAAO0KCEAAAAAAAAAAAALAjJAgBAAAAAAAAAAAAO0KCEAAAAAAAAAAAALAjJAgBAAAAAAAAAAAAO0KCEAAAAAAAAAAAALAjJAgBAAAAAAAAAAAAO0KCEAAAAAAAAAAAALAjJAgBAAAAAAAAAAAAO0KCEAAAAAAAAAAAALAjGmsHAABAq1VXV/f+++/X1NSIM/Hx8SNGjLi9q+3du3fv3r3iYVBQ0GOPPdbUEAEAAAAAAADYHxKEAABYikajKSkpefPNN8WZwMDAlJQUb2/vW71URUXFrFmzrl69Ks6sW7eueaIEAAAAAAAAYGdoMQoAgAX94x//6NKli3iYm5u7ePHi27jOG2+8YZodHDly5P33398M8QEAAAAAAACwPyqDwWDtGAAAaM127949fPhw8VCtVh89erR3797mXyEtLS0mJqa6utp4qNVqT506FRER0cyBAgAAAAAAALAPVBACAGBZw4YNmzNnjnio1+vnz59/Sy/oPPPMM2J2UBCERYsWkR0EAAAAAAAAcNuoIAQAwOKKioqioqJyc3PFmc8//3zu3LnmnLt9+/Zx48aJh126dDl9+rRWq23+KAEAAAAAAADYBxKEAAC0hI0bN86cOVM89Pf3T0lJ8fX1bfys2tra7t27p6SkiDM7duwYNWqUpaIEAAAAAAAAYAdoMQoAQEuYMWPG+PHjxcP8/PyXXnrppmctW7bMNDs4a9YssoMAAAAAAAAAmogKQgAAWkhGRkZMTExFRYXxUK1WJyYm9u/f/0brs7OzIyIiysrKjIfe3t7nzp0LCgpqiVgBAAAAAAAAtF4aawcAAIC9aN++/euvv/7ss88aD/V6/fz58w8dOqRWN1zQv2jRIjE7KAjCW2+9dUvZQYPBcOHChWvXruXm5gYEBHTq1Ck0NFSlUt12/CUlJZmZmVeuXCktLXV3d/fz84uOjvbw8LjtCwqCUFtbe+7cudTUVHd39yFDhjg7OzflagAAAAAAAADMQQUhAAAtR6/Xx8bGHj16VJxZsWLF448/Ll+ZmJgYHx8v/pqOjY09ePDgjVKJEklJSStWrNi6deu1a9dM57Va7dixY59//vnBgwebGbDBYNiyZcuaNWv27Nljmq00UqlUXbt2vffee+fPnx8QENDIdZ5++unCwkJBELp27fryyy8bJ7/66qu///3vly9fNh4mJydHRUWZGRgAAAAAAACA20aCEACAFpWUlNSvX7+6ujrjoa+vb0pKir+/v+kag8EQGxt75MgR46GDg8PRo0d79ep104uXlpa+8MILq1at0uv1jSwbMGDAf/7zn8jIyMavdvHixVmzZiUmJt70cz09PT/++OPZs2ffaEFYWNjVq1cFQRg6dOju3bsFQVi4cOH7779vuoYEIQAAAAAAANAyzCpEAAAAzaVnz57PPfeceFhYWLho0SLJmtWrV4vZQUEQFixYYE52MC8vb9iwYZ999lnj2UFBEA4fPjxo0KDGM38ZGRlDhgwxJzsoCEJpaemDDz64fv16cxYLgvDyyy9LsoMAAAAAAAAAWgwVhAAAtLSqqqpu3bqlp6cbD1Uq1cGDBwcOHGg8LCkpiYiIyM3NNR6GhYUlJye7u7vf9JoDBgw4c+aMOOPs7HznnXcOHjw4KCiosLDw+PHj33//fVFRkbjA1dV1x44d8fHxDV5w3Lhx27dvFw81Gs0999wTExMTGhqq0WiuXr16/vz5LVu2VFRUiGt8fX0vXrzo6ekpv5ppBeHLL788duxY079ANBqNr69vQkJCeHh44/+YAAAAAAAAAJqOBCEAAFawY8eOMWPGiIe9e/c+evSocYvB55577l//+pf4o++++27y5Mk3veCCBQuWL18uHvbr12/t2rWSjp35+fmPPfbY999/L8706NHj+PHjDg4OkqsdPnw4NjZWPBw+fPiaNWvatm0rWVZaWvrMM8+sXr1anFm3bt39998vD09MEPbo0SM/Pz8rK8s4fuKJJ4YOHRoREaFSqW76zwgAAAAAAACgWdBiFAAAKxg9evSDDz4oHp44cWLlypWCICQnJ3/44Yfi/MSJE83JDp4+fdr0rAcffDAhIUG+n5+/v/9333337rvvijOnTp367LPP5BfcvHmzOO7YseOWLVvk2UFBEDw9PT///PNBgwaJM8eOHWs81FOnTmVlZalUqnfffffkyZPz5s2L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\"/>","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"","category":"page"},{"location":"generated/box/","page":"Box model","title":"Box model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#*Ocean*-*Bio*geochemical-*M*odelling-*E*nvironment-OceanBioME","page":"Home","title":"Ocean Biogeochemical Modelling Environment - OceanBioME","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"OceanBioME.jl is a fast and flexible ocean biogeochemical modelling environment. It is highly modular and is designed to make it easy to implement and use a variety of biogeochemical and physical models. OceanBioME is built to be coupled with physics models from Oceananigans.jl allowing simulations across a wide range of spatial scales ranging from a global hydrostatic free surface model to non-hydrostatic large-eddy simulations. OceanBioME was designed specifically for ocean carbon dioxide removal applications. Notably, it includes active particles which allow individual-based models to be seamlessly coupled with the flow physics, ecosystem models, and carbonate chemistry.","category":"page"},{"location":"","page":"Home","title":"Home","text":"OceanBioME.jl currently provides a core of several biogeochemical models Nutrient–Phytoplankton–Zooplankton–Detritus (NPZD), LOBSTER, a medium complexity model, and an early implementation of PISCES, a complex model. It also provides essential utilities like air-sea gas exchange models to provide appropriate top boundary conditions, a carbon chemistry model for computing the pCO₂, and sediment models to for the benthic boundary. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"OceanBioME.jl includes a framework for integrating the growth of biological/active particles which move around and can interact with the (Eulerian) tracer fields - for example, consuming nutrients and carbon dioxide while releasing dissolved organic material. A growth model for sugar kelp is currently implemented using active particles, and this model can be used in a variety of dynamical scenarios including free-floating or bottom-attached particles.","category":"page"},{"location":"#Quick-install","page":"Home","title":"Quick install","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"OceanBioME is a registered Julia package. So to install it,","category":"page"},{"location":"","page":"Home","title":"Home","text":"Download Julia.\nLaunch Julia and type","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg\njulia> Pkg.add(\"OceanBioME\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"compat: Julia 1.10\nOceanBioME.jl requires Julia version 1.10 or later.","category":"page"},{"location":"#Running-your-first-model","page":"Home","title":"Running your first model","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"As a simple example lets run a Nutrient-Phytoplankton-Zooplankton-Detritus (NPZD) model in a two-dimensional simulation of a buoyancy front. This example requires Oceananigans, so we install that first via:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg; Pkg.add(\"Oceananigans\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"and then:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using OceanBioME, Oceananigans\nusing Oceananigans.Units\n\ngrid = RectilinearGrid(CPU(), size = (160, 32), extent = (10000meters, 500meters), topology = (Bounded, Flat, Bounded))\n\nbiogeochemistry = NutrientPhytoplanktonZooplanktonDetritus(; grid) \n\nmodel = NonhydrostaticModel(; grid, biogeochemistry,\n                              advection = WENO(),\n\t\t\t      closure = AnisotropicMinimumDissipation(),\n                              buoyancy = SeawaterBuoyancy(constant_salinity = true))\n\n@inline front(x, z, μ, δ) = μ + δ * tanh((x - 7000 + 4 * z) / 500)\n\nPᵢ(x, z) = ifelse(z > -50, 0.03, 0.01)\nNᵢ(x, z) = front(x, z, 2.5, -2)\nTᵢ(x, z) = front(x, z, 9, 0.05)\n\nset!(model, N = Nᵢ, P = Pᵢ, Z = Pᵢ, T = Tᵢ)\n\nsimulation = Simulation(model; Δt = 50, stop_time = 4days)\n\nsimulation.output_writers[:tracers] = JLD2Writer(model, model.tracers,\n                                                 filename = \"buoyancy_front.jld2\",\n                                                 schedule = TimeInterval(24minute),\n                                                 overwrite_existing = true)\n\nrun!(simulation)","category":"page"},{"location":"","page":"Home","title":"Home","text":"We can then load the saved output and visualize it:","category":"page"},{"location":"","page":"Home","title":"Home","text":"T = FieldTimeSeries(\"buoyancy_front.jld2\", \"T\")\nN = FieldTimeSeries(\"buoyancy_front.jld2\", \"N\")\nP = FieldTimeSeries(\"buoyancy_front.jld2\", \"P\")\n\nxc, yc, zc = nodes(T)\n\ntimes = T.times\n\nusing CairoMakie\n\nn = Observable(1)\n\nT_lims = (8.94, 9.06)\nN_lims = (0, 4.5)\nP_lims = (0.007, 0.02)\n\nTₙ = @lift interior(T[$n], :, 1, :)\nNₙ = @lift interior(N[$n], :, 1, :)\nPₙ = @lift interior(P[$n], :, 1, :)\n\nfig = Figure(size = (1000, 520), fontsize = 20)\n\ntitle = @lift \"t = $(prettytime(times[$n]))\"\nLabel(fig[0, :], title)\n\naxis_kwargs = (xlabel = \"x (m)\", ylabel = \"z (m)\", width = 770, yticks = [-400, -200, 0])\nax1 = Axis(fig[1, 1]; title = \"Temperature (°C)\", axis_kwargs...)\nax2 = Axis(fig[2, 1]; title = \"Nutrients concentration (mmol N / m³)\",axis_kwargs...)\nax3 = Axis(fig[3, 1]; title = \"Phytoplankton concentration (mmol N / m³)\", axis_kwargs...)\n\nhm1 = heatmap!(ax1, xc, zc, Tₙ, colorrange = T_lims, colormap = Reverse(:lajolla), interpolate = true)\nhm2 = heatmap!(ax2, xc, zc, Nₙ, colorrange = N_lims, colormap = Reverse(:bamako), interpolate = true)\nhm3 = heatmap!(ax3, xc, zc, Pₙ, colorrange = P_lims, colormap = Reverse(:bamako), interpolate = true)\n\nColorbar(fig[1, 2], hm1, ticks = [8.95, 9.0, 9.05])\nColorbar(fig[2, 2], hm2, ticks = [0, 2, 4])\nColorbar(fig[3, 2], hm3, ticks = [0.01, 0.02, 0.03])\n\nrowgap!(fig.layout, 0)\n\nrecord(fig, \"buoyancy_front.mp4\", 1:length(times)) do i\n    n[] = i\nend\n\nnothing #hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: buoyancy_front)","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the example above, OceanBioME.jl provides the biogeochemistry and everything else is taken care of by Oceananigans.jl. For comprehensive documentation of the physics modelling see Oceananigans' Documentation; for biogeochemistry and other features we provide read below.","category":"page"},{"location":"#Places-to-find-OceanBioME-information","page":"Home","title":"Places to find OceanBioME information","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This documentation, which provides\ndocumented examples (browse them starting, e.g., from the single-column model),\nexplanations of model implementation methods,\ndetails of currently implemented models, and\na library documenting all user-facing objects and functions.\nDiscussions on the OceanBioME github\nIf you've got a question or something to talk about, don't hesitate to start a new discussion!\nIssues and pull requests also contain lots of information about problems we've found, solutions we're trying to implement, and ideas for the future.","category":"page"},{"location":"#Getting-in-touch","page":"Home","title":"Getting in touch","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Whether you need help getting started with OceanBioME, found a bug, want OceanBioME to be more expanded, or just want to chat about our project, you can:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Start a discussion. \nOpen an issue. Issues are best if you think the OceanBioME source code needs attention: a bug, a sign error, an important missing feature, or a typo in the documentation.","category":"page"},{"location":"#Citing","page":"Home","title":"Citing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you use OceanBioME as part of your research, teaching, or other activities, we would be grateful if you could cite our work below and mention OceanBioME by name, as well as citing and acknowledging Oceananigans as without them this package would not be possible.","category":"page"},{"location":"","page":"Home","title":"Home","text":"@article{OceanBioMEJOSS,\n  doi = {10.21105/joss.05669},\n  url = {https://doi.org/10.21105/joss.05669},\n  year = {2023},\n  publisher = {The Open Journal},\n  volume = {8},\n  number = {90},\n  pages = {5669},\n  author = {Jago Strong-Wright and Si Chen and Navid C. Constantinou and Simone Silvestri and Gregory LeClaire Wagner and John R. Taylor},\n  title = {{OceanBioME.jl: A flexible environment for modelling the coupled interactions between ocean biogeochemistry and physics}},\n  journal = {Journal of Open Source Software}\n}","category":"page"},{"location":"#Funding","page":"Home","title":"Funding","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"OceanBioME.jl is supported through grants from the Center for Climate Repair at Cambridge and the Gordon and Betty Moore Foundation.","category":"page"},{"location":"generated/eady/#Biogeochemistry-in-submesoscale-eddies-in-the-Eady-model","page":"Baroclinic instability","title":"Biogeochemistry in submesoscale eddies in the Eady model","text":"","category":"section"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"In this example we setup a 3D model with a constant background buoyancy gradient with associated thermal wind (the Eady model) with the LOBSTER biogeochemical model. This example demonstrates how to use biogeochemistry in a more complicated physical model. The parameters in this example correspond roughly to those used by Taylor (2016) and result to the generation of a single submesoscale eddy.","category":"page"},{"location":"generated/eady/#Install-dependencies","page":"Baroclinic instability","title":"Install dependencies","text":"","category":"section"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"First we ensure we have the required dependencies installed","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"using Pkg\npkg \"add OceanBioME, Oceananigans, CairoMakie\"","category":"page"},{"location":"generated/eady/#Model-setup","page":"Baroclinic instability","title":"Model setup","text":"","category":"section"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"We load the required packages. Although not required, we also set the random seed to ensure reproducibility of the results.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"using OceanBioME, Oceananigans, Printf\nusing Oceananigans.Units\n\nusing Random\nRandom.seed!(11)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Random.TaskLocalRNG()","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Construct a grid with uniform grid spacing on GPU (just remove GPU() to run on CPU)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"grid = RectilinearGrid(GPU(); size = (32, 32, 8), extent = (1kilometer, 1kilometer, 100meters))","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"32×32×8 RectilinearGrid{Float64, Oceananigans.Grids.Periodic, Oceananigans.Grids.Periodic, Oceananigans.Grids.Bounded} on CUDAGPU with 3×3×3 halo\n├── Periodic x ∈ [0.0, 1000.0) regularly spaced with Δx=31.25\n├── Periodic y ∈ [0.0, 1000.0) regularly spaced with Δy=31.25\n└── Bounded  z ∈ [-100.0, 0.0] regularly spaced with Δz=12.5","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Set the Coriolis and buoyancy models.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"coriolis = FPlane(f = 1e-4) # [s⁻¹]\nbuoyancy = SeawaterBuoyancy()","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"SeawaterBuoyancy{Float64}:\n├── gravitational_acceleration: 9.80665\n└── equation_of_state: LinearEquationOfState(thermal_expansion=0.000167, haline_contraction=0.00078)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Specify parameters that are used to construct the background state.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"background_state_parameters = (M = 1e-4,       # s⁻¹, geostrophic shear\n                               f = coriolis.f, # s⁻¹, Coriolis parameter\n                               N = 1e-4,       # s⁻¹, buoyancy frequency\n                               H = grid.Lz,\n                               g = buoyancy.gravitational_acceleration,\n                               α = buoyancy.equation_of_state.thermal_expansion)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"(M = 0.0001, f = 0.0001, N = 0.0001, H = 100.0, g = 9.80665, α = 0.000167)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"We assume a background buoyancy B with a constant stratification and also a constant lateral gradient (in the zonal direction). The background velocity components U and V are prescribed so that the thermal wind relationship is satisfied, that is, f partial_z U = - partial_y B and f partial_z V = partial_x B.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"T(x, y, z, t, p) = (p.M^2 * x + p.N^2 * (z + p.H)) / (p.g * p.α)\nV(x, y, z, t, p) = p.M^2 / p.f * (z + p.H)\n\nV_field = BackgroundField(V, parameters = background_state_parameters)\nT_field = BackgroundField(T, parameters = background_state_parameters)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"BackgroundField{typeof(Main.var\"##225\".T), @NamedTuple{M::Float64, f::Float64, N::Float64, H::Float64, g::Float64, α::Float64}}\n├── func: T (generic function with 1 method)\n└── parameters: (M = 0.0001, f = 0.0001, N = 0.0001, H = 100.0, g = 9.80665, α = 0.000167)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Specify some horizontal and vertical viscosity and diffusivity.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"νᵥ = κᵥ = 1e-4 # [m² s⁻¹]\nvertical_diffusivity = VerticalScalarDiffusivity(ν = νᵥ, κ = κᵥ)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"VerticalScalarDiffusivity{ExplicitTimeDiscretization}(ν=0.0001, κ=0.0001)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Setup the biogeochemical model with optional carbonate chemistry turned on.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"biogeochemistry = LOBSTER(; grid,\n                            carbonates = true,\n                            open_bottom = true)\n\nDIC_bcs = FieldBoundaryConditions(top = CarbonDioxideGasExchangeBoundaryCondition())","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Oceananigans.FieldBoundaryConditions, with boundary conditions\n├── west: DefaultBoundaryCondition (FluxBoundaryCondition: Nothing)\n├── east: DefaultBoundaryCondition (FluxBoundaryCondition: Nothing)\n├── south: DefaultBoundaryCondition (FluxBoundaryCondition: Nothing)\n├── north: DefaultBoundaryCondition (FluxBoundaryCondition: Nothing)\n├── bottom: DefaultBoundaryCondition (FluxBoundaryCondition: Nothing)\n├── top: FluxBoundaryCondition: DiscreteBoundaryFunction with (::OceanBioME.Models.GasExchangeModel.GasExchange{Float64, OceanBioME.Models.GasExchangeModel.ScaledGasTransferVelocity.SchmidtScaledTransferVelocity{OceanBioME.Models.GasExchangeModel.PolynomialParameterisation{2, Tuple{Float64, Float64, Float64}}, OceanBioME.Models.GasExchangeModel.PolynomialParameterisation{4, NTuple{5, Float64}}, OceanBioME.Models.GasExchangeModel.MolPerKgPerAtmToMMolPerCubicMPerMicroAtm{OceanBioME.Models.CarbonChemistryModel.K0{Float64}, typeof(OceanBioME.Models.teos10_polynomial_approximation)}}, OceanBioME.Models.GasExchangeModel.CarbonDioxideConcentration{OceanBioME.Models.CarbonChemistryModel.CarbonChemistry{OceanBioME.Models.CarbonChemistryModel.K0{Float64}, @NamedTuple{K1::OceanBioME.Models.CarbonChemistryModel.K1{Float64, OceanBioME.Models.CarbonChemistryModel.PressureCorrection{Float64}}, K2::OceanBioME.Models.CarbonChemistryModel.K2{Float64, OceanBioME.Models.CarbonChemistryModel.PressureCorrection{Float64}}}, OceanBioME.Models.CarbonChemistryModel.KB{Float64, OceanBioME.Models.CarbonChemistryModel.PressureCorrection{Float64}}, OceanBioME.Models.CarbonChemistryModel.KS{OceanBioME.Models.CarbonChemistryModel.IonicStrength{Float64}, Float64, OceanBioME.Models.CarbonChemistryModel.PressureCorrection{Float64}}, OceanBioME.Models.CarbonChemistryModel.KF{OceanBioME.Models.CarbonChemistryModel.IonicStrength{Float64}, OceanBioME.Models.CarbonChemistryModel.KS{OceanBioME.Models.CarbonChemistryModel.IonicStrength{Float64}, Float64, OceanBioME.Models.CarbonChemistryModel.PressureCorrection{Float64}}, Float64, OceanBioME.Models.CarbonChemistryModel.PressureCorrection{Float64}}, @NamedTuple{KP1::OceanBioME.Models.CarbonChemistryModel.KP{Float64, OceanBioME.Models.CarbonChemistryModel.PressureCorrection{Float64}}, KP2::OceanBioME.Models.CarbonChemistryModel.KP{Float64, OceanBioME.Models.CarbonChemistryModel.PressureCorrection{Float64}}, KP3::OceanBioME.Models.CarbonChemistryModel.KP{Float64, OceanBioME.Models.CarbonChemistryModel.PressureCorrection{Float64}}}, OceanBioME.Models.CarbonChemistryModel.KSi{OceanBioME.Models.CarbonChemistryModel.IonicStrength{Float64}, Float64}, OceanBioME.Models.CarbonChemistryModel.KW{Float64, OceanBioME.Models.CarbonChemistryModel.PressureCorrection{Float64}}, OceanBioME.Models.CarbonChemistryModel.IonicStrength{Float64}, OceanBioME.Models.CarbonChemistryModel.KSP{Float64, OceanBioME.Models.CarbonChemistryModel.PressureCorrection{Float64}}, typeof(OceanBioME.Models.teos10_polynomial_approximation)}, OceanBioME.Models.GasExchangeModel.PolynomialVirialCoefficientForCarbonDioxide{Float64}, OceanBioME.Models.GasExchangeModel.CrossVirialCoefficientForCarbonDioxide{Float64}, Float64, Nothing}, Float64})\n└── immersed: DefaultBoundaryCondition (FluxBoundaryCondition: Nothing)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Model instantiation","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"model = NonhydrostaticModel(; grid,\n                              biogeochemistry,\n                              boundary_conditions = (DIC = DIC_bcs, ),\n                              advection = WENO(),\n                              timestepper = :RungeKutta3,\n                              coriolis,\n                              tracers = (:T, :S),\n                              buoyancy,\n                              background_fields = (T = T_field, v = V_field),\n                              closure = vertical_diffusivity)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"NonhydrostaticModel{GPU, RectilinearGrid}(time = 0 seconds, iteration = 0)\n├── grid: 32×32×8 RectilinearGrid{Float64, Oceananigans.Grids.Periodic, Oceananigans.Grids.Periodic, Oceananigans.Grids.Bounded} on CUDAGPU with 3×3×3 halo\n├── timestepper: RungeKutta3TimeStepper\n├── advection scheme: WENO{3, Float64, Float32}(order=5)\n├── tracers: (T, S, NO₃, NH₄, P, Z, sPOM, bPOM, DOM, DIC, Alk)\n├── closure: VerticalScalarDiffusivity{ExplicitTimeDiscretization}(ν=0.0001, κ=(T=0.0001, S=0.0001, NO₃=0.0001, NH₄=0.0001, P=0.0001, Z=0.0001, sPOM=0.0001, bPOM=0.0001, DOM=0.0001, DIC=0.0001, Alk=0.0001))\n├── buoyancy: SeawaterBuoyancy with g=9.80665 and LinearEquationOfState(thermal_expansion=0.000167, haline_contraction=0.00078) with ĝ = NegativeZDirection()\n└── coriolis: FPlane{Float64}(f=0.0001)","category":"page"},{"location":"generated/eady/#Initial-conditions","page":"Baroclinic instability","title":"Initial conditions","text":"","category":"section"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Start with a bit of random noise added to the background thermal wind and an arbitary biogeochemical state.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Ξ(z) = randn() * z / grid.Lz * (z / grid.Lz + 1)\n\nŨ = 1e-3\nuᵢ(x, y, z) = Ũ * Ξ(z)\nvᵢ(x, y, z) = Ũ * Ξ(z)\n\nset!(model, u=uᵢ, v=vᵢ, P = 0.03, Z = 0.03, NO₃ = 4.0, NH₄ = 0.05, DIC = 2200.0, Alk = 2409.0, S = 35, T = 20)","category":"page"},{"location":"generated/eady/#Setup-the-simulation","page":"Baroclinic instability","title":"Setup the simulation","text":"","category":"section"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Choose an appropriate initial timestep for this resolution and set up the simulation","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Δx = minimum_xspacing(grid, Center(), Center(), Center())\nΔy = minimum_yspacing(grid, Center(), Center(), Center())\nΔz = minimum_zspacing(grid, Center(), Center(), Center())\n\nΔt₀ = 0.75 * min(Δx, Δy, Δz) / V(0, 0, 0, 0, background_state_parameters)\n\nsimulation = Simulation(model, Δt = Δt₀, stop_time = 10days)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Simulation of NonhydrostaticModel{GPU, RectilinearGrid}(time = 0 seconds, iteration = 0)\n├── Next time step: 15.625 minutes\n├── Elapsed wall time: 0 seconds\n├── Wall time per iteration: NaN days\n├── Stop time: 10 days\n├── Stop iteration: Inf\n├── Wall time limit: Inf\n├── Minimum relative step: 0.0\n├── Callbacks: OrderedDict with 4 entries:\n│   ├── stop_time_exceeded => 4\n│   ├── stop_iteration_exceeded => -\n│   ├── wall_time_limit_exceeded => e\n│   └── nan_checker => }\n├── Output writers: OrderedDict with no entries\n└── Diagnostics: OrderedDict with no entries","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Adapt the time step while keeping the CFL number fixed.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"wizard = TimeStepWizard(cfl = 0.75, diffusive_cfl = 0.75, max_Δt = 30minutes)\nsimulation.callbacks[:wizard] = Callback(wizard, IterationInterval(5))","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Create a progress message.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"progress(sim) = @printf(\"i: % 6d, sim time: % 10s, wall time: % 10s, Δt: % 10s, CFL: %.2e\\n\",\n                        sim.model.clock.iteration,\n                        prettytime(sim.model.clock.time),\n                        prettytime(sim.run_wall_time),\n                        prettytime(sim.Δt),\n                        AdvectiveCFL(sim.Δt)(sim.model))\n\nsimulation.callbacks[:progress] = Callback(progress, IterationInterval(20))","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Callback of progress on IterationInterval(20)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Here, we add some diagnostics to calculate and output.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"u, v, w = model.velocities # unpack velocity `Field`s","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"NamedTuple with 3 Fields on 32×32×8 RectilinearGrid{Float64, Oceananigans.Grids.Periodic, Oceananigans.Grids.Periodic, Oceananigans.Grids.Bounded} on CUDAGPU with 3×3×3 halo:\n├── u: 32×32×8 Field{Oceananigans.Grids.Face, Oceananigans.Grids.Center, Oceananigans.Grids.Center} on Oceananigans.Grids.RectilinearGrid on CUDAGPU\n├── v: 32×32×8 Field{Oceananigans.Grids.Center, Oceananigans.Grids.Face, Oceananigans.Grids.Center} on Oceananigans.Grids.RectilinearGrid on CUDAGPU\n└── w: 32×32×9 Field{Oceananigans.Grids.Center, Oceananigans.Grids.Center, Oceananigans.Grids.Face} on Oceananigans.Grids.RectilinearGrid on CUDAGPU","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"and also calculate the vertical vorticity.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"ζ = Field(∂x(v) - ∂y(u))","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"32×32×8 Field{Oceananigans.Grids.Face, Oceananigans.Grids.Face, Oceananigans.Grids.Center} on Oceananigans.Grids.RectilinearGrid on CUDAGPU\n├── grid: 32×32×8 RectilinearGrid{Float64, Oceananigans.Grids.Periodic, Oceananigans.Grids.Periodic, Oceananigans.Grids.Bounded} on CUDAGPU with 3×3×3 halo\n├── boundary conditions: FieldBoundaryConditions\n│   └── west: Periodic, east: Periodic, south: Periodic, north: Periodic, bottom: ZeroFlux, top: ZeroFlux, immersed: Nothing\n├── operand: BinaryOperation at (Face, Face, Center)\n├── status: time=0.0\n└── data: 38×38×14 OffsetArray(::CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}, -2:35, -2:35, -2:11) with eltype Float64 with indices -2:35×-2:35×-2:11\n    └── max=6.41337e-5, min=-5.24045e-5, mean=-1.28213e-23","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Periodically save the velocities and vorticity to a file.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"simulation.output_writers[:fields] = JLD2Writer(model, merge(model.tracers, (; u, v, w, ζ));\n                                                schedule = TimeInterval(2hours),\n                                                filename = \"eady_turbulence_bgc\",\n                                                overwrite_existing = true)\n","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Run the simulation","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"run!(simulation)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"[ Info: Initializing simulation...\ni:      0, sim time:  0 seconds, wall time:  0 seconds, Δt: 17.188 minutes, CFL: 3.25e-01\n[ Info:     ... simulation initialization complete (2.675 minutes)\n[ Info: Executing initial time step...\n[ Info:     ... initial time step complete (17.009 seconds).\ni:     20, sim time:    6 hours, wall time: 2.971 minutes, Δt: 25.164 minutes, CFL: 4.70e-01\ni:     40, sim time:   15 hours, wall time: 2.975 minutes, Δt: 30 minutes, CFL: 5.87e-01\ni:     60, sim time: 1.042 days, wall time: 2.978 minutes, Δt: 30 minutes, CFL: 6.06e-01\ni:     80, sim time: 1.458 days, wall time: 2.982 minutes, Δt: 30 minutes, CFL: 6.34e-01\ni:    100, sim time: 1.875 days, wall time: 2.985 minutes, Δt: 30 minutes, CFL: 6.52e-01\ni:    120, sim time: 2.292 days, wall time: 2.989 minutes, Δt: 30 minutes, CFL: 7.16e-01\ni:    140, sim time: 2.687 days, wall time: 2.992 minutes, Δt: 28.625 minutes, CFL: 7.50e-01\ni:    160, sim time:     3 days, wall time: 2.995 minutes, Δt: 25.231 minutes, CFL: 7.50e-01\ni:    180, sim time: 3.308 days, wall time: 2.999 minutes, Δt: 19.652 minutes, CFL: 7.50e-01\ni:    200, sim time: 3.548 days, wall time: 3.002 minutes, Δt: 16.176 minutes, CFL: 7.50e-01\ni:    220, sim time: 3.749 days, wall time: 3.005 minutes, Δt: 14.433 minutes, CFL: 7.50e-01\ni:    240, sim time: 3.926 days, wall time: 3.009 minutes, Δt: 13.164 minutes, CFL: 7.50e-01\ni:    260, sim time: 4.092 days, wall time: 3.012 minutes, Δt: 13.173 minutes, CFL: 7.50e-01\ni:    280, sim time: 4.250 days, wall time: 3.015 minutes, Δt: 12.970 minutes, CFL: 7.50e-01\ni:    300, sim time: 4.413 days, wall time: 3.018 minutes, Δt: 12.543 minutes, CFL: 7.50e-01\ni:    320, sim time: 4.577 days, wall time: 3.021 minutes, Δt: 12.198 minutes, CFL: 7.50e-01\ni:    340, sim time: 4.743 days, wall time: 3.024 minutes, Δt: 11.900 minutes, CFL: 7.50e-01\ni:    360, sim time: 4.909 days, wall time: 3.028 minutes, Δt: 11.816 minutes, CFL: 7.50e-01\ni:    380, sim time: 5.066 days, wall time: 3.031 minutes, Δt: 11.594 minutes, CFL: 7.50e-01\ni:    400, sim time: 5.216 days, wall time: 3.034 minutes, Δt: 11.887 minutes, CFL: 7.50e-01\ni:    420, sim time: 5.378 days, wall time: 3.037 minutes, Δt: 12.793 minutes, CFL: 7.50e-01\ni:    440, sim time: 5.544 days, wall time: 3.041 minutes, Δt: 12.223 minutes, CFL: 7.50e-01\ni:    460, sim time: 5.698 days, wall time: 3.044 minutes, Δt: 11.115 minutes, CFL: 7.50e-01\ni:    480, sim time: 5.841 days, wall time: 3.047 minutes, Δt: 10.360 minutes, CFL: 7.50e-01\ni:    500, sim time: 5.980 days, wall time: 3.049 minutes, Δt: 9.878 minutes, CFL: 7.50e-01\ni:    520, sim time: 6.109 days, wall time: 3.052 minutes, Δt: 8.825 minutes, CFL: 7.50e-01\ni:    540, sim time: 6.226 days, wall time: 3.055 minutes, Δt: 8.569 minutes, CFL: 7.50e-01\ni:    560, sim time: 6.333 days, wall time: 3.057 minutes, Δt: 8.053 minutes, CFL: 7.50e-01\ni:    580, sim time: 6.438 days, wall time: 3.060 minutes, Δt: 7.533 minutes, CFL: 7.50e-01\ni:    600, sim time: 6.535 days, wall time: 3.062 minutes, Δt: 7.065 minutes, CFL: 7.50e-01\ni:    620, sim time: 6.630 days, wall time: 3.065 minutes, Δt: 6.587 minutes, CFL: 7.50e-01\ni:    640, sim time: 6.722 days, wall time: 3.068 minutes, Δt: 6.692 minutes, CFL: 7.50e-01\ni:    660, sim time: 6.815 days, wall time: 3.070 minutes, Δt: 6.533 minutes, CFL: 7.50e-01\ni:    680, sim time: 6.902 days, wall time: 3.073 minutes, Δt: 6.739 minutes, CFL: 7.50e-01\ni:    700, sim time: 6.995 days, wall time: 3.075 minutes, Δt: 7.441 minutes, CFL: 7.50e-01\ni:    720, sim time: 7.100 days, wall time: 3.078 minutes, Δt: 8.095 minutes, CFL: 7.50e-01\ni:    740, sim time: 7.204 days, wall time: 3.081 minutes, Δt: 7.773 minutes, CFL: 7.50e-01\ni:    760, sim time: 7.311 days, wall time: 3.083 minutes, Δt: 7.987 minutes, CFL: 7.50e-01\ni:    780, sim time: 7.422 days, wall time: 3.086 minutes, Δt: 8.171 minutes, CFL: 7.50e-01\ni:    800, sim time: 7.537 days, wall time: 3.089 minutes, Δt: 9.040 minutes, CFL: 7.50e-01\ni:    820, sim time: 7.659 days, wall time: 3.091 minutes, Δt: 8.828 minutes, CFL: 7.50e-01\ni:    840, sim time: 7.775 days, wall time: 3.094 minutes, Δt: 8.821 minutes, CFL: 7.50e-01\ni:    860, sim time: 7.896 days, wall time: 3.097 minutes, Δt: 9.231 minutes, CFL: 7.50e-01\ni:    880, sim time: 8.019 days, wall time: 3.099 minutes, Δt: 8.945 minutes, CFL: 7.50e-01\ni:    900, sim time: 8.136 days, wall time: 3.102 minutes, Δt: 8.205 minutes, CFL: 7.50e-01\ni:    920, sim time: 8.244 days, wall time: 3.104 minutes, Δt: 7.660 minutes, CFL: 7.50e-01\ni:    940, sim time: 8.344 days, wall time: 3.107 minutes, Δt: 7.684 minutes, CFL: 7.50e-01\ni:    960, sim time: 8.449 days, wall time: 3.110 minutes, Δt: 7.679 minutes, CFL: 7.50e-01\ni:    980, sim time: 8.554 days, wall time: 3.112 minutes, Δt: 7.947 minutes, CFL: 7.50e-01\ni:   1000, sim time: 8.660 days, wall time: 3.115 minutes, Δt: 8.957 minutes, CFL: 7.50e-01\ni:   1020, sim time: 8.776 days, wall time: 3.118 minutes, Δt: 9.564 minutes, CFL: 7.50e-01\ni:   1040, sim time: 8.909 days, wall time: 3.121 minutes, Δt: 9.797 minutes, CFL: 7.50e-01\ni:   1060, sim time: 9.035 days, wall time: 3.123 minutes, Δt: 9.899 minutes, CFL: 7.50e-01\ni:   1080, sim time: 9.162 days, wall time: 3.126 minutes, Δt: 9.016 minutes, CFL: 7.50e-01\ni:   1100, sim time: 9.280 days, wall time: 3.129 minutes, Δt: 8.442 minutes, CFL: 7.50e-01\ni:   1120, sim time: 9.391 days, wall time: 3.131 minutes, Δt: 8.132 minutes, CFL: 7.50e-01\ni:   1140, sim time: 9.500 days, wall time: 3.134 minutes, Δt: 8.251 minutes, CFL: 7.50e-01\ni:   1160, sim time: 9.613 days, wall time: 3.136 minutes, Δt: 8.571 minutes, CFL: 7.50e-01\ni:   1180, sim time: 9.733 days, wall time: 3.139 minutes, Δt: 8.967 minutes, CFL: 7.50e-01\ni:   1200, sim time: 9.853 days, wall time: 3.142 minutes, Δt: 9.340 minutes, CFL: 7.50e-01\ni:   1220, sim time: 9.982 days, wall time: 3.144 minutes, Δt: 9.456 minutes, CFL: 7.50e-01\n[ Info: Simulation is stopping after running for 3.145 minutes.\n[ Info: Simulation time 10 days equals or exceeds stop time 10 days.\n","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"Now load the saved output,","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"  ζ = FieldTimeSeries(\"eady_turbulence_bgc.jld2\", \"ζ\")\n  P = FieldTimeSeries(\"eady_turbulence_bgc.jld2\", \"P\")\nNO₃ = FieldTimeSeries(\"eady_turbulence_bgc.jld2\", \"NO₃\")\nNH₄ = FieldTimeSeries(\"eady_turbulence_bgc.jld2\", \"NH₄\")\nDIC = FieldTimeSeries(\"eady_turbulence_bgc.jld2\", \"DIC\")\n\ntimes = ζ.times\n\nxζ, yζ, zζ = nodes(ζ)\nxc, yc, zc = nodes(P)","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"and plot.","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"using CairoMakie\n\nn = Observable(1)\n\n  ζₙ = @lift interior(  ζ[$n], :, :, grid.Nz)\n  Nₙ = @lift interior(NO₃[$n], :, :, grid.Nz) .+ interior(NH₄[$n], :, :, grid.Nz)\n  Pₙ = @lift interior(  P[$n], :, :, grid.Nz)\nDICₙ = @lift interior(DIC[$n], :, :, grid.Nz)\n\nfig = Figure(size = (1600, 1600), fontsize = 20)\n\nlims = [(minimum(T), maximum(T)) for T in (  ζ[:, :, grid.Nz, :],\n                                           NO₃[:, :, grid.Nz, :] .+ NH₄[:, :, grid.Nz, :],\n                                             P[:, :, grid.Nz, :],\n                                           DIC[:, :, grid.Nz, :])]\n\naxis_kwargs = (xlabel = \"x (m)\", ylabel = \"y (m)\", aspect = DataAspect())\n\nax1 = Axis(fig[1, 1]; title = \"Vertical vorticity (1 / s)\", axis_kwargs...)\nhm1 = heatmap!(ax1, xζ, yζ, ζₙ, colormap = :balance, colorrange = lims[1])\nColorbar(fig[1, 2], hm1)\n\nax2 = Axis(fig[1, 3]; title = \"Nutrient (NO₃ + NH₄) concentration (mmol N / m³)\", axis_kwargs...)\nhm2 = heatmap!(ax2, xc, yc, Nₙ, colormap = Reverse(:bamako), colorrange = lims[2])\nColorbar(fig[1, 4], hm2)\n\nax3 = Axis(fig[2, 1]; title = \"Phytoplankton concentration (mmol N / m³)\", axis_kwargs...)\nhm3 = heatmap!(ax3, xc, yc, Pₙ, colormap = Reverse(:batlow), colorrange = lims[3])\nColorbar(fig[2, 2], hm3)\n\nax4 = Axis(fig[2, 3]; title = \"Dissolved inorganic carbon (mmol C / m³)\", axis_kwargs...)\nhm4 = heatmap!(ax4, xc, yc, DICₙ, colormap = Reverse(:devon), colorrange = lims[4])\nColorbar(fig[2, 4], hm4)\n\ntitle = @lift \"t = $(prettytime(times[$n]))\"\nLabel(fig[0, :], title, fontsize = 30)\n\nrecord(fig, \"eady.mp4\", 1:length(times), framerate = 12) do i\n    n[] = i\nend","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"(Image: )","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"","category":"page"},{"location":"generated/eady/","page":"Baroclinic instability","title":"Baroclinic instability","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/OceanBioME.Models.SedimentModels.InstantRemineralisation_parameters/#OceanBioME.Models.SedimentModels.InstantRemineralisation-default-parameters","page":"OceanBioME.Models.SedimentModels.InstantRemineralisation","title":"OceanBioME.Models.SedimentModels.InstantRemineralisation default parameters","text":"","category":"section"},{"location":"generated/OceanBioME.Models.SedimentModels.InstantRemineralisation_parameters/","page":"OceanBioME.Models.SedimentModels.InstantRemineralisation","title":"OceanBioME.Models.SedimentModels.InstantRemineralisation","text":"Name Value\nburial_efficiency_constant1 0.013\nburial_efficiency_constant2 0.53\nburial_efficiency_half_saturation 1.0670731707317074\nsinking_tracers (:P, :D)\nremineralisation_reciever N","category":"page"}]
}
